/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#include "UltraEngine.h"



#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_UltraAppKit(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_UltraAppKit(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_UltraAppKit(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


/* Callback for returning strings to C# without leaking memory */
typedef void * (SWIGSTDCALL* SWIG_CSharpWStringHelperCallback)(const wchar_t *);
static SWIG_CSharpWStringHelperCallback SWIG_csharp_wstring_callback = NULL;


#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterWStringCallback_UltraAppKit(SWIG_CSharpWStringHelperCallback callback) {
  SWIG_csharp_wstring_callback = callback;
}

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };
}




#include <string>


#include <string>


#include <algorithm>
#include <array>
#include <stdexcept>


#include <typeinfo>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <list>
#include <algorithm>
#include <stdexcept>

SWIGINTERN std::vector< float > *new_std_vector_Sl_float_Sg___SWIG_2(int capacity){
        std::vector< float >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< float >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN float std_vector_Sl_float_Sg__getitemcopy(std::vector< float > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< float >::value_type const &std_vector_Sl_float_Sg__getitem(std::vector< float > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_float_Sg__setitem(std::vector< float > *self,int index,float const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_float_Sg__AddRange(std::vector< float > *self,std::vector< float > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< float > *std_vector_Sl_float_Sg__GetRange(std::vector< float > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< float >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_float_Sg__Insert(std::vector< float > *self,int index,float const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_float_Sg__InsertRange(std::vector< float > *self,int index,std::vector< float > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_float_Sg__RemoveAt(std::vector< float > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_float_Sg__RemoveRange(std::vector< float > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< float > *std_vector_Sl_float_Sg__Repeat(float const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< float >(count, value);
      }
SWIGINTERN void std_vector_Sl_float_Sg__Reverse__SWIG_0(std::vector< float > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_float_Sg__Reverse__SWIG_1(std::vector< float > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_float_Sg__SetRange(std::vector< float > *self,int index,std::vector< float > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_float_Sg__Contains(std::vector< float > *self,float const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_float_Sg__IndexOf(std::vector< float > *self,float const &value){
        int index = -1;
        std::vector< float >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_float_Sg__LastIndexOf(std::vector< float > *self,float const &value){
        int index = -1;
        std::vector< float >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_float_Sg__Remove(std::vector< float > *self,float const &value){
        std::vector< float >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Display > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::Display> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::Display> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Display > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Display > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,std::shared_ptr< UltraEngine::Display > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::Display > > *self,std::vector< std::shared_ptr< UltraEngine::Display > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Display > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::Display> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,std::shared_ptr< UltraEngine::Display > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Display > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Display > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::Display > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::Display> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::Display > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::Display > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Display > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::Display > > *self,std::shared_ptr< UltraEngine::Display > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::Display > > *self,std::shared_ptr< UltraEngine::Display > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Display> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::Display > > *self,std::shared_ptr< UltraEngine::Display > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Display> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::Display > > *self,std::shared_ptr< UltraEngine::Display > const &value){
        std::vector< std::shared_ptr<UltraEngine::Display> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Pixmap > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::Pixmap> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::Pixmap> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Pixmap > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Pixmap > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,std::shared_ptr< UltraEngine::Pixmap > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Pixmap > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::Pixmap> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,std::shared_ptr< UltraEngine::Pixmap > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Pixmap > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::Pixmap > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::Pixmap> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,std::shared_ptr< UltraEngine::Pixmap > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,std::shared_ptr< UltraEngine::Pixmap > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Pixmap> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,std::shared_ptr< UltraEngine::Pixmap > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Pixmap> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::Pixmap > > *self,std::shared_ptr< UltraEngine::Pixmap > const &value){
        std::vector< std::shared_ptr<UltraEngine::Pixmap> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::TreeViewNode > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,std::shared_ptr< UltraEngine::TreeViewNode > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,std::shared_ptr< UltraEngine::TreeViewNode > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::TreeViewNode > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,int index,std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,std::shared_ptr< UltraEngine::TreeViewNode > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,std::shared_ptr< UltraEngine::TreeViewNode > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,std::shared_ptr< UltraEngine::TreeViewNode > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *self,std::shared_ptr< UltraEngine::TreeViewNode > const &value){
        std::vector< std::shared_ptr<UltraEngine::TreeViewNode> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Loader > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::Loader> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::Loader> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Loader > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Loader > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,std::shared_ptr< UltraEngine::Loader > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,std::vector< std::shared_ptr< UltraEngine::Loader > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Loader > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::Loader> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,std::shared_ptr< UltraEngine::Loader > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Loader > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Loader > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::Loader > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::Loader> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::Loader > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Loader > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,std::shared_ptr< UltraEngine::Loader > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,std::shared_ptr< UltraEngine::Loader > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Loader> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,std::shared_ptr< UltraEngine::Loader > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Loader> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::Loader > > *self,std::shared_ptr< UltraEngine::Loader > const &value){
        std::vector< std::shared_ptr<UltraEngine::Loader> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Widget > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::Widget> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::Widget> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Widget > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Widget > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,std::shared_ptr< UltraEngine::Widget > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,std::vector< std::shared_ptr< UltraEngine::Widget > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Widget > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::Widget> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,std::shared_ptr< UltraEngine::Widget > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Widget > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Widget > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::Widget > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::Widget> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::Widget > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Widget > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,std::shared_ptr< UltraEngine::Widget > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,std::shared_ptr< UltraEngine::Widget > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Widget> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,std::shared_ptr< UltraEngine::Widget > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Widget> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::Widget > > *self,std::shared_ptr< UltraEngine::Widget > const &value){
        std::vector< std::shared_ptr<UltraEngine::Widget> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Window > > *new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr<UltraEngine::Window> >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr<UltraEngine::Window> >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Window > std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Window > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__getitem(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__setitem(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,std::shared_ptr< UltraEngine::Window > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__AddRange(std::vector< std::shared_ptr< UltraEngine::Window > > *self,std::vector< std::shared_ptr< UltraEngine::Window > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Window > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__GetRange(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr<UltraEngine::Window> >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Insert(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,std::shared_ptr< UltraEngine::Window > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__InsertRange(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Window > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< UltraEngine::Window > > *std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Repeat(std::shared_ptr< UltraEngine::Window > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr<UltraEngine::Window> >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< UltraEngine::Window > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__SetRange(std::vector< std::shared_ptr< UltraEngine::Window > > *self,int index,std::vector< std::shared_ptr< UltraEngine::Window > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Contains(std::vector< std::shared_ptr< UltraEngine::Window > > *self,std::shared_ptr< UltraEngine::Window > const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__IndexOf(std::vector< std::shared_ptr< UltraEngine::Window > > *self,std::shared_ptr< UltraEngine::Window > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Window> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__LastIndexOf(std::vector< std::shared_ptr< UltraEngine::Window > > *self,std::shared_ptr< UltraEngine::Window > const &value){
        int index = -1;
        std::vector< std::shared_ptr<UltraEngine::Window> >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Remove(std::vector< std::shared_ptr< UltraEngine::Window > > *self,std::shared_ptr< UltraEngine::Window > const &value){
        std::vector< std::shared_ptr<UltraEngine::Window> >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::string > *new_std_vector_Sl_std_string_Sg___SWIG_2(int capacity){
        std::vector< std::string >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::string >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::string std_vector_Sl_std_string_Sg__getitemcopy(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::string >::value_type const &std_vector_Sl_std_string_Sg__getitem(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__setitem(std::vector< std::string > *self,int index,std::string const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__AddRange(std::vector< std::string > *self,std::vector< std::string > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::string > *std_vector_Sl_std_string_Sg__GetRange(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::string >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Insert(std::vector< std::string > *self,int index,std::string const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__InsertRange(std::vector< std::string > *self,int index,std::vector< std::string > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__RemoveAt(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__RemoveRange(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::string > *std_vector_Sl_std_string_Sg__Repeat(std::string const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::string >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Reverse__SWIG_0(std::vector< std::string > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Reverse__SWIG_1(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__SetRange(std::vector< std::string > *self,int index,std::vector< std::string > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_string_Sg__Contains(std::vector< std::string > *self,std::string const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_string_Sg__IndexOf(std::vector< std::string > *self,std::string const &value){
        int index = -1;
        std::vector< std::string >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_string_Sg__LastIndexOf(std::vector< std::string > *self,std::string const &value){
        int index = -1;
        std::vector< std::string >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_string_Sg__Remove(std::vector< std::string > *self,std::string const &value){
        std::vector< std::string >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< std::wstring > *new_std_vector_Sl_std_wstring_Sg___SWIG_2(int capacity){
        std::vector< std::wstring >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::wstring >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::wstring std_vector_Sl_std_wstring_Sg__getitemcopy(std::vector< std::wstring > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::wstring >::value_type const &std_vector_Sl_std_wstring_Sg__getitem(std::vector< std::wstring > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__setitem(std::vector< std::wstring > *self,int index,std::wstring const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__AddRange(std::vector< std::wstring > *self,std::vector< std::wstring > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::wstring > *std_vector_Sl_std_wstring_Sg__GetRange(std::vector< std::wstring > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::wstring >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__Insert(std::vector< std::wstring > *self,int index,std::wstring const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__InsertRange(std::vector< std::wstring > *self,int index,std::vector< std::wstring > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__RemoveAt(std::vector< std::wstring > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__RemoveRange(std::vector< std::wstring > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::wstring > *std_vector_Sl_std_wstring_Sg__Repeat(std::wstring const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::wstring >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__Reverse__SWIG_0(std::vector< std::wstring > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__Reverse__SWIG_1(std::vector< std::wstring > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_wstring_Sg__SetRange(std::vector< std::wstring > *self,int index,std::vector< std::wstring > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_wstring_Sg__Contains(std::vector< std::wstring > *self,std::wstring const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_wstring_Sg__IndexOf(std::vector< std::wstring > *self,std::wstring const &value){
        int index = -1;
        std::vector< std::wstring >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_wstring_Sg__LastIndexOf(std::vector< std::wstring > *self,std::wstring const &value){
        int index = -1;
        std::vector< std::wstring >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_wstring_Sg__Remove(std::vector< std::wstring > *self,std::wstring const &value){
        std::vector< std::wstring >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< UltraEngine::iVec2 > *new_std_vector_Sl_UltraEngine_iVec2_Sg___SWIG_2(int capacity){
        std::vector< UltraEngine::iVec2 >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< UltraEngine::iVec2 >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN UltraEngine::iVec2 std_vector_Sl_UltraEngine_iVec2_Sg__getitemcopy(std::vector< UltraEngine::iVec2 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< UltraEngine::iVec2 >::value_type const &std_vector_Sl_UltraEngine_iVec2_Sg__getitem(std::vector< UltraEngine::iVec2 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__setitem(std::vector< UltraEngine::iVec2 > *self,int index,UltraEngine::iVec2 const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__AddRange(std::vector< UltraEngine::iVec2 > *self,std::vector< UltraEngine::iVec2 > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< UltraEngine::iVec2 > *std_vector_Sl_UltraEngine_iVec2_Sg__GetRange(std::vector< UltraEngine::iVec2 > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< UltraEngine::iVec2 >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__Insert(std::vector< UltraEngine::iVec2 > *self,int index,UltraEngine::iVec2 const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__InsertRange(std::vector< UltraEngine::iVec2 > *self,int index,std::vector< UltraEngine::iVec2 > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__RemoveAt(std::vector< UltraEngine::iVec2 > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__RemoveRange(std::vector< UltraEngine::iVec2 > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< UltraEngine::iVec2 > *std_vector_Sl_UltraEngine_iVec2_Sg__Repeat(UltraEngine::iVec2 const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< UltraEngine::iVec2 >(count, value);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__Reverse__SWIG_0(std::vector< UltraEngine::iVec2 > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__Reverse__SWIG_1(std::vector< UltraEngine::iVec2 > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_iVec2_Sg__SetRange(std::vector< UltraEngine::iVec2 > *self,int index,std::vector< UltraEngine::iVec2 > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_iVec2_Sg__Contains(std::vector< UltraEngine::iVec2 > *self,UltraEngine::iVec2 const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_UltraEngine_iVec2_Sg__IndexOf(std::vector< UltraEngine::iVec2 > *self,UltraEngine::iVec2 const &value){
        int index = -1;
        std::vector< UltraEngine::iVec2 >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_UltraEngine_iVec2_Sg__LastIndexOf(std::vector< UltraEngine::iVec2 > *self,UltraEngine::iVec2 const &value){
        int index = -1;
        std::vector< UltraEngine::iVec2 >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_iVec2_Sg__Remove(std::vector< UltraEngine::iVec2 > *self,UltraEngine::iVec2 const &value){
        std::vector< UltraEngine::iVec2 >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< UltraEngine::String > *new_std_vector_Sl_UltraEngine_String_Sg___SWIG_2(int capacity){
        std::vector< UltraEngine::String >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< UltraEngine::String >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN UltraEngine::String std_vector_Sl_UltraEngine_String_Sg__getitemcopy(std::vector< UltraEngine::String > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< UltraEngine::String >::value_type const &std_vector_Sl_UltraEngine_String_Sg__getitem(std::vector< UltraEngine::String > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }

struct SWIG_null_deleter {
  void operator() (void const *) const {
  }
};
#define SWIG_NO_NULL_DELETER_0 , SWIG_null_deleter()
#define SWIG_NO_NULL_DELETER_1
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_NEW
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_OWN

SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__setitem(std::vector< UltraEngine::String > *self,int index,UltraEngine::String const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__AddRange(std::vector< UltraEngine::String > *self,std::vector< UltraEngine::String > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< UltraEngine::String > *std_vector_Sl_UltraEngine_String_Sg__GetRange(std::vector< UltraEngine::String > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< UltraEngine::String >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__Insert(std::vector< UltraEngine::String > *self,int index,UltraEngine::String const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__InsertRange(std::vector< UltraEngine::String > *self,int index,std::vector< UltraEngine::String > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__RemoveAt(std::vector< UltraEngine::String > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__RemoveRange(std::vector< UltraEngine::String > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< UltraEngine::String > *std_vector_Sl_UltraEngine_String_Sg__Repeat(UltraEngine::String const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< UltraEngine::String >(count, value);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__Reverse__SWIG_0(std::vector< UltraEngine::String > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__Reverse__SWIG_1(std::vector< UltraEngine::String > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_String_Sg__SetRange(std::vector< UltraEngine::String > *self,int index,std::vector< UltraEngine::String > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_String_Sg__Contains(std::vector< UltraEngine::String > *self,UltraEngine::String const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_UltraEngine_String_Sg__IndexOf(std::vector< UltraEngine::String > *self,UltraEngine::String const &value){
        int index = -1;
        std::vector< UltraEngine::String >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_UltraEngine_String_Sg__LastIndexOf(std::vector< UltraEngine::String > *self,UltraEngine::String const &value){
        int index = -1;
        std::vector< UltraEngine::String >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_String_Sg__Remove(std::vector< UltraEngine::String > *self,UltraEngine::String const &value){
        std::vector< UltraEngine::String >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< UltraEngine::WString > *new_std_vector_Sl_UltraEngine_WString_Sg___SWIG_2(int capacity){
        std::vector< UltraEngine::WString >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< UltraEngine::WString >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN UltraEngine::WString std_vector_Sl_UltraEngine_WString_Sg__getitemcopy(std::vector< UltraEngine::WString > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< UltraEngine::WString >::value_type const &std_vector_Sl_UltraEngine_WString_Sg__getitem(std::vector< UltraEngine::WString > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__setitem(std::vector< UltraEngine::WString > *self,int index,UltraEngine::WString const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__AddRange(std::vector< UltraEngine::WString > *self,std::vector< UltraEngine::WString > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< UltraEngine::WString > *std_vector_Sl_UltraEngine_WString_Sg__GetRange(std::vector< UltraEngine::WString > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< UltraEngine::WString >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__Insert(std::vector< UltraEngine::WString > *self,int index,UltraEngine::WString const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__InsertRange(std::vector< UltraEngine::WString > *self,int index,std::vector< UltraEngine::WString > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__RemoveAt(std::vector< UltraEngine::WString > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__RemoveRange(std::vector< UltraEngine::WString > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< UltraEngine::WString > *std_vector_Sl_UltraEngine_WString_Sg__Repeat(UltraEngine::WString const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< UltraEngine::WString >(count, value);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__Reverse__SWIG_0(std::vector< UltraEngine::WString > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__Reverse__SWIG_1(std::vector< UltraEngine::WString > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WString_Sg__SetRange(std::vector< UltraEngine::WString > *self,int index,std::vector< UltraEngine::WString > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_WString_Sg__Contains(std::vector< UltraEngine::WString > *self,UltraEngine::WString const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_UltraEngine_WString_Sg__IndexOf(std::vector< UltraEngine::WString > *self,UltraEngine::WString const &value){
        int index = -1;
        std::vector< UltraEngine::WString >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_UltraEngine_WString_Sg__LastIndexOf(std::vector< UltraEngine::WString > *self,UltraEngine::WString const &value){
        int index = -1;
        std::vector< UltraEngine::WString >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_UltraEngine_WString_Sg__Remove(std::vector< UltraEngine::WString > *self,UltraEngine::WString const &value){
        std::vector< UltraEngine::WString >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< UltraEngine::WidgetBlock > *new_std_vector_Sl_UltraEngine_WidgetBlock_Sg___SWIG_2(int capacity){
        std::vector< UltraEngine::WidgetBlock >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< UltraEngine::WidgetBlock >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN UltraEngine::WidgetBlock std_vector_Sl_UltraEngine_WidgetBlock_Sg__getitemcopy(std::vector< UltraEngine::WidgetBlock > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< UltraEngine::WidgetBlock >::value_type const &std_vector_Sl_UltraEngine_WidgetBlock_Sg__getitem(std::vector< UltraEngine::WidgetBlock > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__setitem(std::vector< UltraEngine::WidgetBlock > *self,int index,UltraEngine::WidgetBlock const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__AddRange(std::vector< UltraEngine::WidgetBlock > *self,std::vector< UltraEngine::WidgetBlock > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< UltraEngine::WidgetBlock > *std_vector_Sl_UltraEngine_WidgetBlock_Sg__GetRange(std::vector< UltraEngine::WidgetBlock > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< UltraEngine::WidgetBlock >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__Insert(std::vector< UltraEngine::WidgetBlock > *self,int index,UltraEngine::WidgetBlock const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__InsertRange(std::vector< UltraEngine::WidgetBlock > *self,int index,std::vector< UltraEngine::WidgetBlock > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__RemoveAt(std::vector< UltraEngine::WidgetBlock > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__RemoveRange(std::vector< UltraEngine::WidgetBlock > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< UltraEngine::WidgetBlock > *std_vector_Sl_UltraEngine_WidgetBlock_Sg__Repeat(UltraEngine::WidgetBlock const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< UltraEngine::WidgetBlock >(count, value);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__Reverse__SWIG_0(std::vector< UltraEngine::WidgetBlock > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__Reverse__SWIG_1(std::vector< UltraEngine::WidgetBlock > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetBlock_Sg__SetRange(std::vector< UltraEngine::WidgetBlock > *self,int index,std::vector< UltraEngine::WidgetBlock > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< UltraEngine::WidgetItem > *new_std_vector_Sl_UltraEngine_WidgetItem_Sg___SWIG_2(int capacity){
        std::vector< UltraEngine::WidgetItem >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< UltraEngine::WidgetItem >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN UltraEngine::WidgetItem std_vector_Sl_UltraEngine_WidgetItem_Sg__getitemcopy(std::vector< UltraEngine::WidgetItem > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< UltraEngine::WidgetItem >::value_type const &std_vector_Sl_UltraEngine_WidgetItem_Sg__getitem(std::vector< UltraEngine::WidgetItem > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__setitem(std::vector< UltraEngine::WidgetItem > *self,int index,UltraEngine::WidgetItem const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__AddRange(std::vector< UltraEngine::WidgetItem > *self,std::vector< UltraEngine::WidgetItem > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< UltraEngine::WidgetItem > *std_vector_Sl_UltraEngine_WidgetItem_Sg__GetRange(std::vector< UltraEngine::WidgetItem > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< UltraEngine::WidgetItem >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__Insert(std::vector< UltraEngine::WidgetItem > *self,int index,UltraEngine::WidgetItem const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__InsertRange(std::vector< UltraEngine::WidgetItem > *self,int index,std::vector< UltraEngine::WidgetItem > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__RemoveAt(std::vector< UltraEngine::WidgetItem > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__RemoveRange(std::vector< UltraEngine::WidgetItem > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< UltraEngine::WidgetItem > *std_vector_Sl_UltraEngine_WidgetItem_Sg__Repeat(UltraEngine::WidgetItem const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< UltraEngine::WidgetItem >(count, value);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__Reverse__SWIG_0(std::vector< UltraEngine::WidgetItem > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__Reverse__SWIG_1(std::vector< UltraEngine::WidgetItem > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_UltraEngine_WidgetItem_Sg__SetRange(std::vector< UltraEngine::WidgetItem > *self,int index,std::vector< UltraEngine::WidgetItem > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN UltraEngine::Vec4 std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__getitemcopy(std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::const_reference std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__getitem(std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__setitem(std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *self,int index,std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::const_reference val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__Reverse__SWIG_0(std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__Reverse__SWIG_1(std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN int std_array_Sl_int_Sc_4_Sg__getitemcopy(std::array< int,4 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::array< int,4 >::const_reference std_array_Sl_int_Sc_4_Sg__getitem(std::array< int,4 > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_array_Sl_int_Sc_4_Sg__setitem(std::array< int,4 > *self,int index,std::array< int,4 >::const_reference val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_array_Sl_int_Sc_4_Sg__Reverse__SWIG_0(std::array< int,4 > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_array_Sl_int_Sc_4_Sg__Reverse__SWIG_1(std::array< int,4 > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::list< UltraEngine::EventListener >::const_reference std_list_Sl_UltraEngine_EventListener_Sg__getItem(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter){
      return **iter;
    }
SWIGINTERN void std_list_Sl_UltraEngine_EventListener_Sg__setItem(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter,UltraEngine::EventListener const &val){
      *(*iter) = val;
    }
SWIGINTERN std::list< UltraEngine::EventListener >::iterator *std_list_Sl_UltraEngine_EventListener_Sg__getFirstIter(std::list< UltraEngine::EventListener > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< UltraEngine::EventListener >::iterator(self->begin());
    }
SWIGINTERN std::list< UltraEngine::EventListener >::iterator *std_list_Sl_UltraEngine_EventListener_Sg__getLastIter(std::list< UltraEngine::EventListener > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< UltraEngine::EventListener >::iterator(--self->end());
    }
SWIGINTERN std::list< UltraEngine::EventListener >::iterator *std_list_Sl_UltraEngine_EventListener_Sg__getNextIter(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter){
      std::list< UltraEngine::EventListener >::iterator it = *iter;
      if (std::distance(it, --self->end()) != 0) {
        std::list< UltraEngine::EventListener >::iterator* itnext = new std::list< UltraEngine::EventListener >::iterator(++it);
        return itnext;
      }
      return NULL;
    }
SWIGINTERN std::list< UltraEngine::EventListener >::iterator *std_list_Sl_UltraEngine_EventListener_Sg__getPrevIter(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter){
      std::list< UltraEngine::EventListener >::iterator it = *iter;
      if (std::distance(self->begin(), it) != 0) {
        std::list< UltraEngine::EventListener >::iterator* itprev = new std::list< UltraEngine::EventListener >::iterator(--it);
        return itprev;
      }
      return NULL;
    }
SWIGINTERN std::list< UltraEngine::EventListener >::iterator *std_list_Sl_UltraEngine_EventListener_Sg__insertNode(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter,UltraEngine::EventListener const &value){
      std::list< UltraEngine::EventListener >::iterator it = self->insert(*iter, value);
      return new std::list< UltraEngine::EventListener >::iterator(it);
    }
SWIGINTERN void std_list_Sl_UltraEngine_EventListener_Sg__eraseIter(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter){
      std::list< UltraEngine::EventListener >::iterator it = *iter;
      self->erase(it);
    }
SWIGINTERN void std_list_Sl_UltraEngine_EventListener_Sg__deleteIter(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter){
      delete iter;
    }
SWIGINTERN bool std_list_Sl_UltraEngine_EventListener_Sg__equals(std::list< UltraEngine::EventListener > *self,std::list< UltraEngine::EventListener >::iterator *iter1,std::list< UltraEngine::EventListener >::iterator *iter2){
      if (iter1 == NULL && iter2 == NULL)
        return true;
      std::list< UltraEngine::EventListener >::iterator it1 = *iter1;
      std::list< UltraEngine::EventListener >::iterator it2 = *iter2;
      return it1 == it2;
    }
SWIGINTERN std::list< UltraEngine::Event >::const_reference std_list_Sl_UltraEngine_Event_Sg__getItem(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter){
      return **iter;
    }
SWIGINTERN void std_list_Sl_UltraEngine_Event_Sg__setItem(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter,UltraEngine::Event const &val){
      *(*iter) = val;
    }
SWIGINTERN std::list< UltraEngine::Event >::iterator *std_list_Sl_UltraEngine_Event_Sg__getFirstIter(std::list< UltraEngine::Event > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< UltraEngine::Event >::iterator(self->begin());
    }
SWIGINTERN std::list< UltraEngine::Event >::iterator *std_list_Sl_UltraEngine_Event_Sg__getLastIter(std::list< UltraEngine::Event > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< UltraEngine::Event >::iterator(--self->end());
    }
SWIGINTERN std::list< UltraEngine::Event >::iterator *std_list_Sl_UltraEngine_Event_Sg__getNextIter(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter){
      std::list< UltraEngine::Event >::iterator it = *iter;
      if (std::distance(it, --self->end()) != 0) {
        std::list< UltraEngine::Event >::iterator* itnext = new std::list< UltraEngine::Event >::iterator(++it);
        return itnext;
      }
      return NULL;
    }
SWIGINTERN std::list< UltraEngine::Event >::iterator *std_list_Sl_UltraEngine_Event_Sg__getPrevIter(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter){
      std::list< UltraEngine::Event >::iterator it = *iter;
      if (std::distance(self->begin(), it) != 0) {
        std::list< UltraEngine::Event >::iterator* itprev = new std::list< UltraEngine::Event >::iterator(--it);
        return itprev;
      }
      return NULL;
    }
SWIGINTERN std::list< UltraEngine::Event >::iterator *std_list_Sl_UltraEngine_Event_Sg__insertNode(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter,UltraEngine::Event const &value){
      std::list< UltraEngine::Event >::iterator it = self->insert(*iter, value);
      return new std::list< UltraEngine::Event >::iterator(it);
    }
SWIGINTERN void std_list_Sl_UltraEngine_Event_Sg__eraseIter(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter){
      std::list< UltraEngine::Event >::iterator it = *iter;
      self->erase(it);
    }
SWIGINTERN void std_list_Sl_UltraEngine_Event_Sg__deleteIter(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter){
      delete iter;
    }
SWIGINTERN bool std_list_Sl_UltraEngine_Event_Sg__equals(std::list< UltraEngine::Event > *self,std::list< UltraEngine::Event >::iterator *iter1,std::list< UltraEngine::Event >::iterator *iter2){
      if (iter1 == NULL && iter2 == NULL)
        return true;
      std::list< UltraEngine::Event >::iterator it1 = *iter1;
      std::list< UltraEngine::Event >::iterator it2 = *iter2;
      return it1 == it2;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::const_reference std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getItem(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter){
      return **iter;
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__setItem(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter,std::weak_ptr< UltraEngine::Package > const &val){
      *(*iter) = val;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getFirstIter(std::list< std::weak_ptr< UltraEngine::Package > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Package > >::iterator(self->begin());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getLastIter(std::list< std::weak_ptr< UltraEngine::Package > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Package > >::iterator(--self->end());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getNextIter(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it = *iter;
      if (std::distance(it, --self->end()) != 0) {
        std::list< std::weak_ptr< UltraEngine::Package > >::iterator* itnext = new std::list< std::weak_ptr< UltraEngine::Package > >::iterator(++it);
        return itnext;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getPrevIter(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it = *iter;
      if (std::distance(self->begin(), it) != 0) {
        std::list< std::weak_ptr< UltraEngine::Package > >::iterator* itprev = new std::list< std::weak_ptr< UltraEngine::Package > >::iterator(--it);
        return itprev;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Package > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__insertNode(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter,std::weak_ptr< UltraEngine::Package > const &value){
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it = self->insert(*iter, value);
      return new std::list< std::weak_ptr< UltraEngine::Package > >::iterator(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__eraseIter(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it = *iter;
      self->erase(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__deleteIter(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter){
      delete iter;
    }
SWIGINTERN bool std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__equals(std::list< std::weak_ptr< UltraEngine::Package > > *self,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter1,std::list< std::weak_ptr< UltraEngine::Package > >::iterator *iter2){
      if (iter1 == NULL && iter2 == NULL)
        return true;
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it1 = *iter1;
      std::list< std::weak_ptr< UltraEngine::Package > >::iterator it2 = *iter2;
      return it1 == it2;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::const_reference std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getItem(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter){
      return **iter;
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__setItem(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter,std::weak_ptr< UltraEngine::Plugin > const &val){
      *(*iter) = val;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getFirstIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator(self->begin());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getLastIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator(--self->end());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getNextIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it = *iter;
      if (std::distance(it, --self->end()) != 0) {
        std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator* itnext = new std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator(++it);
        return itnext;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getPrevIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it = *iter;
      if (std::distance(self->begin(), it) != 0) {
        std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator* itprev = new std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator(--it);
        return itprev;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__insertNode(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter,std::weak_ptr< UltraEngine::Plugin > const &value){
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it = self->insert(*iter, value);
      return new std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__eraseIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it = *iter;
      self->erase(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__deleteIter(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter){
      delete iter;
    }
SWIGINTERN bool std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__equals(std::list< std::weak_ptr< UltraEngine::Plugin > > *self,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter1,std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *iter2){
      if (iter1 == NULL && iter2 == NULL)
        return true;
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it1 = *iter1;
      std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator it2 = *iter2;
      return it1 == it2;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::const_reference std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getItem(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter){
      return **iter;
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__setItem(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter,std::weak_ptr< UltraEngine::Widget > const &val){
      *(*iter) = val;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getFirstIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Widget > >::iterator(self->begin());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getLastIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self){
      if (self->size() == 0)
        return NULL;
      return new std::list< std::weak_ptr< UltraEngine::Widget > >::iterator(--self->end());
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getNextIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it = *iter;
      if (std::distance(it, --self->end()) != 0) {
        std::list< std::weak_ptr< UltraEngine::Widget > >::iterator* itnext = new std::list< std::weak_ptr< UltraEngine::Widget > >::iterator(++it);
        return itnext;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getPrevIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it = *iter;
      if (std::distance(self->begin(), it) != 0) {
        std::list< std::weak_ptr< UltraEngine::Widget > >::iterator* itprev = new std::list< std::weak_ptr< UltraEngine::Widget > >::iterator(--it);
        return itprev;
      }
      return NULL;
    }
SWIGINTERN std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__insertNode(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter,std::weak_ptr< UltraEngine::Widget > const &value){
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it = self->insert(*iter, value);
      return new std::list< std::weak_ptr< UltraEngine::Widget > >::iterator(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__eraseIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter){
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it = *iter;
      self->erase(it);
    }
SWIGINTERN void std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__deleteIter(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter){
      delete iter;
    }
SWIGINTERN bool std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__equals(std::list< std::weak_ptr< UltraEngine::Widget > > *self,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter1,std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *iter2){
      if (iter1 == NULL && iter2 == NULL)
        return true;
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it1 = *iter1;
      std::list< std::weak_ptr< UltraEngine::Widget > >::iterator it2 = *iter2;
      return it1 == it2;
    }
SWIGINTERN std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type const &std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__getitem(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &key){
        std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__setitem(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &key,std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__ContainsKey(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &key){
        std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__Add(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &key,std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type const &value){
        std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< int, std::weak_ptr< UltraEngine::Timer > >(key, value));
      }
SWIGINTERN bool std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__Remove(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &key){
        std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__create_iterator_begin(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self){
        return new std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator(self->begin());
      }
SWIGINTERN std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type const &std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__get_next_key(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *swigiterator){
        std::map< int, std::weak_ptr< UltraEngine::Timer >, std::less< int > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__destroy_iterator(std::map< int,std::weak_ptr< UltraEngine::Timer > > *self,std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type const &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__getitem(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__setitem(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &key,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__ContainsKey(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__Add(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &key,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type const &value){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::wstring, std::weak_ptr< UltraEngine::Asset > >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__Remove(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__create_iterator_begin(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self){
        return new std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type const &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__get_next_key(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *swigiterator){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Asset >, std::less< std::wstring > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__destroy_iterator(std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type const &std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__getitem(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &key){
        std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__setitem(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &key,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__ContainsKey(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &key){
        std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__Add(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &key,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type const &value){
        std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< HWND, std::weak_ptr< UltraEngine::Window > >(key, value));
      }
SWIGINTERN bool std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__Remove(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &key){
        std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__create_iterator_begin(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self){
        return new std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator(self->begin());
      }
SWIGINTERN std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type const &std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__get_next_key(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *swigiterator){
        std::map< HWND, std::weak_ptr< UltraEngine::Window >, std::less< HWND > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__destroy_iterator(std::map< HWND,std::weak_ptr< UltraEngine::Window > > *self,std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::map< std::wstring,std::wstring >::mapped_type const &std_map_Sl_std_wstring_Sc_std_wstring_Sg__getitem(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring >::key_type const &key){
        std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_wstring_Sg__setitem(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring >::key_type const &key,std::map< std::wstring,std::wstring >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_wstring_Sg__ContainsKey(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring >::key_type const &key){
        std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_wstring_Sg__Add(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring >::key_type const &key,std::map< std::wstring,std::wstring >::mapped_type const &value){
        std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::wstring, std::wstring >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_wstring_Sg__Remove(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring >::key_type const &key){
        std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *std_map_Sl_std_wstring_Sc_std_wstring_Sg__create_iterator_begin(std::map< std::wstring,std::wstring > *self){
        return new std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::wstring,std::wstring >::key_type const &std_map_Sl_std_wstring_Sc_std_wstring_Sg__get_next_key(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *swigiterator){
        std::map< std::wstring, std::wstring, std::less< std::wstring > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_wstring_Sg__destroy_iterator(std::map< std::wstring,std::wstring > *self,std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type const &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitem(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__setitem(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &key,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__ContainsKey(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Add(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &key,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type const &value){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::wstring, std::weak_ptr< UltraEngine::Pixmap > >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Remove(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &key){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__create_iterator_begin(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self){
        return new std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type const &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__get_next_key(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *swigiterator){
        std::map< std::wstring, std::weak_ptr< UltraEngine::Pixmap >, std::less< std::wstring > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__destroy_iterator(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *self,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type const &std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__getitem(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &key){
        std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__setitem(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &key,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__ContainsKey(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &key){
        std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__Add(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &key,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type const &value){
        std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > >(key, value));
      }
SWIGINTERN bool std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__Remove(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &key){
        std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__create_iterator_begin(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self){
        return new std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator(self->begin());
      }
SWIGINTERN std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type const &std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__get_next_key(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *swigiterator){
        std::map< float, std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >, std::less< float > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__destroy_iterator(std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *self,std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::shared_ptr< UltraEngine::Asset > UltraEngine_Object_AsAsset(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Asset>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Buffer > UltraEngine_Object_AsBuffer(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Buffer>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Clock > UltraEngine_Object_AsClock(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Clock>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Display > UltraEngine_Object_AsDisplay(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Display>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::FileSystemWatcher > UltraEngine_Object_AsFileSystemWatcher(UltraEngine::Object *self){
    return (self)->As<UltraEngine::FileSystemWatcher>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::GameEngine > UltraEngine_Object_AsGameEngine(UltraEngine::Object *self){
    return (self)->As<UltraEngine::GameEngine>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::IDSystem > UltraEngine_Object_AsIDSystem(UltraEngine::Object *self){
    return (self)->As<UltraEngine::IDSystem>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Interface > UltraEngine_Object_AsInterface(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Interface>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Language > UltraEngine_Object_AsLanguage(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Language>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Loader > UltraEngine_Object_AsLoader(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Loader>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Mutex > UltraEngine_Object_AsMutex(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Mutex>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Process > UltraEngine_Object_AsProcess(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Process>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Stream > UltraEngine_Object_AsStream(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Stream>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::String > UltraEngine_Object_AsString(UltraEngine::Object *self){
    return (self)->As<UltraEngine::String>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Thread > UltraEngine_Object_AsThread(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Thread>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Timer > UltraEngine_Object_AsTimer(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Timer>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::WString > UltraEngine_Object_AsWString(UltraEngine::Object *self){
    return (self)->As<UltraEngine::WString>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Widget > UltraEngine_Object_AsWidget(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Widget>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::WidgetItem > UltraEngine_Object_AsWidgetItem(UltraEngine::Object *self){
    return (self)->As<UltraEngine::WidgetItem>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Window > UltraEngine_Object_AsWindow(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Window>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::BufferStream > UltraEngine_Object_AsBufferStream(UltraEngine::Object *self){
    return (self)->As<UltraEngine::BufferStream>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Button > UltraEngine_Object_AsButton(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Button>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::ComboBox > UltraEngine_Object_AsComboBox(UltraEngine::Object *self){
    return (self)->As<UltraEngine::ComboBox>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::DDSTextureLoader > UltraEngine_Object_AsDDSTextureLoader(UltraEngine::Object *self){
    return (self)->As<UltraEngine::DDSTextureLoader>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Font > UltraEngine_Object_AsFont(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Font>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Icon > UltraEngine_Object_AsIcon(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Icon>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Label > UltraEngine_Object_AsLabel(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Label>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::ListBox > UltraEngine_Object_AsListBox(UltraEngine::Object *self){
    return (self)->As<UltraEngine::ListBox>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Menu > UltraEngine_Object_AsMenu(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Menu>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::MenuPanel > UltraEngine_Object_AsMenuPanel(UltraEngine::Object *self){
    return (self)->As<UltraEngine::MenuPanel>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Package > UltraEngine_Object_AsPackage(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Package>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Panel > UltraEngine_Object_AsPanel(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Panel>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::PipeStream > UltraEngine_Object_AsPipeStream(UltraEngine::Object *self){
    return (self)->As<UltraEngine::PipeStream>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Pixmap > UltraEngine_Object_AsPixmap(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Pixmap>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Plugin > UltraEngine_Object_AsPlugin(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Plugin>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::ProgressBar > UltraEngine_Object_AsProgressBar(UltraEngine::Object *self){
    return (self)->As<UltraEngine::ProgressBar>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Slider > UltraEngine_Object_AsSlider(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Slider>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::StreamBuffer > UltraEngine_Object_AsStreamBuffer(UltraEngine::Object *self){
    return (self)->As<UltraEngine::StreamBuffer>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Tabber > UltraEngine_Object_AsTabber(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Tabber>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::TextArea > UltraEngine_Object_AsTextArea(UltraEngine::Object *self){
    return (self)->As<UltraEngine::TextArea>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::TextField > UltraEngine_Object_AsTextField(UltraEngine::Object *self){
    return (self)->As<UltraEngine::TextField>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::TreeView > UltraEngine_Object_AsTreeView(UltraEngine::Object *self){
    return (self)->As<UltraEngine::TreeView>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::TreeViewNode > UltraEngine_Object_AsTreeViewNode(UltraEngine::Object *self){
    return (self)->As<UltraEngine::TreeViewNode>();
    }
SWIGINTERN std::shared_ptr< UltraEngine::Object > UltraEngine_Object_AsObject(UltraEngine::Object *self){
    return (self)->As<UltraEngine::Object>();
    }
SWIGINTERN bool UltraEngine_Object_CompareWith(UltraEngine::Object *self,UltraEngine::Object *a){
    if(a == self) return true;
    return &a == &self;
}


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "main.h"

SwigDirector_Widget::SwigDirector_Widget() : UltraEngine::Widget(), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Widget::~SwigDirector_Widget() {
  
}


void SwigDirector_Widget::Reset() {
  if (!swig_callbackReset) {
    UltraEngine::Widget::Reset();
    return;
  } else {
    swig_callbackReset();
  }
}

bool SwigDirector_Widget::OK() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackOK) {
    return UltraEngine::Widget::OK();
  } else {
    jresult = (unsigned int) swig_callbackOK();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_Widget::Cancel() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackCancel) {
    return UltraEngine::Widget::Cancel();
  } else {
    jresult = (unsigned int) swig_callbackCancel();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::UpdateColors() {
  if (!swig_callbackUpdateColors) {
    UltraEngine::Widget::UpdateColors();
    return;
  } else {
    swig_callbackUpdateColors();
  }
}

bool SwigDirector_Widget::Initialize(UltraEngine::WString const &text, int const x, int const y, int const width, int const height, std::shared_ptr< UltraEngine::Widget > parent, int const style) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jtext = 0 ;
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  void * jparent  ;
  int jstyle  ;
  
  if (!swig_callbackInitialize__SWIG_0) {
    return UltraEngine::Widget::Initialize(text,x,y,width,height,parent,style);
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    jparent = parent ? new std::shared_ptr<  UltraEngine::Widget >(parent) : 0; 
    jstyle = style;
    jresult = (unsigned int) swig_callbackInitialize__SWIG_0(jtext, jx, jy, jwidth, jheight, jparent, jstyle);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_Widget::Initialize(UltraEngine::WString const &text, int const x, int const y, int const width, int const height, std::shared_ptr< UltraEngine::Interface > parent, int const style) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jtext = 0 ;
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  void * jparent  ;
  int jstyle  ;
  
  if (!swig_callbackInitialize__SWIG_1) {
    return UltraEngine::Widget::Initialize(text,x,y,width,height,parent,style);
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    jparent = parent ? new std::shared_ptr<  UltraEngine::Interface >(parent) : 0; 
    jstyle = style;
    jresult = (unsigned int) swig_callbackInitialize__SWIG_1(jtext, jx, jy, jwidth, jheight, jparent, jstyle);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_Widget::SetParent(std::shared_ptr< UltraEngine::Widget > parent, int const position) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jparent  ;
  int jposition  ;
  
  if (!swig_callbackSetParent__SWIG_0) {
    return UltraEngine::Widget::SetParent(parent,position);
  } else {
    jparent = parent ? new std::shared_ptr<  UltraEngine::Widget >(parent) : 0; 
    jposition = position;
    jresult = (unsigned int) swig_callbackSetParent__SWIG_0(jparent, jposition);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::SetItemText(int const iten, UltraEngine::WString const &text) {
  int jiten  ;
  void * jtext = 0 ;
  
  if (!swig_callbackSetItemText) {
    UltraEngine::Widget::SetItemText(iten,text);
    return;
  } else {
    jiten = iten;
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    swig_callbackSetItemText(jiten, jtext);
  }
}

UltraEngine::WString SwigDirector_Widget::GetItemText(int const iten) {
  UltraEngine::WString c_result ;
  void * jresult = 0 ;
  int jiten  ;
  
  if (!swig_callbackGetItemText) {
    return UltraEngine::Widget::GetItemText(iten);
  } else {
    jiten = iten;
    jresult = (void *) swig_callbackGetItemText(jiten);
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString", 0);
      return c_result;
    }
    std::shared_ptr<  UltraEngine::WString > *smartarg = (std::shared_ptr<  UltraEngine::WString > *)jresult;
    c_result = *smartarg->get();
    
  }
  return c_result;
}

void SwigDirector_Widget::SetItemIcon(int const item, std::shared_ptr< UltraEngine::Icon > icon, float const scale) {
  int jitem  ;
  void * jicon  ;
  float jscale  ;
  
  if (!swig_callbackSetItemIcon__SWIG_0) {
    UltraEngine::Widget::SetItemIcon(item,icon,scale);
    return;
  } else {
    jitem = item;
    jicon = icon ? new std::shared_ptr<  UltraEngine::Icon >(icon) : 0; 
    jscale = scale;
    swig_callbackSetItemIcon__SWIG_0(jitem, jicon, jscale);
  }
}

void SwigDirector_Widget::SetItemPixmap(int const item, std::shared_ptr< UltraEngine::Pixmap > pixmap) {
  int jitem  ;
  void * jpixmap  ;
  
  if (!swig_callbackSetItemPixmap) {
    UltraEngine::Widget::SetItemPixmap(item,pixmap);
    return;
  } else {
    jitem = item;
    jpixmap = pixmap ? new std::shared_ptr<  UltraEngine::Pixmap >(pixmap) : 0; 
    swig_callbackSetItemPixmap(jitem, jpixmap);
  }
}

std::shared_ptr< UltraEngine::Widget > SwigDirector_Widget::AddNode(UltraEngine::WString const &text, std::shared_ptr< UltraEngine::Icon > icon) {
  std::shared_ptr< UltraEngine::Widget > c_result ;
  void * jresult = 0 ;
  void * jtext = 0 ;
  void * jicon  ;
  
  if (!swig_callbackAddNode__SWIG_0) {
    return UltraEngine::Widget::AddNode(text,icon);
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    jicon = icon ? new std::shared_ptr<  UltraEngine::Icon >(icon) : 0; 
    jresult = (void *) swig_callbackAddNode__SWIG_0(jtext, jicon);
    if (jresult) {
      std::shared_ptr<  UltraEngine::Widget > *smartarg = (std::shared_ptr<  UltraEngine::Widget > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

void SwigDirector_Widget::SetInteractive(bool const interactive) {
  unsigned int jinteractive  ;
  
  if (!swig_callbackSetInteractive) {
    UltraEngine::Widget::SetInteractive(interactive);
    return;
  } else {
    jinteractive = interactive;
    swig_callbackSetInteractive(jinteractive);
  }
}

void SwigDirector_Widget::SelectText(int const position, int const length) {
  int jposition  ;
  int jlength  ;
  
  if (!swig_callbackSelectText) {
    UltraEngine::Widget::SelectText(position,length);
    return;
  } else {
    jposition = position;
    jlength = length;
    swig_callbackSelectText(jposition, jlength);
  }
}

void SwigDirector_Widget::SetParent(std::shared_ptr< UltraEngine::Widget > parent) {
  void * jparent  ;
  
  if (!swig_callbackSetParent__SWIG_1) {
    UltraEngine::Widget::SetParent(parent);
    return;
  } else {
    jparent = parent ? new std::shared_ptr<  UltraEngine::Widget >(parent) : 0; 
    swig_callbackSetParent__SWIG_1(jparent);
  }
}

bool SwigDirector_Widget::Reload(nlohmann::json &j3) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jj3 = 0 ;
  
  if (!swig_callbackReload) {
    return UltraEngine::Widget::Reload(j3);
  } else {
    jj3 = (nlohmann::json *) &j3; 
    jresult = (unsigned int) swig_callbackReload(jj3);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

bool SwigDirector_Widget::Save(nlohmann::json &j3, UltraEngine::SaveFlags const flags) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jj3 = 0 ;
  int jflags  ;
  
  if (!swig_callbackSave) {
    return UltraEngine::Widget::Save(j3,flags);
  } else {
    jj3 = (nlohmann::json *) &j3; 
    jflags = (int)flags;
    jresult = (unsigned int) swig_callbackSave(jj3, jflags);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::SetRadius(int const radius) {
  int jradius  ;
  
  if (!swig_callbackSetRadius) {
    UltraEngine::Widget::SetRadius(radius);
    return;
  } else {
    jradius = radius;
    swig_callbackSetRadius(jradius);
  }
}

int SwigDirector_Widget::GetRadius() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbackGetRadius) {
    return UltraEngine::Widget::GetRadius();
  } else {
    jresult = (int) swig_callbackGetRadius();
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::SetPointer(UltraEngine::MousePointer const pointer) {
  int jpointer  ;
  
  if (!swig_callbackSetPointer) {
    UltraEngine::Widget::SetPointer(pointer);
    return;
  } else {
    jpointer = (int)pointer;
    swig_callbackSetPointer(jpointer);
  }
}

void SwigDirector_Widget::FilterItems(UltraEngine::WString const &filter) {
  void * jfilter = 0 ;
  
  if (!swig_callbackFilterItems) {
    UltraEngine::Widget::FilterItems(filter);
    return;
  } else {
    jfilter = new std::shared_ptr< const UltraEngine::WString > (&filter SWIG_NO_NULL_DELETER_0); 
    swig_callbackFilterItems(jfilter);
  }
}

std::shared_ptr< UltraEngine::Widget > SwigDirector_Widget::GetNext() {
  std::shared_ptr< UltraEngine::Widget > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetNext) {
    return UltraEngine::Widget::GetNext();
  } else {
    jresult = (void *) swig_callbackGetNext();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Widget > *smartarg = (std::shared_ptr<  UltraEngine::Widget > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

std::shared_ptr< UltraEngine::Widget > SwigDirector_Widget::GetPrev() {
  std::shared_ptr< UltraEngine::Widget > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetPrev) {
    return UltraEngine::Widget::GetPrev();
  } else {
    jresult = (void *) swig_callbackGetPrev();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Widget > *smartarg = (std::shared_ptr<  UltraEngine::Widget > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

void SwigDirector_Widget::CursorBlink() {
  if (!swig_callbackCursorBlink) {
    UltraEngine::Widget::CursorBlink();
    return;
  } else {
    swig_callbackCursorBlink();
  }
}

void SwigDirector_Widget::ModifyItem(int const index, UltraEngine::WString const &text) {
  int jindex  ;
  void * jtext = 0 ;
  
  if (!swig_callbackModifyItem) {
    UltraEngine::Widget::ModifyItem(index,text);
    return;
  } else {
    jindex = index;
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    swig_callbackModifyItem(jindex, jtext);
  }
}

void SwigDirector_Widget::WindowDragBegin() {
  if (!swig_callbackWindowDragBegin) {
    UltraEngine::Widget::WindowDragBegin();
    return;
  } else {
    swig_callbackWindowDragBegin();
  }
}

bool SwigDirector_Widget::ProcessEvent(UltraEngine::Event const &e) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * je = 0 ;
  
  if (!swig_callbackProcessEvent) {
    return UltraEngine::Widget::ProcessEvent(e);
  } else {
    je = (UltraEngine::Event *) &e; 
    jresult = (unsigned int) swig_callbackProcessEvent(je);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::MouseMove(int const x, int const y) {
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseMove) {
    UltraEngine::Widget::MouseMove(x,y);
    return;
  } else {
    jx = x;
    jy = y;
    swig_callbackMouseMove(jx, jy);
  }
}

void SwigDirector_Widget::MouseEnter(int const x, int const y) {
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseEnter) {
    UltraEngine::Widget::MouseEnter(x,y);
    return;
  } else {
    jx = x;
    jy = y;
    swig_callbackMouseEnter(jx, jy);
  }
}

void SwigDirector_Widget::MouseLeave(int const x, int const y) {
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseLeave) {
    UltraEngine::Widget::MouseLeave(x,y);
    return;
  } else {
    jx = x;
    jy = y;
    swig_callbackMouseLeave(jx, jy);
  }
}

void SwigDirector_Widget::MouseDown(UltraEngine::MouseButton const button, int const x, int const y) {
  int jbutton  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseDown) {
    UltraEngine::Widget::MouseDown(button,x,y);
    return;
  } else {
    jbutton = (int)button;
    jx = x;
    jy = y;
    swig_callbackMouseDown(jbutton, jx, jy);
  }
}

void SwigDirector_Widget::MouseRepeat(UltraEngine::MouseButton const button, int const x, int const y) {
  int jbutton  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseRepeat) {
    UltraEngine::Widget::MouseRepeat(button,x,y);
    return;
  } else {
    jbutton = (int)button;
    jx = x;
    jy = y;
    swig_callbackMouseRepeat(jbutton, jx, jy);
  }
}

void SwigDirector_Widget::MouseUp(UltraEngine::MouseButton const button, int const x, int const y) {
  int jbutton  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseUp) {
    UltraEngine::Widget::MouseUp(button,x,y);
    return;
  } else {
    jbutton = (int)button;
    jx = x;
    jy = y;
    swig_callbackMouseUp(jbutton, jx, jy);
  }
}

void SwigDirector_Widget::LoseFocus() {
  if (!swig_callbackLoseFocus) {
    UltraEngine::Widget::LoseFocus();
    return;
  } else {
    swig_callbackLoseFocus();
  }
}

void SwigDirector_Widget::DoubleClick(UltraEngine::MouseButton const button, int const x, int const y) {
  int jbutton  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackDoubleClick) {
    UltraEngine::Widget::DoubleClick(button,x,y);
    return;
  } else {
    jbutton = (int)button;
    jx = x;
    jy = y;
    swig_callbackDoubleClick(jbutton, jx, jy);
  }
}

void SwigDirector_Widget::TripleClick(UltraEngine::MouseButton const button, int const x, int const y) {
  int jbutton  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackTripleClick) {
    UltraEngine::Widget::TripleClick(button,x,y);
    return;
  } else {
    jbutton = (int)button;
    jx = x;
    jy = y;
    swig_callbackTripleClick(jbutton, jx, jy);
  }
}

void SwigDirector_Widget::GainFocus() {
  if (!swig_callbackGainFocus) {
    UltraEngine::Widget::GainFocus();
    return;
  } else {
    swig_callbackGainFocus();
  }
}

void SwigDirector_Widget::KeyDown(UltraEngine::KeyCode const key) {
  int jkey  ;
  
  if (!swig_callbackKeyDown) {
    UltraEngine::Widget::KeyDown(key);
    return;
  } else {
    jkey = (int)key;
    swig_callbackKeyDown(jkey);
  }
}

void SwigDirector_Widget::KeyUp(UltraEngine::KeyCode const key) {
  int jkey  ;
  
  if (!swig_callbackKeyUp) {
    UltraEngine::Widget::KeyUp(key);
    return;
  } else {
    jkey = (int)key;
    swig_callbackKeyUp(jkey);
  }
}

void SwigDirector_Widget::KeyChar(int const keychar) {
  int jkeychar  ;
  
  if (!swig_callbackKeyChar) {
    UltraEngine::Widget::KeyChar(keychar);
    return;
  } else {
    jkeychar = keychar;
    swig_callbackKeyChar(jkeychar);
  }
}

void SwigDirector_Widget::MouseWheel(int const delta, int const x, int const y) {
  int jdelta  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackMouseWheel) {
    UltraEngine::Widget::MouseWheel(delta,x,y);
    return;
  } else {
    jdelta = delta;
    jx = x;
    jy = y;
    swig_callbackMouseWheel(jdelta, jx, jy);
  }
}

void SwigDirector_Widget::Activate() {
  if (!swig_callbackActivate) {
    UltraEngine::Widget::Activate();
    return;
  } else {
    swig_callbackActivate();
  }
}

bool SwigDirector_Widget::FindOK() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackFindOK) {
    return UltraEngine::Widget::FindOK();
  } else {
    jresult = (unsigned int) swig_callbackFindOK();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::Paint(int const x, int const y, int const width, int const height) {
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  
  if (!swig_callbackPaint__SWIG_0) {
    UltraEngine::Widget::Paint(x,y,width,height);
    return;
  } else {
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    swig_callbackPaint__SWIG_0(jx, jy, jwidth, jheight);
  }
}

void SwigDirector_Widget::Paint() {
  if (!swig_callbackPaint__SWIG_1) {
    UltraEngine::Widget::Paint();
    return;
  } else {
    swig_callbackPaint__SWIG_1();
  }
}

bool SwigDirector_Widget::FindCancel() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackFindCancel) {
    return UltraEngine::Widget::FindCancel();
  } else {
    jresult = (unsigned int) swig_callbackFindCancel();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::SetSensitivity(int const sensitivity) {
  int jsensitivity  ;
  
  if (!swig_callbackSetSensitivity) {
    UltraEngine::Widget::SetSensitivity(sensitivity);
    return;
  } else {
    jsensitivity = sensitivity;
    swig_callbackSetSensitivity(jsensitivity);
  }
}

void SwigDirector_Widget::Sort(bool const recursive) {
  unsigned int jrecursive  ;
  
  if (!swig_callbackSort__SWIG_0) {
    UltraEngine::Widget::Sort(recursive);
    return;
  } else {
    jrecursive = recursive;
    swig_callbackSort__SWIG_0(jrecursive);
  }
}

void SwigDirector_Widget::Hide() {
  if (!swig_callbackHide) {
    UltraEngine::Widget::Hide();
    return;
  } else {
    swig_callbackHide();
  }
}

void SwigDirector_Widget::Show() {
  if (!swig_callbackShow) {
    UltraEngine::Widget::Show();
    return;
  } else {
    swig_callbackShow();
  }
}

void SwigDirector_Widget::Sort(int64_t order) {
  long long jorder  ;
  
  if (!swig_callbackSort__SWIG_1) {
    UltraEngine::Widget::Sort(order);
    return;
  } else {
    jorder = order;
    swig_callbackSort__SWIG_1(jorder);
  }
}

int SwigDirector_Widget::AddBlock(std::shared_ptr< UltraEngine::Icon > icon, UltraEngine::iVec2 const &position, float const scale, UltraEngine::Vec4 const &color) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jicon  ;
  void * jposition = 0 ;
  float jscale  ;
  void * jcolor = 0 ;
  
  if (!swig_callbackAddBlock__SWIG_0) {
    return UltraEngine::Widget::AddBlock(icon,position,scale,color);
  } else {
    jicon = icon ? new std::shared_ptr<  UltraEngine::Icon >(icon) : 0; 
    jposition = (UltraEngine::iVec2 *) &position; 
    jscale = scale;
    jcolor = (UltraEngine::Vec4 *) &color; 
    jresult = (int) swig_callbackAddBlock__SWIG_0(jicon, jposition, jscale, jcolor);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_Widget::AddBlock(std::shared_ptr< UltraEngine::Pixmap > pixmap, UltraEngine::iVec2 const &position, UltraEngine::Vec4 const &color) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpixmap  ;
  void * jposition = 0 ;
  void * jcolor = 0 ;
  
  if (!swig_callbackAddBlock__SWIG_3) {
    return UltraEngine::Widget::AddBlock(pixmap,position,color);
  } else {
    jpixmap = pixmap ? new std::shared_ptr<  UltraEngine::Pixmap >(pixmap) : 0; 
    jposition = (UltraEngine::iVec2 *) &position; 
    jcolor = (UltraEngine::Vec4 *) &color; 
    jresult = (int) swig_callbackAddBlock__SWIG_3(jpixmap, jposition, jcolor);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_Widget::AddBlock(UltraEngine::iVec2 const &position, UltraEngine::iVec2 const &size, UltraEngine::Vec4 const &color0, bool const wireframe, float const radius, float const gradient) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jposition = 0 ;
  void * jsize = 0 ;
  void * jcolor0 = 0 ;
  unsigned int jwireframe  ;
  float jradius  ;
  float jgradient  ;
  
  if (!swig_callbackAddBlock__SWIG_5) {
    return UltraEngine::Widget::AddBlock(position,size,color0,wireframe,radius,gradient);
  } else {
    jposition = (UltraEngine::iVec2 *) &position; 
    jsize = (UltraEngine::iVec2 *) &size; 
    jcolor0 = (UltraEngine::Vec4 *) &color0; 
    jwireframe = wireframe;
    jradius = radius;
    jgradient = gradient;
    jresult = (int) swig_callbackAddBlock__SWIG_5(jposition, jsize, jcolor0, jwireframe, jradius, jgradient);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_Widget::AddBlock(UltraEngine::WString const &text, UltraEngine::iVec2 const &position, UltraEngine::iVec2 const &size, UltraEngine::Vec4 const &color, int const alignment) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jtext = 0 ;
  void * jposition = 0 ;
  void * jsize = 0 ;
  void * jcolor = 0 ;
  int jalignment  ;
  
  if (!swig_callbackAddBlock__SWIG_10) {
    return UltraEngine::Widget::AddBlock(text,position,size,color,alignment);
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    jposition = (UltraEngine::iVec2 *) &position; 
    jsize = (UltraEngine::iVec2 *) &size; 
    jcolor = (UltraEngine::Vec4 *) &color; 
    jalignment = alignment;
    jresult = (int) swig_callbackAddBlock__SWIG_10(jtext, jposition, jsize, jcolor, jalignment);
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::Invalidate(bool const recursive) {
  unsigned int jrecursive  ;
  
  if (!swig_callbackInvalidate__SWIG_0) {
    UltraEngine::Widget::Invalidate(recursive);
    return;
  } else {
    jrecursive = recursive;
    swig_callbackInvalidate__SWIG_0(jrecursive);
  }
}

void SwigDirector_Widget::Refresh() {
  if (!swig_callbackRefresh) {
    UltraEngine::Widget::Refresh();
    return;
  } else {
    swig_callbackRefresh();
  }
}

std::string SwigDirector_Widget::Debug() {
  std::string c_result ;
  char * jresult = 0 ;
  
  if (!swig_callbackDebug) {
    return UltraEngine::Widget::Debug();
  } else {
    jresult = (char *) swig_callbackDebug();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
      return c_result;
    }
    c_result.assign(jresult); 
  }
  return c_result;
}

void SwigDirector_Widget::SetFontScale(float const scale) {
  float jscale  ;
  
  if (!swig_callbackSetFontScale) {
    UltraEngine::Widget::SetFontScale(scale);
    return;
  } else {
    jscale = scale;
    swig_callbackSetFontScale(jscale);
  }
}

void SwigDirector_Widget::SetFontWeight(bool const bold) {
  unsigned int jbold  ;
  
  if (!swig_callbackSetFontWeight) {
    UltraEngine::Widget::SetFontWeight(bold);
    return;
  } else {
    jbold = bold;
    swig_callbackSetFontWeight(jbold);
  }
}

void SwigDirector_Widget::Lock() {
  if (!swig_callbackLock) {
    UltraEngine::Widget::Lock();
    return;
  } else {
    swig_callbackLock();
  }
}

void SwigDirector_Widget::Unlock() {
  if (!swig_callbackUnlock) {
    UltraEngine::Widget::Unlock();
    return;
  } else {
    swig_callbackUnlock();
  }
}

void SwigDirector_Widget::Expand() {
  if (!swig_callbackExpand) {
    UltraEngine::Widget::Expand();
    return;
  } else {
    swig_callbackExpand();
  }
}

void SwigDirector_Widget::Collapse() {
  if (!swig_callbackCollapse) {
    UltraEngine::Widget::Collapse();
    return;
  } else {
    swig_callbackCollapse();
  }
}

bool SwigDirector_Widget::Collapsed() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackCollapsed) {
    return UltraEngine::Widget::Collapsed();
  } else {
    jresult = (unsigned int) swig_callbackCollapsed();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::SetColor(float const r, float const g, float const b, float const a, UltraEngine::WidgetColor const index) {
  float jr  ;
  float jg  ;
  float jb  ;
  float ja  ;
  int jindex  ;
  
  if (!swig_callbackSetColor__SWIG_0) {
    UltraEngine::Widget::SetColor(r,g,b,a,index);
    return;
  } else {
    jr = r;
    jg = g;
    jb = b;
    ja = a;
    jindex = (int)index;
    swig_callbackSetColor__SWIG_0(jr, jg, jb, ja, jindex);
  }
}

void SwigDirector_Widget::SetColor(UltraEngine::Vec4 const &color, UltraEngine::WidgetColor const index) {
  void * jcolor = 0 ;
  int jindex  ;
  
  if (!swig_callbackSetColor__SWIG_3) {
    UltraEngine::Widget::SetColor(color,index);
    return;
  } else {
    jcolor = (UltraEngine::Vec4 *) &color; 
    jindex = (int)index;
    swig_callbackSetColor__SWIG_3(jcolor, jindex);
  }
}

void SwigDirector_Widget::SetState(UltraEngine::WidgetState const state) {
  int jstate  ;
  
  if (!swig_callbackSetState__SWIG_0) {
    UltraEngine::Widget::SetState(state);
    return;
  } else {
    jstate = (int)state;
    swig_callbackSetState__SWIG_0(jstate);
  }
}

void SwigDirector_Widget::SetState(bool const state) {
  unsigned int jstate  ;
  
  if (!swig_callbackSetState__SWIG_1) {
    UltraEngine::Widget::SetState(state);
    return;
  } else {
    jstate = state;
    swig_callbackSetState__SWIG_1(jstate);
  }
}

UltraEngine::WidgetState SwigDirector_Widget::GetState() {
  UltraEngine::WidgetState c_result = SwigValueInit< UltraEngine::WidgetState >() ;
  int jresult = 0 ;
  
  if (!swig_callbackGetState) {
    return UltraEngine::Widget::GetState();
  } else {
    jresult = (int) swig_callbackGetState();
    c_result = (UltraEngine::WidgetState)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::SetIcon(std::shared_ptr< UltraEngine::Icon > icon, UltraEngine::PixmapAlignment const alignment, float const scale) {
  void * jicon  ;
  int jalignment  ;
  float jscale  ;
  
  if (!swig_callbackSetIcon__SWIG_0) {
    UltraEngine::Widget::SetIcon(icon,alignment,scale);
    return;
  } else {
    jicon = icon ? new std::shared_ptr<  UltraEngine::Icon >(icon) : 0; 
    jalignment = (int)alignment;
    jscale = scale;
    swig_callbackSetIcon__SWIG_0(jicon, jalignment, jscale);
  }
}

void SwigDirector_Widget::SetPixmap(std::shared_ptr< UltraEngine::Pixmap > pixmap, UltraEngine::PixmapAlignment const alignment, UltraEngine::TextureFilter const filter) {
  void * jpixmap  ;
  int jalignment  ;
  int jfilter  ;
  
  if (!swig_callbackSetPixmap__SWIG_0) {
    UltraEngine::Widget::SetPixmap(pixmap,alignment,filter);
    return;
  } else {
    jpixmap = pixmap ? new std::shared_ptr<  UltraEngine::Pixmap >(pixmap) : 0; 
    jalignment = (int)alignment;
    jfilter = (int)filter;
    swig_callbackSetPixmap__SWIG_0(jpixmap, jalignment, jfilter);
  }
}

std::shared_ptr< UltraEngine::Pixmap > SwigDirector_Widget::GetPixmap() {
  std::shared_ptr< UltraEngine::Pixmap > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetPixmap) {
    return UltraEngine::Widget::GetPixmap();
  } else {
    jresult = (void *) swig_callbackGetPixmap();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Pixmap > *smartarg = (std::shared_ptr<  UltraEngine::Pixmap > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

void SwigDirector_Widget::Enable() {
  if (!swig_callbackEnable) {
    UltraEngine::Widget::Enable();
    return;
  } else {
    swig_callbackEnable();
  }
}

void SwigDirector_Widget::Disable() {
  if (!swig_callbackDisable) {
    UltraEngine::Widget::Disable();
    return;
  } else {
    swig_callbackDisable();
  }
}

bool SwigDirector_Widget::GetDisabled() {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  
  if (!swig_callbackGetDisabled) {
    return UltraEngine::Widget::GetDisabled();
  } else {
    jresult = (unsigned int) swig_callbackGetDisabled();
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Widget::SetRange(int const x, int const y) {
  int jx  ;
  int jy  ;
  
  if (!swig_callbackSetRange) {
    UltraEngine::Widget::SetRange(x,y);
    return;
  } else {
    jx = x;
    jy = y;
    swig_callbackSetRange(jx, jy);
  }
}

void SwigDirector_Widget::SetValue(int const value) {
  int jvalue  ;
  
  if (!swig_callbackSetValue) {
    UltraEngine::Widget::SetValue(value);
    return;
  } else {
    jvalue = value;
    swig_callbackSetValue(jvalue);
  }
}

int SwigDirector_Widget::GetValue() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbackGetValue) {
    return UltraEngine::Widget::GetValue();
  } else {
    jresult = (int) swig_callbackGetValue();
    c_result = (int)jresult; 
  }
  return c_result;
}

UltraEngine::iVec2 SwigDirector_Widget::GetRange() {
  UltraEngine::iVec2 c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetRange) {
    return UltraEngine::Widget::GetRange();
  } else {
    jresult = (void *) swig_callbackGetRange();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type UltraEngine::iVec2", 0);
      return c_result;
    }
    c_result = *(UltraEngine::iVec2 *)jresult; 
  }
  return c_result;
}

int SwigDirector_Widget::GetSelectedItem() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbackGetSelectedItem) {
    return UltraEngine::Widget::GetSelectedItem();
  } else {
    jresult = (int) swig_callbackGetSelectedItem();
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::SelectItem(int const index) {
  int jindex  ;
  
  if (!swig_callbackSelectItem) {
    UltraEngine::Widget::SelectItem(index);
    return;
  } else {
    jindex = index;
    swig_callbackSelectItem(jindex);
  }
}

int SwigDirector_Widget::AddItem(UltraEngine::WString const &text, bool const selected) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jtext = 0 ;
  unsigned int jselected  ;
  
  if (!swig_callbackAddItem__SWIG_0) {
    return UltraEngine::Widget::AddItem(text,selected);
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    jselected = selected;
    jresult = (int) swig_callbackAddItem__SWIG_0(jtext, jselected);
    c_result = (int)jresult; 
  }
  return c_result;
}

std::shared_ptr< UltraEngine::Widget > SwigDirector_Widget::GetParent() {
  std::shared_ptr< UltraEngine::Widget > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetParent) {
    return UltraEngine::Widget::GetParent();
  } else {
    jresult = (void *) swig_callbackGetParent();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Widget > *smartarg = (std::shared_ptr<  UltraEngine::Widget > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

void SwigDirector_Widget::SetText(UltraEngine::WString const &text) {
  void * jtext = 0 ;
  
  if (!swig_callbackSetText) {
    UltraEngine::Widget::SetText(text);
    return;
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    swig_callbackSetText(jtext);
  }
}

int SwigDirector_Widget::CountItems() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbackCountItems) {
    return UltraEngine::Widget::CountItems();
  } else {
    jresult = (int) swig_callbackCountItems();
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::ClearItems() {
  if (!swig_callbackClearItems) {
    UltraEngine::Widget::ClearItems();
    return;
  } else {
    swig_callbackClearItems();
  }
}

void SwigDirector_Widget::RemoveItem(int const index) {
  int jindex  ;
  
  if (!swig_callbackRemoveItem) {
    UltraEngine::Widget::RemoveItem(index);
    return;
  } else {
    jindex = index;
    swig_callbackRemoveItem(jindex);
  }
}

void SwigDirector_Widget::SetProgress(double const progress) {
  double jprogress  ;
  
  if (!swig_callbackSetProgress) {
    UltraEngine::Widget::SetProgress(progress);
    return;
  } else {
    jprogress = progress;
    swig_callbackSetProgress(jprogress);
  }
}

double SwigDirector_Widget::GetProgress() {
  double c_result = SwigValueInit< double >() ;
  double jresult = 0 ;
  
  if (!swig_callbackGetProgress) {
    return UltraEngine::Widget::GetProgress();
  } else {
    jresult = (double) swig_callbackGetProgress();
    c_result = (double)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::SetRedrawFrequency(int const frequency) {
  int jfrequency  ;
  
  if (!swig_callbackSetRedrawFrequency) {
    UltraEngine::Widget::SetRedrawFrequency(frequency);
    return;
  } else {
    jfrequency = frequency;
    swig_callbackSetRedrawFrequency(jfrequency);
  }
}

void SwigDirector_Widget::AddText(UltraEngine::WString const &text) {
  void * jtext = 0 ;
  
  if (!swig_callbackAddText) {
    UltraEngine::Widget::AddText(text);
    return;
  } else {
    jtext = new std::shared_ptr< const UltraEngine::WString > (&text SWIG_NO_NULL_DELETER_0); 
    swig_callbackAddText(jtext);
  }
}

void SwigDirector_Widget::Redraw() {
  if (!swig_callbackRedraw) {
    UltraEngine::Widget::Redraw();
    return;
  } else {
    swig_callbackRedraw();
  }
}

void SwigDirector_Widget::SetPadding(int const left, int const top, int const right, int const bottom) {
  int jleft  ;
  int jtop  ;
  int jright  ;
  int jbottom  ;
  
  if (!swig_callbackSetPadding) {
    UltraEngine::Widget::SetPadding(left,top,right,bottom);
    return;
  } else {
    jleft = left;
    jtop = top;
    jright = right;
    jbottom = bottom;
    swig_callbackSetPadding(jleft, jtop, jright, jbottom);
  }
}

UltraEngine::iVec4 SwigDirector_Widget::GetPadding() {
  UltraEngine::iVec4 c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetPadding) {
    return UltraEngine::Widget::GetPadding();
  } else {
    jresult = (void *) swig_callbackGetPadding();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type UltraEngine::iVec4", 0);
      return c_result;
    }
    c_result = *(UltraEngine::iVec4 *)jresult; 
  }
  return c_result;
}

UltraEngine::iVec2 SwigDirector_Widget::GetPosition(bool const global) {
  UltraEngine::iVec2 c_result ;
  void * jresult = 0 ;
  unsigned int jglobal  ;
  
  if (!swig_callbackGetPosition__SWIG_0) {
    return UltraEngine::Widget::GetPosition(global);
  } else {
    jglobal = global;
    jresult = (void *) swig_callbackGetPosition__SWIG_0(jglobal);
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type UltraEngine::iVec2", 0);
      return c_result;
    }
    c_result = *(UltraEngine::iVec2 *)jresult; 
  }
  return c_result;
}

UltraEngine::iVec2 SwigDirector_Widget::GetSize() {
  UltraEngine::iVec2 c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetSize) {
    return UltraEngine::Widget::GetSize();
  } else {
    jresult = (void *) swig_callbackGetSize();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type UltraEngine::iVec2", 0);
      return c_result;
    }
    c_result = *(UltraEngine::iVec2 *)jresult; 
  }
  return c_result;
}

void SwigDirector_Widget::Cut() {
  if (!swig_callbackCut) {
    UltraEngine::Widget::Cut();
    return;
  } else {
    swig_callbackCut();
  }
}

void SwigDirector_Widget::Copy() {
  if (!swig_callbackCopy) {
    UltraEngine::Widget::Copy();
    return;
  } else {
    swig_callbackCopy();
  }
}

void SwigDirector_Widget::Paste() {
  if (!swig_callbackPaste) {
    UltraEngine::Widget::Paste();
    return;
  } else {
    swig_callbackPaste();
  }
}

UltraEngine::iVec2 SwigDirector_Widget::ClientSize() {
  UltraEngine::iVec2 c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackClientSize) {
    return UltraEngine::Widget::ClientSize();
  } else {
    jresult = (void *) swig_callbackClientSize();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Unexpected null return for type UltraEngine::iVec2", 0);
      return c_result;
    }
    c_result = *(UltraEngine::iVec2 *)jresult; 
  }
  return c_result;
}

std::shared_ptr< UltraEngine::Interface > SwigDirector_Widget::GetInterface() {
  std::shared_ptr< UltraEngine::Interface > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetInterface) {
    return UltraEngine::Widget::GetInterface();
  } else {
    jresult = (void *) swig_callbackGetInterface();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Interface > *smartarg = (std::shared_ptr<  UltraEngine::Interface > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

UltraEngine::WString SwigDirector_Widget::GetText(bool const selected) {
  UltraEngine::WString c_result ;
  void * jresult = 0 ;
  unsigned int jselected  ;
  
  if (!swig_callbackGetText__SWIG_0) {
    return UltraEngine::Widget::GetText(selected);
  } else {
    jselected = selected;
    jresult = (void *) swig_callbackGetText__SWIG_0(jselected);
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString", 0);
      return c_result;
    }
    std::shared_ptr<  UltraEngine::WString > *smartarg = (std::shared_ptr<  UltraEngine::WString > *)jresult;
    c_result = *smartarg->get();
    
  }
  return c_result;
}

void SwigDirector_Widget::SetLayout(int const left, int const right, int const top, int const bottom) {
  int jleft  ;
  int jright  ;
  int jtop  ;
  int jbottom  ;
  
  if (!swig_callbackSetLayout) {
    UltraEngine::Widget::SetLayout(left,right,top,bottom);
    return;
  } else {
    jleft = left;
    jright = right;
    jtop = top;
    jbottom = bottom;
    swig_callbackSetLayout(jleft, jright, jtop, jbottom);
  }
}

void SwigDirector_Widget::SetShape(int x, int y, int width, int height) {
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  
  if (!swig_callbackSetShape__SWIG_0) {
    UltraEngine::Widget::SetShape(x,y,width,height);
    return;
  } else {
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    swig_callbackSetShape__SWIG_0(jx, jy, jwidth, jheight);
  }
}

void SwigDirector_Widget::SetShape(UltraEngine::iVec2 const &position, UltraEngine::iVec2 const &size) {
  void * jposition = 0 ;
  void * jsize = 0 ;
  
  if (!swig_callbackSetShape__SWIG_1) {
    UltraEngine::Widget::SetShape(position,size);
    return;
  } else {
    jposition = (UltraEngine::iVec2 *) &position; 
    jsize = (UltraEngine::iVec2 *) &size; 
    swig_callbackSetShape__SWIG_1(jposition, jsize);
  }
}

bool SwigDirector_Widget::Hidden(bool const recursive) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  unsigned int jrecursive  ;
  
  if (!swig_callbackHidden__SWIG_0) {
    return UltraEngine::Widget::Hidden(recursive);
  } else {
    jrecursive = recursive;
    jresult = (unsigned int) swig_callbackHidden__SWIG_0(jrecursive);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

std::shared_ptr< UltraEngine::Widget > SwigDirector_Widget::GetWidgetAtPoint(int const x, int const y) {
  std::shared_ptr< UltraEngine::Widget > c_result ;
  void * jresult = 0 ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackGetWidgetAtPoint) {
    return UltraEngine::Widget::GetWidgetAtPoint(x,y);
  } else {
    jx = x;
    jy = y;
    jresult = (void *) swig_callbackGetWidgetAtPoint(jx, jy);
    if (jresult) {
      std::shared_ptr<  UltraEngine::Widget > *smartarg = (std::shared_ptr<  UltraEngine::Widget > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

void SwigDirector_Widget::UpdateLayout() {
  if (!swig_callbackUpdateLayout) {
    UltraEngine::Widget::UpdateLayout();
    return;
  } else {
    swig_callbackUpdateLayout();
  }
}

void SwigDirector_Widget::Draw(int const x, int const y, int const width, int const height) {
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  
  if (!swig_callbackDraw) {
    UltraEngine::Widget::Draw(x,y,width,height);
    return;
  } else {
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    swig_callbackDraw(jx, jy, jwidth, jheight);
  }
}

void SwigDirector_Widget::Draw__(int const x, int const y, int const width, int const height) {
  int jx  ;
  int jy  ;
  int jwidth  ;
  int jheight  ;
  
  if (!swig_callbackDraw__) {
    UltraEngine::Widget::Draw__(x,y,width,height);
    return;
  } else {
    jx = x;
    jy = y;
    jwidth = width;
    jheight = height;
    swig_callbackDraw__(jx, jy, jwidth, jheight);
  }
}

void SwigDirector_Widget::swig_connect_director(SWIG_Callback0_t callbackReset, SWIG_Callback1_t callbackOK, SWIG_Callback2_t callbackCancel, SWIG_Callback3_t callbackUpdateColors, SWIG_Callback4_t callbackInitialize__SWIG_0, SWIG_Callback5_t callbackInitialize__SWIG_1, SWIG_Callback6_t callbackSetParent__SWIG_0, SWIG_Callback7_t callbackSetItemText, SWIG_Callback8_t callbackGetItemText, SWIG_Callback9_t callbackSetItemIcon__SWIG_0, SWIG_Callback10_t callbackSetItemIcon__SWIG_1, SWIG_Callback11_t callbackSetItemPixmap, SWIG_Callback12_t callbackAddNode__SWIG_0, SWIG_Callback13_t callbackAddNode__SWIG_1, SWIG_Callback14_t callbackSetInteractive, SWIG_Callback15_t callbackSelectText, SWIG_Callback16_t callbackSetParent__SWIG_1, SWIG_Callback17_t callbackReload, SWIG_Callback18_t callbackSave, SWIG_Callback19_t callbackSetRadius, SWIG_Callback20_t callbackGetRadius, SWIG_Callback21_t callbackSetPointer, SWIG_Callback22_t callbackFilterItems, SWIG_Callback23_t callbackGetNext, SWIG_Callback24_t callbackGetPrev, SWIG_Callback25_t callbackCursorBlink, SWIG_Callback26_t callbackModifyItem, SWIG_Callback27_t callbackWindowDragBegin, SWIG_Callback28_t callbackProcessEvent, SWIG_Callback29_t callbackMouseMove, SWIG_Callback30_t callbackMouseEnter, SWIG_Callback31_t callbackMouseLeave, SWIG_Callback32_t callbackMouseDown, SWIG_Callback33_t callbackMouseRepeat, SWIG_Callback34_t callbackMouseUp, SWIG_Callback35_t callbackLoseFocus, SWIG_Callback36_t callbackDoubleClick, SWIG_Callback37_t callbackTripleClick, SWIG_Callback38_t callbackGainFocus, SWIG_Callback39_t callbackKeyDown, SWIG_Callback40_t callbackKeyUp, SWIG_Callback41_t callbackKeyChar, SWIG_Callback42_t callbackMouseWheel, SWIG_Callback43_t callbackActivate, SWIG_Callback44_t callbackFindOK, SWIG_Callback45_t callbackPaint__SWIG_0, SWIG_Callback46_t callbackPaint__SWIG_1, SWIG_Callback47_t callbackFindCancel, SWIG_Callback48_t callbackSetSensitivity, SWIG_Callback49_t callbackSort__SWIG_0, SWIG_Callback50_t callbackHide, SWIG_Callback51_t callbackShow, SWIG_Callback52_t callbackSort__SWIG_1, SWIG_Callback53_t callbackAddBlock__SWIG_0, SWIG_Callback54_t callbackAddBlock__SWIG_1, SWIG_Callback55_t callbackAddBlock__SWIG_2, SWIG_Callback56_t callbackAddBlock__SWIG_3, SWIG_Callback57_t callbackAddBlock__SWIG_4, SWIG_Callback58_t callbackAddBlock__SWIG_5, SWIG_Callback59_t callbackAddBlock__SWIG_6, SWIG_Callback60_t callbackAddBlock__SWIG_7, SWIG_Callback61_t callbackAddBlock__SWIG_8, SWIG_Callback62_t callbackAddBlock__SWIG_9, SWIG_Callback63_t callbackAddBlock__SWIG_10, SWIG_Callback64_t callbackAddBlock__SWIG_11, SWIG_Callback65_t callbackInvalidate__SWIG_0, SWIG_Callback66_t callbackInvalidate__SWIG_1, SWIG_Callback67_t callbackRefresh, SWIG_Callback68_t callbackDebug, SWIG_Callback69_t callbackSetFontScale, SWIG_Callback70_t callbackSetFontWeight, SWIG_Callback71_t callbackLock, SWIG_Callback72_t callbackUnlock, SWIG_Callback73_t callbackExpand, SWIG_Callback74_t callbackCollapse, SWIG_Callback75_t callbackCollapsed, SWIG_Callback76_t callbackSetColor__SWIG_0, SWIG_Callback77_t callbackSetColor__SWIG_1, SWIG_Callback78_t callbackSetColor__SWIG_2, SWIG_Callback79_t callbackSetColor__SWIG_3, SWIG_Callback80_t callbackSetColor__SWIG_4, SWIG_Callback81_t callbackSetState__SWIG_0, SWIG_Callback82_t callbackSetState__SWIG_1, SWIG_Callback83_t callbackGetState, SWIG_Callback84_t callbackSetIcon__SWIG_0, SWIG_Callback85_t callbackSetIcon__SWIG_1, SWIG_Callback86_t callbackSetIcon__SWIG_2, SWIG_Callback87_t callbackSetPixmap__SWIG_0, SWIG_Callback88_t callbackSetPixmap__SWIG_1, SWIG_Callback89_t callbackSetPixmap__SWIG_2, SWIG_Callback90_t callbackGetPixmap, SWIG_Callback91_t callbackEnable, SWIG_Callback92_t callbackDisable, SWIG_Callback93_t callbackGetDisabled, SWIG_Callback94_t callbackSetRange, SWIG_Callback95_t callbackSetValue, SWIG_Callback96_t callbackGetValue, SWIG_Callback97_t callbackGetRange, SWIG_Callback98_t callbackGetSelectedItem, SWIG_Callback99_t callbackSelectItem, SWIG_Callback100_t callbackAddItem__SWIG_0, SWIG_Callback101_t callbackAddItem__SWIG_1, SWIG_Callback102_t callbackGetParent, SWIG_Callback103_t callbackSetText, SWIG_Callback104_t callbackCountItems, SWIG_Callback105_t callbackClearItems, SWIG_Callback106_t callbackRemoveItem, SWIG_Callback107_t callbackSetProgress, SWIG_Callback108_t callbackGetProgress, SWIG_Callback109_t callbackSetRedrawFrequency, SWIG_Callback110_t callbackAddText, SWIG_Callback111_t callbackRedraw, SWIG_Callback112_t callbackSetPadding, SWIG_Callback113_t callbackGetPadding, SWIG_Callback114_t callbackGetPosition__SWIG_0, SWIG_Callback115_t callbackGetPosition__SWIG_1, SWIG_Callback116_t callbackGetSize, SWIG_Callback117_t callbackCut, SWIG_Callback118_t callbackCopy, SWIG_Callback119_t callbackPaste, SWIG_Callback120_t callbackClientSize, SWIG_Callback121_t callbackGetInterface, SWIG_Callback122_t callbackGetText__SWIG_0, SWIG_Callback123_t callbackGetText__SWIG_1, SWIG_Callback124_t callbackSetLayout, SWIG_Callback125_t callbackSetShape__SWIG_0, SWIG_Callback126_t callbackSetShape__SWIG_1, SWIG_Callback127_t callbackHidden__SWIG_0, SWIG_Callback128_t callbackHidden__SWIG_1, SWIG_Callback129_t callbackGetWidgetAtPoint, SWIG_Callback130_t callbackUpdateLayout, SWIG_Callback131_t callbackDraw, SWIG_Callback132_t callbackDraw__) {
  swig_callbackReset = callbackReset;
  swig_callbackOK = callbackOK;
  swig_callbackCancel = callbackCancel;
  swig_callbackUpdateColors = callbackUpdateColors;
  swig_callbackInitialize__SWIG_0 = callbackInitialize__SWIG_0;
  swig_callbackInitialize__SWIG_1 = callbackInitialize__SWIG_1;
  swig_callbackSetParent__SWIG_0 = callbackSetParent__SWIG_0;
  swig_callbackSetItemText = callbackSetItemText;
  swig_callbackGetItemText = callbackGetItemText;
  swig_callbackSetItemIcon__SWIG_0 = callbackSetItemIcon__SWIG_0;
  swig_callbackSetItemIcon__SWIG_1 = callbackSetItemIcon__SWIG_1;
  swig_callbackSetItemPixmap = callbackSetItemPixmap;
  swig_callbackAddNode__SWIG_0 = callbackAddNode__SWIG_0;
  swig_callbackAddNode__SWIG_1 = callbackAddNode__SWIG_1;
  swig_callbackSetInteractive = callbackSetInteractive;
  swig_callbackSelectText = callbackSelectText;
  swig_callbackSetParent__SWIG_1 = callbackSetParent__SWIG_1;
  swig_callbackReload = callbackReload;
  swig_callbackSave = callbackSave;
  swig_callbackSetRadius = callbackSetRadius;
  swig_callbackGetRadius = callbackGetRadius;
  swig_callbackSetPointer = callbackSetPointer;
  swig_callbackFilterItems = callbackFilterItems;
  swig_callbackGetNext = callbackGetNext;
  swig_callbackGetPrev = callbackGetPrev;
  swig_callbackCursorBlink = callbackCursorBlink;
  swig_callbackModifyItem = callbackModifyItem;
  swig_callbackWindowDragBegin = callbackWindowDragBegin;
  swig_callbackProcessEvent = callbackProcessEvent;
  swig_callbackMouseMove = callbackMouseMove;
  swig_callbackMouseEnter = callbackMouseEnter;
  swig_callbackMouseLeave = callbackMouseLeave;
  swig_callbackMouseDown = callbackMouseDown;
  swig_callbackMouseRepeat = callbackMouseRepeat;
  swig_callbackMouseUp = callbackMouseUp;
  swig_callbackLoseFocus = callbackLoseFocus;
  swig_callbackDoubleClick = callbackDoubleClick;
  swig_callbackTripleClick = callbackTripleClick;
  swig_callbackGainFocus = callbackGainFocus;
  swig_callbackKeyDown = callbackKeyDown;
  swig_callbackKeyUp = callbackKeyUp;
  swig_callbackKeyChar = callbackKeyChar;
  swig_callbackMouseWheel = callbackMouseWheel;
  swig_callbackActivate = callbackActivate;
  swig_callbackFindOK = callbackFindOK;
  swig_callbackPaint__SWIG_0 = callbackPaint__SWIG_0;
  swig_callbackPaint__SWIG_1 = callbackPaint__SWIG_1;
  swig_callbackFindCancel = callbackFindCancel;
  swig_callbackSetSensitivity = callbackSetSensitivity;
  swig_callbackSort__SWIG_0 = callbackSort__SWIG_0;
  swig_callbackHide = callbackHide;
  swig_callbackShow = callbackShow;
  swig_callbackSort__SWIG_1 = callbackSort__SWIG_1;
  swig_callbackAddBlock__SWIG_0 = callbackAddBlock__SWIG_0;
  swig_callbackAddBlock__SWIG_1 = callbackAddBlock__SWIG_1;
  swig_callbackAddBlock__SWIG_2 = callbackAddBlock__SWIG_2;
  swig_callbackAddBlock__SWIG_3 = callbackAddBlock__SWIG_3;
  swig_callbackAddBlock__SWIG_4 = callbackAddBlock__SWIG_4;
  swig_callbackAddBlock__SWIG_5 = callbackAddBlock__SWIG_5;
  swig_callbackAddBlock__SWIG_6 = callbackAddBlock__SWIG_6;
  swig_callbackAddBlock__SWIG_7 = callbackAddBlock__SWIG_7;
  swig_callbackAddBlock__SWIG_8 = callbackAddBlock__SWIG_8;
  swig_callbackAddBlock__SWIG_9 = callbackAddBlock__SWIG_9;
  swig_callbackAddBlock__SWIG_10 = callbackAddBlock__SWIG_10;
  swig_callbackAddBlock__SWIG_11 = callbackAddBlock__SWIG_11;
  swig_callbackInvalidate__SWIG_0 = callbackInvalidate__SWIG_0;
  swig_callbackInvalidate__SWIG_1 = callbackInvalidate__SWIG_1;
  swig_callbackRefresh = callbackRefresh;
  swig_callbackDebug = callbackDebug;
  swig_callbackSetFontScale = callbackSetFontScale;
  swig_callbackSetFontWeight = callbackSetFontWeight;
  swig_callbackLock = callbackLock;
  swig_callbackUnlock = callbackUnlock;
  swig_callbackExpand = callbackExpand;
  swig_callbackCollapse = callbackCollapse;
  swig_callbackCollapsed = callbackCollapsed;
  swig_callbackSetColor__SWIG_0 = callbackSetColor__SWIG_0;
  swig_callbackSetColor__SWIG_1 = callbackSetColor__SWIG_1;
  swig_callbackSetColor__SWIG_2 = callbackSetColor__SWIG_2;
  swig_callbackSetColor__SWIG_3 = callbackSetColor__SWIG_3;
  swig_callbackSetColor__SWIG_4 = callbackSetColor__SWIG_4;
  swig_callbackSetState__SWIG_0 = callbackSetState__SWIG_0;
  swig_callbackSetState__SWIG_1 = callbackSetState__SWIG_1;
  swig_callbackGetState = callbackGetState;
  swig_callbackSetIcon__SWIG_0 = callbackSetIcon__SWIG_0;
  swig_callbackSetIcon__SWIG_1 = callbackSetIcon__SWIG_1;
  swig_callbackSetIcon__SWIG_2 = callbackSetIcon__SWIG_2;
  swig_callbackSetPixmap__SWIG_0 = callbackSetPixmap__SWIG_0;
  swig_callbackSetPixmap__SWIG_1 = callbackSetPixmap__SWIG_1;
  swig_callbackSetPixmap__SWIG_2 = callbackSetPixmap__SWIG_2;
  swig_callbackGetPixmap = callbackGetPixmap;
  swig_callbackEnable = callbackEnable;
  swig_callbackDisable = callbackDisable;
  swig_callbackGetDisabled = callbackGetDisabled;
  swig_callbackSetRange = callbackSetRange;
  swig_callbackSetValue = callbackSetValue;
  swig_callbackGetValue = callbackGetValue;
  swig_callbackGetRange = callbackGetRange;
  swig_callbackGetSelectedItem = callbackGetSelectedItem;
  swig_callbackSelectItem = callbackSelectItem;
  swig_callbackAddItem__SWIG_0 = callbackAddItem__SWIG_0;
  swig_callbackAddItem__SWIG_1 = callbackAddItem__SWIG_1;
  swig_callbackGetParent = callbackGetParent;
  swig_callbackSetText = callbackSetText;
  swig_callbackCountItems = callbackCountItems;
  swig_callbackClearItems = callbackClearItems;
  swig_callbackRemoveItem = callbackRemoveItem;
  swig_callbackSetProgress = callbackSetProgress;
  swig_callbackGetProgress = callbackGetProgress;
  swig_callbackSetRedrawFrequency = callbackSetRedrawFrequency;
  swig_callbackAddText = callbackAddText;
  swig_callbackRedraw = callbackRedraw;
  swig_callbackSetPadding = callbackSetPadding;
  swig_callbackGetPadding = callbackGetPadding;
  swig_callbackGetPosition__SWIG_0 = callbackGetPosition__SWIG_0;
  swig_callbackGetPosition__SWIG_1 = callbackGetPosition__SWIG_1;
  swig_callbackGetSize = callbackGetSize;
  swig_callbackCut = callbackCut;
  swig_callbackCopy = callbackCopy;
  swig_callbackPaste = callbackPaste;
  swig_callbackClientSize = callbackClientSize;
  swig_callbackGetInterface = callbackGetInterface;
  swig_callbackGetText__SWIG_0 = callbackGetText__SWIG_0;
  swig_callbackGetText__SWIG_1 = callbackGetText__SWIG_1;
  swig_callbackSetLayout = callbackSetLayout;
  swig_callbackSetShape__SWIG_0 = callbackSetShape__SWIG_0;
  swig_callbackSetShape__SWIG_1 = callbackSetShape__SWIG_1;
  swig_callbackHidden__SWIG_0 = callbackHidden__SWIG_0;
  swig_callbackHidden__SWIG_1 = callbackHidden__SWIG_1;
  swig_callbackGetWidgetAtPoint = callbackGetWidgetAtPoint;
  swig_callbackUpdateLayout = callbackUpdateLayout;
  swig_callbackDraw = callbackDraw;
  swig_callbackDraw__ = callbackDraw__;
}

void SwigDirector_Widget::swig_init_callbacks() {
  swig_callbackReset = 0;
  swig_callbackOK = 0;
  swig_callbackCancel = 0;
  swig_callbackUpdateColors = 0;
  swig_callbackInitialize__SWIG_0 = 0;
  swig_callbackInitialize__SWIG_1 = 0;
  swig_callbackSetParent__SWIG_0 = 0;
  swig_callbackSetItemText = 0;
  swig_callbackGetItemText = 0;
  swig_callbackSetItemIcon__SWIG_0 = 0;
  swig_callbackSetItemIcon__SWIG_1 = 0;
  swig_callbackSetItemPixmap = 0;
  swig_callbackAddNode__SWIG_0 = 0;
  swig_callbackAddNode__SWIG_1 = 0;
  swig_callbackSetInteractive = 0;
  swig_callbackSelectText = 0;
  swig_callbackSetParent__SWIG_1 = 0;
  swig_callbackReload = 0;
  swig_callbackSave = 0;
  swig_callbackSetRadius = 0;
  swig_callbackGetRadius = 0;
  swig_callbackSetPointer = 0;
  swig_callbackFilterItems = 0;
  swig_callbackGetNext = 0;
  swig_callbackGetPrev = 0;
  swig_callbackCursorBlink = 0;
  swig_callbackModifyItem = 0;
  swig_callbackWindowDragBegin = 0;
  swig_callbackProcessEvent = 0;
  swig_callbackMouseMove = 0;
  swig_callbackMouseEnter = 0;
  swig_callbackMouseLeave = 0;
  swig_callbackMouseDown = 0;
  swig_callbackMouseRepeat = 0;
  swig_callbackMouseUp = 0;
  swig_callbackLoseFocus = 0;
  swig_callbackDoubleClick = 0;
  swig_callbackTripleClick = 0;
  swig_callbackGainFocus = 0;
  swig_callbackKeyDown = 0;
  swig_callbackKeyUp = 0;
  swig_callbackKeyChar = 0;
  swig_callbackMouseWheel = 0;
  swig_callbackActivate = 0;
  swig_callbackFindOK = 0;
  swig_callbackPaint__SWIG_0 = 0;
  swig_callbackPaint__SWIG_1 = 0;
  swig_callbackFindCancel = 0;
  swig_callbackSetSensitivity = 0;
  swig_callbackSort__SWIG_0 = 0;
  swig_callbackHide = 0;
  swig_callbackShow = 0;
  swig_callbackSort__SWIG_1 = 0;
  swig_callbackAddBlock__SWIG_0 = 0;
  swig_callbackAddBlock__SWIG_1 = 0;
  swig_callbackAddBlock__SWIG_2 = 0;
  swig_callbackAddBlock__SWIG_3 = 0;
  swig_callbackAddBlock__SWIG_4 = 0;
  swig_callbackAddBlock__SWIG_5 = 0;
  swig_callbackAddBlock__SWIG_6 = 0;
  swig_callbackAddBlock__SWIG_7 = 0;
  swig_callbackAddBlock__SWIG_8 = 0;
  swig_callbackAddBlock__SWIG_9 = 0;
  swig_callbackAddBlock__SWIG_10 = 0;
  swig_callbackAddBlock__SWIG_11 = 0;
  swig_callbackInvalidate__SWIG_0 = 0;
  swig_callbackInvalidate__SWIG_1 = 0;
  swig_callbackRefresh = 0;
  swig_callbackDebug = 0;
  swig_callbackSetFontScale = 0;
  swig_callbackSetFontWeight = 0;
  swig_callbackLock = 0;
  swig_callbackUnlock = 0;
  swig_callbackExpand = 0;
  swig_callbackCollapse = 0;
  swig_callbackCollapsed = 0;
  swig_callbackSetColor__SWIG_0 = 0;
  swig_callbackSetColor__SWIG_1 = 0;
  swig_callbackSetColor__SWIG_2 = 0;
  swig_callbackSetColor__SWIG_3 = 0;
  swig_callbackSetColor__SWIG_4 = 0;
  swig_callbackSetState__SWIG_0 = 0;
  swig_callbackSetState__SWIG_1 = 0;
  swig_callbackGetState = 0;
  swig_callbackSetIcon__SWIG_0 = 0;
  swig_callbackSetIcon__SWIG_1 = 0;
  swig_callbackSetIcon__SWIG_2 = 0;
  swig_callbackSetPixmap__SWIG_0 = 0;
  swig_callbackSetPixmap__SWIG_1 = 0;
  swig_callbackSetPixmap__SWIG_2 = 0;
  swig_callbackGetPixmap = 0;
  swig_callbackEnable = 0;
  swig_callbackDisable = 0;
  swig_callbackGetDisabled = 0;
  swig_callbackSetRange = 0;
  swig_callbackSetValue = 0;
  swig_callbackGetValue = 0;
  swig_callbackGetRange = 0;
  swig_callbackGetSelectedItem = 0;
  swig_callbackSelectItem = 0;
  swig_callbackAddItem__SWIG_0 = 0;
  swig_callbackAddItem__SWIG_1 = 0;
  swig_callbackGetParent = 0;
  swig_callbackSetText = 0;
  swig_callbackCountItems = 0;
  swig_callbackClearItems = 0;
  swig_callbackRemoveItem = 0;
  swig_callbackSetProgress = 0;
  swig_callbackGetProgress = 0;
  swig_callbackSetRedrawFrequency = 0;
  swig_callbackAddText = 0;
  swig_callbackRedraw = 0;
  swig_callbackSetPadding = 0;
  swig_callbackGetPadding = 0;
  swig_callbackGetPosition__SWIG_0 = 0;
  swig_callbackGetPosition__SWIG_1 = 0;
  swig_callbackGetSize = 0;
  swig_callbackCut = 0;
  swig_callbackCopy = 0;
  swig_callbackPaste = 0;
  swig_callbackClientSize = 0;
  swig_callbackGetInterface = 0;
  swig_callbackGetText__SWIG_0 = 0;
  swig_callbackGetText__SWIG_1 = 0;
  swig_callbackSetLayout = 0;
  swig_callbackSetShape__SWIG_0 = 0;
  swig_callbackSetShape__SWIG_1 = 0;
  swig_callbackHidden__SWIG_0 = 0;
  swig_callbackHidden__SWIG_1 = 0;
  swig_callbackGetWidgetAtPoint = 0;
  swig_callbackUpdateLayout = 0;
  swig_callbackDraw = 0;
  swig_callbackDraw__ = 0;
}

SwigDirector_Asset::SwigDirector_Asset() : UltraEngine::Asset(), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Asset::~SwigDirector_Asset() {
  
}


void SwigDirector_Asset::Reset() {
  if (!swig_callbackReset) {
    Swig::DirectorPureVirtualException::raise("UltraEngine::Asset::Reset");
    return;
  } else {
    swig_callbackReset();
  }
}

void SwigDirector_Asset::Destroy() {
  if (!swig_callbackDestroy) {
    UltraEngine::Asset::Destroy();
    return;
  } else {
    swig_callbackDestroy();
  }
}

bool SwigDirector_Asset::Reload(std::shared_ptr< UltraEngine::Stream > stream, UltraEngine::LoadFlags const flags) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jstream  ;
  int jflags  ;
  
  if (!swig_callbackReload__SWIG_0) {
    Swig::DirectorPureVirtualException::raise("UltraEngine::Asset::Reload");
    return c_result;
  } else {
    jstream = stream ? new std::shared_ptr<  UltraEngine::Stream >(stream) : 0; 
    jflags = (int)flags;
    jresult = (unsigned int) swig_callbackReload__SWIG_0(jstream, jflags);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

UltraEngine::WString SwigDirector_Asset::GetPath() {
  UltraEngine::WString c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackGetPath) {
    return UltraEngine::Asset::GetPath();
  } else {
    jresult = (void *) swig_callbackGetPath();
    if (!jresult) {
      SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString", 0);
      return c_result;
    }
    std::shared_ptr<  UltraEngine::WString > *smartarg = (std::shared_ptr<  UltraEngine::WString > *)jresult;
    c_result = *smartarg->get();
    
  }
  return c_result;
}

bool SwigDirector_Asset::Reload(UltraEngine::LoadFlags const flags) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  int jflags  ;
  
  if (!swig_callbackReload__SWIG_2) {
    Swig::DirectorPureVirtualException::raise("UltraEngine::Asset::Reload");
    return c_result;
  } else {
    jflags = (int)flags;
    jresult = (unsigned int) swig_callbackReload__SWIG_2(jflags);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

std::shared_ptr< UltraEngine::Asset > SwigDirector_Asset::Copy() {
  std::shared_ptr< UltraEngine::Asset > c_result ;
  void * jresult = 0 ;
  
  if (!swig_callbackCopy) {
    Swig::DirectorPureVirtualException::raise("UltraEngine::Asset::Copy");
    return c_result;
  } else {
    jresult = (void *) swig_callbackCopy();
    if (jresult) {
      std::shared_ptr<  UltraEngine::Asset > *smartarg = (std::shared_ptr<  UltraEngine::Asset > *)jresult;
      c_result = *smartarg;
    }
    
  }
  return c_result;
}

bool SwigDirector_Asset::Save(UltraEngine::WString const &path, UltraEngine::SaveFlags const flags) {
  bool c_result = SwigValueInit< bool >() ;
  unsigned int jresult = 0 ;
  void * jpath = 0 ;
  int jflags  ;
  
  if (!swig_callbackSave__SWIG_0) {
    return UltraEngine::Asset::Save(path,flags);
  } else {
    jpath = new std::shared_ptr< const UltraEngine::WString > (&path SWIG_NO_NULL_DELETER_0); 
    jflags = (int)flags;
    jresult = (unsigned int) swig_callbackSave__SWIG_0(jpath, jflags);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_Asset::swig_connect_director(SWIG_Callback0_t callbackReset, SWIG_Callback1_t callbackDestroy, SWIG_Callback2_t callbackReload__SWIG_0, SWIG_Callback3_t callbackReload__SWIG_1, SWIG_Callback4_t callbackGetPath, SWIG_Callback5_t callbackReload__SWIG_2, SWIG_Callback6_t callbackReload__SWIG_3, SWIG_Callback7_t callbackCopy, SWIG_Callback8_t callbackSave__SWIG_0, SWIG_Callback9_t callbackSave__SWIG_1) {
  swig_callbackReset = callbackReset;
  swig_callbackDestroy = callbackDestroy;
  swig_callbackReload__SWIG_0 = callbackReload__SWIG_0;
  swig_callbackReload__SWIG_1 = callbackReload__SWIG_1;
  swig_callbackGetPath = callbackGetPath;
  swig_callbackReload__SWIG_2 = callbackReload__SWIG_2;
  swig_callbackReload__SWIG_3 = callbackReload__SWIG_3;
  swig_callbackCopy = callbackCopy;
  swig_callbackSave__SWIG_0 = callbackSave__SWIG_0;
  swig_callbackSave__SWIG_1 = callbackSave__SWIG_1;
}

void SwigDirector_Asset::swig_init_callbacks() {
  swig_callbackReset = 0;
  swig_callbackDestroy = 0;
  swig_callbackReload__SWIG_0 = 0;
  swig_callbackReload__SWIG_1 = 0;
  swig_callbackGetPath = 0;
  swig_callbackReload__SWIG_2 = 0;
  swig_callbackReload__SWIG_3 = 0;
  swig_callbackCopy = 0;
  swig_callbackSave__SWIG_0 = 0;
  swig_callbackSave__SWIG_1 = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_Clear(void * jarg1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_Add(void * jarg1, float jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  float *arg2 = 0 ;
  float temp2 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  temp2 = (float)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((float const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorFloat_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  
  arg1 = (std::vector< float > *)jarg1; 
  result = ((std::vector< float > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorFloat_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  
  arg1 = (std::vector< float > *)jarg1; 
  result = ((std::vector< float > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (std::vector< float >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorFloat__SWIG_0() {
  void * jresult ;
  std::vector< float > *result = 0 ;
  
  result = (std::vector< float > *)new std::vector< float >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorFloat__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< float > *arg1 = 0 ;
  std::vector< float > *result = 0 ;
  
  arg1 = (std::vector< float > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< float > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< float > *)new std::vector< float >((std::vector< float > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorFloat__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< float > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< float > *)new_std_vector_Sl_float_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_VectorFloat_getitemcopy(void * jarg1, int jarg2) {
  float jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  float result;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (float)std_vector_Sl_float_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_VectorFloat_getitem(void * jarg1, int jarg2) {
  float jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float >::value_type *result = 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< float >::value_type *) &std_vector_Sl_float_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_setitem(void * jarg1, int jarg2, float jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  float *arg3 = 0 ;
  float temp3 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_float_Sg__setitem(arg1,arg2,(float const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_AddRange(void * jarg1, void * jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float > *arg2 = 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (std::vector< float > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< float > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_float_Sg__AddRange(arg1,(std::vector< float > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorFloat_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< float > *result = 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< float > *)std_vector_Sl_float_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_Insert(void * jarg1, int jarg2, float jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  float *arg3 = 0 ;
  float temp3 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (float)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_float_Sg__Insert(arg1,arg2,(float const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float > *arg3 = 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< float > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< float > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_float_Sg__InsertRange(arg1,arg2,(std::vector< float > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_RemoveAt(void * jarg1, int jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_float_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_float_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorFloat_Repeat(float jarg1, int jarg2) {
  void * jresult ;
  float *arg1 = 0 ;
  int arg2 ;
  float temp1 ;
  std::vector< float > *result = 0 ;
  
  temp1 = (float)jarg1; 
  arg1 = &temp1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< float > *)std_vector_Sl_float_Sg__Repeat((float const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_Reverse__SWIG_0(void * jarg1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  std_vector_Sl_float_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_float_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorFloat_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float > *arg3 = 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< float > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< float > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_float_Sg__SetRange(arg1,arg2,(std::vector< float > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorFloat_Contains(void * jarg1, float jarg2) {
  unsigned int jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  float *arg2 = 0 ;
  float temp2 ;
  bool result;
  
  arg1 = (std::vector< float > *)jarg1; 
  temp2 = (float)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_float_Sg__Contains(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorFloat_IndexOf(void * jarg1, float jarg2) {
  int jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  float *arg2 = 0 ;
  float temp2 ;
  int result;
  
  arg1 = (std::vector< float > *)jarg1; 
  temp2 = (float)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_float_Sg__IndexOf(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorFloat_LastIndexOf(void * jarg1, float jarg2) {
  int jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  float *arg2 = 0 ;
  float temp2 ;
  int result;
  
  arg1 = (std::vector< float > *)jarg1; 
  temp2 = (float)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_float_Sg__LastIndexOf(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorFloat_Remove(void * jarg1, float jarg2) {
  unsigned int jresult ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  float *arg2 = 0 ;
  float temp2 ;
  bool result;
  
  arg1 = (std::vector< float > *)jarg1; 
  temp2 = (float)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_float_Sg__Remove(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorFloat(void * jarg1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  arg1 = (std::vector< float > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::shared_ptr< UltraEngine::Display > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Display > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::Display > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorDisplay_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Display > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Display > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorDisplay_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Display > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Display > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Display > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Display > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorDisplay__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::Display > > *)new std::vector< std::shared_ptr< UltraEngine::Display > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorDisplay__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Display > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::Display > > *)new std::vector< std::shared_ptr< UltraEngine::Display > >((std::vector< std::shared_ptr< UltraEngine::Display > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorDisplay__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Display > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorDisplay_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Display > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::Display >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorDisplay_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Display > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Display > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::Display > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Display > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Display > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::Display > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Display > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::Display > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorDisplay_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Display > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Display > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Display > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::Display > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Display > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Display > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorDisplay_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Display > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Display > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Display > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Display > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::Display > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorDisplay_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Display > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Display > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorDisplay_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::shared_ptr< UltraEngine::Display > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Display > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::Display > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorDisplay_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::shared_ptr< UltraEngine::Display > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Display > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::Display > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorDisplay_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::shared_ptr< UltraEngine::Display > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Display > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::Display > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorDisplay_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  std::shared_ptr< UltraEngine::Display > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Display > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Display_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::Display > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorDisplay(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Display > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Display > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::Pixmap > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorPixmap_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Pixmap > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorPixmap_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Pixmap > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorPixmap__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)new std::vector< std::shared_ptr< UltraEngine::Pixmap > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorPixmap__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)new std::vector< std::shared_ptr< UltraEngine::Pixmap > >((std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorPixmap__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorPixmap_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorPixmap_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::Pixmap > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorPixmap_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorPixmap_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Pixmap > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::Pixmap > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorPixmap_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorPixmap_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorPixmap_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorPixmap_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorPixmap_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::Pixmap > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorPixmap(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorTreeViewNode_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorTreeViewNode_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorTreeViewNode__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)new std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorTreeViewNode__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)new std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >((std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorTreeViewNode__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorTreeViewNode_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::TreeViewNode >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorTreeViewNode_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorTreeViewNode_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorTreeViewNode_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorTreeViewNode_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorTreeViewNode_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorTreeViewNode_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorTreeViewNode_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorTreeViewNode_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_TreeViewNode_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::TreeViewNode > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorTreeViewNode(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Loader > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::Loader > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorLoader_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Loader > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorLoader_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Loader > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorLoader__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)new std::vector< std::shared_ptr< UltraEngine::Loader > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorLoader__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Loader > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)new std::vector< std::shared_ptr< UltraEngine::Loader > >((std::vector< std::shared_ptr< UltraEngine::Loader > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorLoader__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorLoader_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Loader > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::Loader >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorLoader_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Loader > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::Loader > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Loader > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Loader > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::Loader > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Loader > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::Loader > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorLoader_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Loader > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Loader > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::Loader > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Loader > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Loader > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorLoader_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Loader > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Loader > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Loader > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::Loader > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorLoader_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Loader > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Loader > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorLoader_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Loader > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::Loader > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorLoader_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Loader > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::Loader > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorLoader_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Loader > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::Loader > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorLoader_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Loader > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Loader_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::Loader > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorLoader(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::Widget > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidget_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Widget > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidget_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Widget > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Widget > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidget__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)new std::vector< std::shared_ptr< UltraEngine::Widget > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidget__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Widget > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)new std::vector< std::shared_ptr< UltraEngine::Widget > >((std::vector< std::shared_ptr< UltraEngine::Widget > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidget__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidget_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidget_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Widget > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::Widget > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Widget > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::Widget > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Widget > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::Widget > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidget_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Widget > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::Widget > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Widget > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Widget > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidget_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Widget > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Widget > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::Widget > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidget_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Widget > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Widget > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWidget_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::Widget > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWidget_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::Widget > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWidget_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::Widget > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWidget_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Widget_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::Widget > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorWidget(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_Clear(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_Add(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  (arg1)->push_back((std::shared_ptr< UltraEngine::Window > const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWindow_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Window > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWindow_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  result = ((std::vector< std::shared_ptr< UltraEngine::Window > > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Window > >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWindow__SWIG_0() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  result = (std::vector< std::shared_ptr< UltraEngine::Window > > *)new std::vector< std::shared_ptr< UltraEngine::Window > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWindow__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Window > > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::shared_ptr< UltraEngine::Window > > *)new std::vector< std::shared_ptr< UltraEngine::Window > >((std::vector< std::shared_ptr< UltraEngine::Window > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWindow__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Window > > *)new_std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWindow_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWindow_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Window > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Window > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result ? new std::vector< std::shared_ptr< UltraEngine::Window > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Window > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< UltraEngine::Window > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Window > > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< UltraEngine::Window > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWindow_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Window > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< UltraEngine::Window > *)jarg3 : &tempnull3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< UltraEngine::Window > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Window > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Window > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWindow_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Window > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > tempnull1 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Window > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::shared_ptr< UltraEngine::Window > > *)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Repeat((std::shared_ptr< UltraEngine::Window > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWindow_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Window > > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< UltraEngine::Window > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWindow_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Contains(arg1,(std::shared_ptr< UltraEngine::Window > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWindow_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__IndexOf(arg1,(std::shared_ptr< UltraEngine::Window > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWindow_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  int result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  result = (int)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__LastIndexOf(arg1,(std::shared_ptr< UltraEngine::Window > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWindow_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  result = (bool)std_vector_Sl_std_shared_ptr_Sl_UltraEngine_Window_Sg__Sg__Remove(arg1,(std::shared_ptr< UltraEngine::Window > const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorWindow(void * jarg1) {
  std::vector< std::shared_ptr< UltraEngine::Window > > *arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< UltraEngine::Window > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_Clear(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_Add(void * jarg1, char * jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->push_back((std::string const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorStdString_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  result = ((std::vector< std::string > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorStdString_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  result = ((std::vector< std::string > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (std::vector< std::string >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdString__SWIG_0() {
  void * jresult ;
  std::vector< std::string > *result = 0 ;
  
  result = (std::vector< std::string > *)new std::vector< std::string >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdString__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::string > *)new std::vector< std::string >((std::vector< std::string > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdString__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::string > *)new_std_vector_Sl_std_string_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_VectorStdString_getitemcopy(void * jarg1, int jarg2) {
  char * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_string_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_VectorStdString_getitem(void * jarg1, int jarg2) {
  char * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_setitem(void * jarg1, int jarg2, char * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_string_Sg__setitem(arg1,arg2,(std::string const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_string_Sg__AddRange(arg1,(std::vector< std::string > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdString_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::string > *)std_vector_Sl_std_string_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_Insert(void * jarg1, int jarg2, char * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_string_Sg__Insert(arg1,arg2,(std::string const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string > *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::string > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_string_Sg__InsertRange(arg1,arg2,(std::vector< std::string > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_string_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_string_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdString_Repeat(char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string > *)std_vector_Sl_std_string_Sg__Repeat((std::string const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  std_vector_Sl_std_string_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_string_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdString_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string > *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::string > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_string_Sg__SetRange(arg1,arg2,(std::vector< std::string > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorStdString_Contains(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_string_Sg__Contains(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorStdString_IndexOf(void * jarg1, char * jarg2) {
  int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_string_Sg__IndexOf(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorStdString_LastIndexOf(void * jarg1, char * jarg2) {
  int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_string_Sg__LastIndexOf(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorStdString_Remove(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_string_Sg__Remove(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorStdString(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_Clear(void * jarg1) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_Add(void * jarg1, wchar_t * jarg2) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::wstring *arg2 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->push_back((std::wstring const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorStdWString_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::vector< std::wstring >::size_type result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  result = ((std::vector< std::wstring > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorStdWString_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::vector< std::wstring >::size_type result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  result = ((std::vector< std::wstring > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::vector< std::wstring >::size_type arg2 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (std::vector< std::wstring >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdWString__SWIG_0() {
  void * jresult ;
  std::vector< std::wstring > *result = 0 ;
  
  result = (std::vector< std::wstring > *)new std::vector< std::wstring >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdWString__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< std::wstring > *arg1 = 0 ;
  std::vector< std::wstring > *result = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::wstring > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< std::wstring > *)new std::vector< std::wstring >((std::vector< std::wstring > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorStdWString__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::wstring > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::wstring > *)new_std_vector_Sl_std_wstring_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdWString_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::wstring result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_wstring_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_wstring_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdWString_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::vector< std::wstring >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::wstring >::value_type *) &std_vector_Sl_std_wstring_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_setitem(void * jarg1, int jarg2, wchar_t * jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_wstring_Sg__setitem(arg1,arg2,(std::wstring const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_AddRange(void * jarg1, void * jarg2) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::vector< std::wstring > *arg2 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (std::vector< std::wstring > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::wstring > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_std_wstring_Sg__AddRange(arg1,(std::vector< std::wstring > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdWString_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::wstring > *result = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::wstring > *)std_vector_Sl_std_wstring_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_Insert(void * jarg1, int jarg2, wchar_t * jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_wstring_Sg__Insert(arg1,arg2,(std::wstring const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::vector< std::wstring > *arg3 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::wstring > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::wstring > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_wstring_Sg__InsertRange(arg1,arg2,(std::vector< std::wstring > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_RemoveAt(void * jarg1, int jarg2) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_wstring_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_wstring_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorStdWString_Repeat(wchar_t * jarg1, int jarg2) {
  void * jresult ;
  std::wstring *arg1 = 0 ;
  int arg2 ;
  std::vector< std::wstring > *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::wstring > *)std_vector_Sl_std_wstring_Sg__Repeat((std::wstring const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_Reverse__SWIG_0(void * jarg1) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  std_vector_Sl_std_wstring_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_wstring_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorStdWString_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  int arg2 ;
  std::vector< std::wstring > *arg3 = 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::wstring > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::wstring > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_wstring_Sg__SetRange(arg1,arg2,(std::vector< std::wstring > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorStdWString_Contains(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::wstring *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_wstring_Sg__Contains(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorStdWString_IndexOf(void * jarg1, wchar_t * jarg2) {
  int jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::wstring *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_wstring_Sg__IndexOf(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorStdWString_LastIndexOf(void * jarg1, wchar_t * jarg2) {
  int jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::wstring *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_wstring_Sg__LastIndexOf(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorStdWString_Remove(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  std::wstring *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_wstring_Sg__Remove(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorStdWString(void * jarg1) {
  std::vector< std::wstring > *arg1 = (std::vector< std::wstring > *) 0 ;
  
  arg1 = (std::vector< std::wstring > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_Clear(void * jarg1) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_Add(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::iVec2 const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorIVec2_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  std::vector< UltraEngine::iVec2 >::size_type result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  result = ((std::vector< UltraEngine::iVec2 > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorIVec2_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  std::vector< UltraEngine::iVec2 >::size_type result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  result = ((std::vector< UltraEngine::iVec2 > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  std::vector< UltraEngine::iVec2 >::size_type arg2 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (std::vector< UltraEngine::iVec2 >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorIVec2__SWIG_0() {
  void * jresult ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  result = (std::vector< UltraEngine::iVec2 > *)new std::vector< UltraEngine::iVec2 >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorIVec2__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = 0 ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::iVec2 > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< UltraEngine::iVec2 > *)new std::vector< UltraEngine::iVec2 >((std::vector< UltraEngine::iVec2 > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorIVec2__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< UltraEngine::iVec2 > *)new_std_vector_Sl_UltraEngine_iVec2_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorIVec2_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  UltraEngine::iVec2 result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_UltraEngine_iVec2_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorIVec2_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::iVec2 >::value_type *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::iVec2 >::value_type *) &std_vector_Sl_UltraEngine_iVec2_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__setitem(arg1,arg2,(UltraEngine::iVec2 const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_AddRange(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  std::vector< UltraEngine::iVec2 > *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (std::vector< UltraEngine::iVec2 > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::iVec2 > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_UltraEngine_iVec2_Sg__AddRange(arg1,(std::vector< UltraEngine::iVec2 > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorIVec2_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< UltraEngine::iVec2 > *)std_vector_Sl_UltraEngine_iVec2_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__Insert(arg1,arg2,(UltraEngine::iVec2 const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::iVec2 > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::iVec2 > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::iVec2 > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__InsertRange(arg1,arg2,(std::vector< UltraEngine::iVec2 > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_RemoveAt(void * jarg1, int jarg2) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorIVec2_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = 0 ;
  int arg2 ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::iVec2 > *)std_vector_Sl_UltraEngine_iVec2_Sg__Repeat((UltraEngine::iVec2 const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_Reverse__SWIG_0(void * jarg1) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  std_vector_Sl_UltraEngine_iVec2_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorIVec2_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::iVec2 > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::iVec2 > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::iVec2 > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_iVec2_Sg__SetRange(arg1,arg2,(std::vector< UltraEngine::iVec2 > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorIVec2_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_iVec2_Sg__Contains(arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorIVec2_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_iVec2_Sg__IndexOf(arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorIVec2_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_iVec2_Sg__LastIndexOf(arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorIVec2_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_iVec2_Sg__Remove(arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorIVec2(void * jarg1) {
  std::vector< UltraEngine::iVec2 > *arg1 = (std::vector< UltraEngine::iVec2 > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::iVec2 > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_Clear(void * jarg1) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_Add(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::String const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorString_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  std::vector< UltraEngine::String >::size_type result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  result = ((std::vector< UltraEngine::String > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorString_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  std::vector< UltraEngine::String >::size_type result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  result = ((std::vector< UltraEngine::String > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  std::vector< UltraEngine::String >::size_type arg2 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (std::vector< UltraEngine::String >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorString__SWIG_0() {
  void * jresult ;
  std::vector< UltraEngine::String > *result = 0 ;
  
  result = (std::vector< UltraEngine::String > *)new std::vector< UltraEngine::String >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorString__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< UltraEngine::String > *arg1 = 0 ;
  std::vector< UltraEngine::String > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::String > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< UltraEngine::String > *)new std::vector< UltraEngine::String >((std::vector< UltraEngine::String > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorString__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< UltraEngine::String > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< UltraEngine::String > *)new_std_vector_Sl_UltraEngine_String_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorString_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  UltraEngine::String result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_UltraEngine_String_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorString_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::String >::value_type *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::String >::value_type *) &std_vector_Sl_UltraEngine_String_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr< const UltraEngine::String >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  UltraEngine::String *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg3) ? ((std::shared_ptr< const UltraEngine::String > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_String_Sg__setitem(arg1,arg2,(UltraEngine::String const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_AddRange(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  std::vector< UltraEngine::String > *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (std::vector< UltraEngine::String > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::String > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_UltraEngine_String_Sg__AddRange(arg1,(std::vector< UltraEngine::String > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorString_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< UltraEngine::String > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< UltraEngine::String > *)std_vector_Sl_UltraEngine_String_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  UltraEngine::String *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg3) ? ((std::shared_ptr< const UltraEngine::String > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_String_Sg__Insert(arg1,arg2,(UltraEngine::String const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::String > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::String > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::String > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_String_Sg__InsertRange(arg1,arg2,(std::vector< UltraEngine::String > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_RemoveAt(void * jarg1, int jarg2) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_UltraEngine_String_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_String_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorString_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = 0 ;
  int arg2 ;
  std::vector< UltraEngine::String > *result = 0 ;
  
  
  arg1 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg1) ? ((std::shared_ptr< const UltraEngine::String > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::String > *)std_vector_Sl_UltraEngine_String_Sg__Repeat((UltraEngine::String const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_Reverse__SWIG_0(void * jarg1) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  std_vector_Sl_UltraEngine_String_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_String_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorString_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::String > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::String > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::String > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_String_Sg__SetRange(arg1,arg2,(std::vector< UltraEngine::String > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorString_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_String_Sg__Contains(arg1,(UltraEngine::String const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorString_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_String_Sg__IndexOf(arg1,(UltraEngine::String const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorString_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_String_Sg__LastIndexOf(arg1,(UltraEngine::String const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorString_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_String_Sg__Remove(arg1,(UltraEngine::String const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorString(void * jarg1) {
  std::vector< UltraEngine::String > *arg1 = (std::vector< UltraEngine::String > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::String > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_Clear(void * jarg1) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_Add(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWString_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  std::vector< UltraEngine::WString >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  result = ((std::vector< UltraEngine::WString > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWString_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  std::vector< UltraEngine::WString >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  result = ((std::vector< UltraEngine::WString > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  std::vector< UltraEngine::WString >::size_type arg2 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WString >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWString__SWIG_0() {
  void * jresult ;
  std::vector< UltraEngine::WString > *result = 0 ;
  
  result = (std::vector< UltraEngine::WString > *)new std::vector< UltraEngine::WString >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWString__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< UltraEngine::WString > *arg1 = 0 ;
  std::vector< UltraEngine::WString > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WString > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< UltraEngine::WString > *)new std::vector< UltraEngine::WString >((std::vector< UltraEngine::WString > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWString__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< UltraEngine::WString > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< UltraEngine::WString > *)new_std_vector_Sl_UltraEngine_WString_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWString_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  UltraEngine::WString result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_UltraEngine_WString_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWString_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WString >::value_type *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WString >::value_type *) &std_vector_Sl_UltraEngine_WString_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__setitem(arg1,arg2,(UltraEngine::WString const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_AddRange(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  std::vector< UltraEngine::WString > *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WString > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WString > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_UltraEngine_WString_Sg__AddRange(arg1,(std::vector< UltraEngine::WString > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWString_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< UltraEngine::WString > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< UltraEngine::WString > *)std_vector_Sl_UltraEngine_WString_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__Insert(arg1,arg2,(UltraEngine::WString const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WString > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WString > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WString > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__InsertRange(arg1,arg2,(std::vector< UltraEngine::WString > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_RemoveAt(void * jarg1, int jarg2) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWString_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  std::vector< UltraEngine::WString > *result = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WString > *)std_vector_Sl_UltraEngine_WString_Sg__Repeat((UltraEngine::WString const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_Reverse__SWIG_0(void * jarg1) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  std_vector_Sl_UltraEngine_WString_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWString_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WString > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WString > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WString > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WString_Sg__SetRange(arg1,arg2,(std::vector< UltraEngine::WString > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWString_Contains(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_WString_Sg__Contains(arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWString_IndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_WString_Sg__IndexOf(arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_VectorWString_LastIndexOf(void * jarg1, void * jarg2) {
  int jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)std_vector_Sl_UltraEngine_WString_Sg__LastIndexOf(arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_VectorWString_Remove(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)std_vector_Sl_UltraEngine_WString_Sg__Remove(arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorWString(void * jarg1) {
  std::vector< UltraEngine::WString > *arg1 = (std::vector< UltraEngine::WString > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WString > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_Clear(void * jarg1) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_Add(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  UltraEngine::WidgetBlock *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (UltraEngine::WidgetBlock *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetBlock const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::WidgetBlock const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidgetBlock_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  std::vector< UltraEngine::WidgetBlock >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  result = ((std::vector< UltraEngine::WidgetBlock > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidgetBlock_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  std::vector< UltraEngine::WidgetBlock >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  result = ((std::vector< UltraEngine::WidgetBlock > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  std::vector< UltraEngine::WidgetBlock >::size_type arg2 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WidgetBlock >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetBlock__SWIG_0() {
  void * jresult ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  result = (std::vector< UltraEngine::WidgetBlock > *)new std::vector< UltraEngine::WidgetBlock >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetBlock__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = 0 ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetBlock > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< UltraEngine::WidgetBlock > *)new std::vector< UltraEngine::WidgetBlock >((std::vector< UltraEngine::WidgetBlock > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetBlock__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< UltraEngine::WidgetBlock > *)new_std_vector_Sl_UltraEngine_WidgetBlock_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetBlock_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetBlock result;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_UltraEngine_WidgetBlock_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new UltraEngine::WidgetBlock((const UltraEngine::WidgetBlock &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetBlock_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetBlock >::value_type *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WidgetBlock >::value_type *) &std_vector_Sl_UltraEngine_WidgetBlock_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetBlock *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::WidgetBlock *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetBlock const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__setitem(arg1,arg2,(UltraEngine::WidgetBlock const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_AddRange(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  std::vector< UltraEngine::WidgetBlock > *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WidgetBlock > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetBlock > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_UltraEngine_WidgetBlock_Sg__AddRange(arg1,(std::vector< UltraEngine::WidgetBlock > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetBlock_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< UltraEngine::WidgetBlock > *)std_vector_Sl_UltraEngine_WidgetBlock_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetBlock *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::WidgetBlock *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetBlock const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__Insert(arg1,arg2,(UltraEngine::WidgetBlock const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetBlock > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WidgetBlock > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetBlock > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__InsertRange(arg1,arg2,(std::vector< UltraEngine::WidgetBlock > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_RemoveAt(void * jarg1, int jarg2) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetBlock_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetBlock const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WidgetBlock > *)std_vector_Sl_UltraEngine_WidgetBlock_Sg__Repeat((UltraEngine::WidgetBlock const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_Reverse__SWIG_0(void * jarg1) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  std_vector_Sl_UltraEngine_WidgetBlock_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetBlock_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetBlock > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WidgetBlock > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetBlock > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetBlock_Sg__SetRange(arg1,arg2,(std::vector< UltraEngine::WidgetBlock > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorWidgetBlock(void * jarg1) {
  std::vector< UltraEngine::WidgetBlock > *arg1 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetBlock > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_Clear(void * jarg1) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_Add(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  UltraEngine::WidgetItem *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  
  arg2 = (UltraEngine::WidgetItem *)(((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetItem const & reference is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::WidgetItem const &)*arg2);
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidgetItem_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::vector< UltraEngine::WidgetItem >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  result = ((std::vector< UltraEngine::WidgetItem > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_VectorWidgetItem_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::vector< UltraEngine::WidgetItem >::size_type result;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  result = ((std::vector< UltraEngine::WidgetItem > const *)arg1)->capacity();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::vector< UltraEngine::WidgetItem >::size_type arg2 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WidgetItem >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetItem__SWIG_0() {
  void * jresult ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  result = (std::vector< UltraEngine::WidgetItem > *)new std::vector< UltraEngine::WidgetItem >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetItem__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = 0 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetItem > const & type is null", 0);
    return 0;
  } 
  result = (std::vector< UltraEngine::WidgetItem > *)new std::vector< UltraEngine::WidgetItem >((std::vector< UltraEngine::WidgetItem > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_VectorWidgetItem__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< UltraEngine::WidgetItem > *)new_std_vector_Sl_UltraEngine_WidgetItem_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetItem_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetItem result;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_UltraEngine_WidgetItem_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr<  UltraEngine::WidgetItem >(new UltraEngine::WidgetItem((UltraEngine::WidgetItem &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetItem_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetItem >::value_type *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WidgetItem >::value_type *) &std_vector_Sl_UltraEngine_WidgetItem_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::shared_ptr< const UltraEngine::WidgetItem >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetItem *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WidgetItem *)(((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetItem const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__setitem(arg1,arg2,(UltraEngine::WidgetItem const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_AddRange(void * jarg1, void * jarg2) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::vector< UltraEngine::WidgetItem > *arg2 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (std::vector< UltraEngine::WidgetItem > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetItem > const & type is null", 0);
    return ;
  } 
  std_vector_Sl_UltraEngine_WidgetItem_Sg__AddRange(arg1,(std::vector< UltraEngine::WidgetItem > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetItem_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< UltraEngine::WidgetItem > *)std_vector_Sl_UltraEngine_WidgetItem_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  UltraEngine::WidgetItem *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WidgetItem *)(((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetItem const & reference is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__Insert(arg1,arg2,(UltraEngine::WidgetItem const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetItem > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WidgetItem > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetItem > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__InsertRange(arg1,arg2,(std::vector< UltraEngine::WidgetItem > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_RemoveAt(void * jarg1, int jarg2) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_VectorWidgetItem_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WidgetItem *arg1 = 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  
  arg1 = (UltraEngine::WidgetItem *)(((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WidgetItem > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WidgetItem const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< UltraEngine::WidgetItem > *)std_vector_Sl_UltraEngine_WidgetItem_Sg__Repeat((UltraEngine::WidgetItem const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_Reverse__SWIG_0(void * jarg1) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  std_vector_Sl_UltraEngine_WidgetItem_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_VectorWidgetItem_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  int arg2 ;
  std::vector< UltraEngine::WidgetItem > *arg3 = 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< UltraEngine::WidgetItem > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< UltraEngine::WidgetItem > const & type is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_UltraEngine_WidgetItem_Sg__SetRange(arg1,arg2,(std::vector< UltraEngine::WidgetItem > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_VectorWidgetItem(void * jarg1) {
  std::vector< UltraEngine::WidgetItem > *arg1 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  
  arg1 = (std::vector< UltraEngine::WidgetItem > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_AssetWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Asset > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Asset > *)new std::weak_ptr< UltraEngine::Asset >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_AssetWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Asset > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Asset > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Asset > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Asset > *)new std::weak_ptr< UltraEngine::Asset >((std::weak_ptr< UltraEngine::Asset > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_AssetWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Asset > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > tempnull1 ;
  std::weak_ptr< UltraEngine::Asset > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Asset > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Asset > *)new std::weak_ptr< UltraEngine::Asset >((std::shared_ptr< UltraEngine::Asset > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AssetWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  std::weak_ptr< UltraEngine::Asset > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Asset > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Asset > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_AssetWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_AssetWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Asset > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_AssetWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Asset > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AssetWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Asset > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_AssetWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Asset > *arg1 = (std::weak_ptr< UltraEngine::Asset > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Asset > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PackageWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Package > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Package > *)new std::weak_ptr< UltraEngine::Package >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PackageWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Package > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Package > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Package > *)new std::weak_ptr< UltraEngine::Package >((std::weak_ptr< UltraEngine::Package > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PackageWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Package > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Package > tempnull1 ;
  std::weak_ptr< UltraEngine::Package > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Package > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Package > *)new std::weak_ptr< UltraEngine::Package >((std::shared_ptr< UltraEngine::Package > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  std::weak_ptr< UltraEngine::Package > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Package > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_PackageWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Package > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_PackageWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Package > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_PackageWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  std::shared_ptr< UltraEngine::Package > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Package > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Package >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_PackageWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Package > *arg1 = (std::weak_ptr< UltraEngine::Package > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Package > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PixmapWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Pixmap > *)new std::weak_ptr< UltraEngine::Pixmap >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PixmapWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Pixmap > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Pixmap > *)new std::weak_ptr< UltraEngine::Pixmap >((std::weak_ptr< UltraEngine::Pixmap > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PixmapWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Pixmap > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull1 ;
  std::weak_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Pixmap > *)new std::weak_ptr< UltraEngine::Pixmap >((std::shared_ptr< UltraEngine::Pixmap > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PixmapWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  std::weak_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Pixmap > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_PixmapWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_PixmapWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Pixmap > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_PixmapWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Pixmap > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_PixmapWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Pixmap > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_PixmapWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Pixmap > *arg1 = (std::weak_ptr< UltraEngine::Pixmap > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Pixmap > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TimerWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Timer > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Timer > *)new std::weak_ptr< UltraEngine::Timer >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TimerWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Timer > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Timer > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Timer > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Timer > *)new std::weak_ptr< UltraEngine::Timer >((std::weak_ptr< UltraEngine::Timer > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TimerWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Timer > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Timer > tempnull1 ;
  std::weak_ptr< UltraEngine::Timer > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Timer > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Timer > *)new std::weak_ptr< UltraEngine::Timer >((std::shared_ptr< UltraEngine::Timer > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TimerWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  std::weak_ptr< UltraEngine::Timer > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Timer > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Timer > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TimerWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_TimerWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Timer > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TimerWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Timer > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TimerWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  std::shared_ptr< UltraEngine::Timer > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Timer > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Timer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TimerWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Timer > *arg1 = (std::weak_ptr< UltraEngine::Timer > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Timer > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ObjectWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Object > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Object > *)new std::weak_ptr< UltraEngine::Object >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ObjectWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Object > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Object > *)new std::weak_ptr< UltraEngine::Object >((std::weak_ptr< UltraEngine::Object > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ObjectWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull1 ;
  std::weak_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Object > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Object > *)new std::weak_ptr< UltraEngine::Object >((std::shared_ptr< UltraEngine::Object > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ObjectWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  std::weak_ptr< UltraEngine::Object > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Object > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Object > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ObjectWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_ObjectWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Object > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ObjectWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Object > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ObjectWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  std::shared_ptr< UltraEngine::Object > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Object > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Object >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ObjectWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Object > *arg1 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Object > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PluginWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Plugin > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Plugin > *)new std::weak_ptr< UltraEngine::Plugin >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PluginWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Plugin > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Plugin > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Plugin > *)new std::weak_ptr< UltraEngine::Plugin >((std::weak_ptr< UltraEngine::Plugin > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PluginWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Plugin > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Plugin > tempnull1 ;
  std::weak_ptr< UltraEngine::Plugin > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Plugin > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Plugin > *)new std::weak_ptr< UltraEngine::Plugin >((std::shared_ptr< UltraEngine::Plugin > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PluginWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Plugin > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_PluginWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_PluginWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Plugin > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_PluginWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Plugin > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_PluginWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Plugin > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Plugin >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_PluginWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Plugin > *arg1 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Plugin > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Widget > *)new std::weak_ptr< UltraEngine::Widget >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Widget > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Widget > *)new std::weak_ptr< UltraEngine::Widget >((std::weak_ptr< UltraEngine::Widget > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Widget > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull1 ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Widget > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Widget > *)new std::weak_ptr< UltraEngine::Widget >((std::shared_ptr< UltraEngine::Widget > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_WidgetWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Widget > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Widget > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Widget > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WidgetWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Widget > *arg1 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Widget > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WindowWeakPtr__SWIG_0() {
  void * jresult ;
  std::weak_ptr< UltraEngine::Window > *result = 0 ;
  
  result = (std::weak_ptr< UltraEngine::Window > *)new std::weak_ptr< UltraEngine::Window >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WindowWeakPtr__SWIG_1(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Window > *arg1 = 0 ;
  std::weak_ptr< UltraEngine::Window > *result = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Window > const & type is null", 0);
    return 0;
  } 
  result = (std::weak_ptr< UltraEngine::Window > *)new std::weak_ptr< UltraEngine::Window >((std::weak_ptr< UltraEngine::Window > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WindowWeakPtr__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Window > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull1 ;
  std::weak_ptr< UltraEngine::Window > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Window > *)jarg1 : &tempnull1; 
  result = (std::weak_ptr< UltraEngine::Window > *)new std::weak_ptr< UltraEngine::Window >((std::shared_ptr< UltraEngine::Window > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WindowWeakPtr_swap(void * jarg1, void * jarg2) {
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  std::weak_ptr< UltraEngine::Window > *arg2 = 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Window > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Window > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WindowWeakPtr_reset(void * jarg1) {
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  (arg1)->reset();
}


SWIGEXPORT long SWIGSTDCALL CSharp_WindowWeakPtr_use_count(void * jarg1) {
  long jresult ;
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  long result;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  result = (long)((std::weak_ptr< UltraEngine::Window > const *)arg1)->use_count();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WindowWeakPtr_expired(void * jarg1) {
  unsigned int jresult ;
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  bool result;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  result = (bool)((std::weak_ptr< UltraEngine::Window > const *)arg1)->expired();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WindowWeakPtr_lock_(void * jarg1) {
  void * jresult ;
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  result = ((std::weak_ptr< UltraEngine::Window > const *)arg1)->lock();
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WindowWeakPtr(void * jarg1) {
  std::weak_ptr< UltraEngine::Window > *arg1 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  
  arg1 = (std::weak_ptr< UltraEngine::Window > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetColorArray__SWIG_0() {
  void * jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *result = 0 ;
  
  result = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)new std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetColorArray__SWIG_1(void * jarg1) {
  void * jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *result = 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > const & type is null", 0);
    return 0;
  } 
  result = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)new std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >((std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_WidgetColorArray_size(void * jarg1) {
  unsigned long jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::size_type result;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  result = ((std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetColorArray_empty(void * jarg1) {
  unsigned int jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  bool result;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  result = (bool)((std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetColorArray_Fill(void * jarg1, void * jarg2) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *arg2 = 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type const & type is null", 0);
    return ;
  } 
  (arg1)->fill((std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetColorArray_Swap(void * jarg1, void * jarg2) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg2 = 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetColorArray_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  int arg2 ;
  UltraEngine::Vec4 result;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetColorArray_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  int arg2 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *result = 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *) &std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetColorArray_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  int arg2 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *arg3 = 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::value_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 >::const_reference type is null", 0);
    return ;
  } 
  try {
    std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__setitem(arg1,arg2,(UltraEngine::Vec4 const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetColorArray_Reverse__SWIG_0(void * jarg1) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetColorArray_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_array_Sl_UltraEngine_Vec4_Sc_UltraEngine_WIDGETCOLOR_POPUP_Sa_1_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WidgetColorArray(void * jarg1) {
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  
  arg1 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntFourArray__SWIG_0() {
  void * jresult ;
  std::array< int,4 > *result = 0 ;
  
  result = (std::array< int,4 > *)new std::array< int,4 >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntFourArray__SWIG_1(void * jarg1) {
  void * jresult ;
  std::array< int,4 > *arg1 = 0 ;
  std::array< int,4 > *result = 0 ;
  
  arg1 = (std::array< int,4 > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< int,4 > const & type is null", 0);
    return 0;
  } 
  result = (std::array< int,4 > *)new std::array< int,4 >((std::array< int,4 > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_IntFourArray_size(void * jarg1) {
  unsigned long jresult ;
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  std::array< int,4 >::size_type result;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  result = ((std::array< int,4 > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_IntFourArray_empty(void * jarg1) {
  unsigned int jresult ;
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  bool result;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  result = (bool)((std::array< int,4 > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntFourArray_Fill(void * jarg1, int jarg2) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  std::array< int,4 >::value_type *arg2 = 0 ;
  std::array< int,4 >::value_type temp2 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  temp2 = (std::array< int,4 >::value_type)jarg2; 
  arg2 = &temp2; 
  (arg1)->fill((std::array< int,4 >::value_type const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntFourArray_Swap(void * jarg1, void * jarg2) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  std::array< int,4 > *arg2 = 0 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  arg2 = (std::array< int,4 > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::array< int,4 > & type is null", 0);
    return ;
  } 
  (arg1)->swap(*arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_IntFourArray_getitemcopy(void * jarg1, int jarg2) {
  int jresult ;
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (int)std_array_Sl_int_Sc_4_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IntFourArray_getitem(void * jarg1, int jarg2) {
  int jresult ;
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  int arg2 ;
  std::array< int,4 >::value_type *result = 0 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::array< int,4 >::value_type *) &std_array_Sl_int_Sc_4_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntFourArray_setitem(void * jarg1, int jarg2, int jarg3) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  int arg2 ;
  std::array< int,4 >::value_type *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  try {
    std_array_Sl_int_Sc_4_Sg__setitem(arg1,arg2,(int const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntFourArray_Reverse__SWIG_0(void * jarg1) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  std_array_Sl_int_Sc_4_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntFourArray_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_array_Sl_int_Sc_4_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_IntFourArray(void * jarg1) {
  std::array< int,4 > *arg1 = (std::array< int,4 > *) 0 ;
  
  arg1 = (std::array< int,4 > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_push_front(void * jarg1, void * jarg2) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  UltraEngine::EventListener *arg2 = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (UltraEngine::EventListener *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::EventListener const & type is null", 0);
    return ;
  } 
  (arg1)->push_front((UltraEngine::EventListener const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_push_back(void * jarg1, void * jarg2) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  UltraEngine::EventListener *arg2 = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (UltraEngine::EventListener *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::EventListener const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::EventListener const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_RemoveFirst(void * jarg1) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  (arg1)->pop_front();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_RemoveLast(void * jarg1) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  (arg1)->pop_back();
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_ListEventListener_size(void * jarg1) {
  unsigned long jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::size_type result;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  result = ((std::list< UltraEngine::EventListener > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_Clear(void * jarg1) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_getItem(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  std::list< UltraEngine::EventListener >::value_type *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  result = (std::list< UltraEngine::EventListener >::value_type *) &std_list_Sl_UltraEngine_EventListener_Sg__getItem(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_setItem(void * jarg1, void * jarg2, void * jarg3) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  UltraEngine::EventListener *arg3 = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  arg3 = (UltraEngine::EventListener *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::EventListener const & type is null", 0);
    return ;
  } 
  std_list_Sl_UltraEngine_EventListener_Sg__setItem(arg1,arg2,(UltraEngine::EventListener const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_getFirstIter(void * jarg1) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  result = (std::list< UltraEngine::EventListener >::iterator *)std_list_Sl_UltraEngine_EventListener_Sg__getFirstIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_getLastIter(void * jarg1) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  result = (std::list< UltraEngine::EventListener >::iterator *)std_list_Sl_UltraEngine_EventListener_Sg__getLastIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_getNextIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  result = (std::list< UltraEngine::EventListener >::iterator *)std_list_Sl_UltraEngine_EventListener_Sg__getNextIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_getPrevIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  result = (std::list< UltraEngine::EventListener >::iterator *)std_list_Sl_UltraEngine_EventListener_Sg__getPrevIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEventListener_insertNode(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  UltraEngine::EventListener *arg3 = 0 ;
  std::list< UltraEngine::EventListener >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  arg3 = (UltraEngine::EventListener *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::EventListener const & type is null", 0);
    return 0;
  } 
  result = (std::list< UltraEngine::EventListener >::iterator *)std_list_Sl_UltraEngine_EventListener_Sg__insertNode(arg1,arg2,(UltraEngine::EventListener const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_eraseIter(void * jarg1, void * jarg2) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  std_list_Sl_UltraEngine_EventListener_Sg__eraseIter(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEventListener_deleteIter(void * jarg1, void * jarg2) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  std_list_Sl_UltraEngine_EventListener_Sg__deleteIter(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListEventListener_equals(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg2 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  std::list< UltraEngine::EventListener >::iterator *arg3 = (std::list< UltraEngine::EventListener >::iterator *) 0 ;
  bool result;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  arg2 = (std::list< UltraEngine::EventListener >::iterator *)jarg2; 
  arg3 = (std::list< UltraEngine::EventListener >::iterator *)jarg3; 
  result = (bool)std_list_Sl_UltraEngine_EventListener_Sg__equals(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListEventListener() {
  void * jresult ;
  std::list< UltraEngine::EventListener > *result = 0 ;
  
  result = (std::list< UltraEngine::EventListener > *)new std::list< UltraEngine::EventListener >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListEventListener(void * jarg1) {
  std::list< UltraEngine::EventListener > *arg1 = (std::list< UltraEngine::EventListener > *) 0 ;
  
  arg1 = (std::list< UltraEngine::EventListener > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_push_front(void * jarg1, void * jarg2) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  (arg1)->push_front((UltraEngine::Event const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_push_back(void * jarg1, void * jarg2) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((UltraEngine::Event const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_RemoveFirst(void * jarg1) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  (arg1)->pop_front();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_RemoveLast(void * jarg1) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  (arg1)->pop_back();
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_ListEvent_size(void * jarg1) {
  unsigned long jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::size_type result;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  result = ((std::list< UltraEngine::Event > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_Clear(void * jarg1) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_getItem(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  std::list< UltraEngine::Event >::value_type *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  result = (std::list< UltraEngine::Event >::value_type *) &std_list_Sl_UltraEngine_Event_Sg__getItem(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_setItem(void * jarg1, void * jarg2, void * jarg3) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  UltraEngine::Event *arg3 = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  arg3 = (UltraEngine::Event *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  std_list_Sl_UltraEngine_Event_Sg__setItem(arg1,arg2,(UltraEngine::Event const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_getFirstIter(void * jarg1) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  result = (std::list< UltraEngine::Event >::iterator *)std_list_Sl_UltraEngine_Event_Sg__getFirstIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_getLastIter(void * jarg1) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  result = (std::list< UltraEngine::Event >::iterator *)std_list_Sl_UltraEngine_Event_Sg__getLastIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_getNextIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  std::list< UltraEngine::Event >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  result = (std::list< UltraEngine::Event >::iterator *)std_list_Sl_UltraEngine_Event_Sg__getNextIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_getPrevIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  std::list< UltraEngine::Event >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  result = (std::list< UltraEngine::Event >::iterator *)std_list_Sl_UltraEngine_Event_Sg__getPrevIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListEvent_insertNode(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  UltraEngine::Event *arg3 = 0 ;
  std::list< UltraEngine::Event >::iterator *result = 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  arg3 = (UltraEngine::Event *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  result = (std::list< UltraEngine::Event >::iterator *)std_list_Sl_UltraEngine_Event_Sg__insertNode(arg1,arg2,(UltraEngine::Event const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_eraseIter(void * jarg1, void * jarg2) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  std_list_Sl_UltraEngine_Event_Sg__eraseIter(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListEvent_deleteIter(void * jarg1, void * jarg2) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  std_list_Sl_UltraEngine_Event_Sg__deleteIter(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListEvent_equals(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg2 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  std::list< UltraEngine::Event >::iterator *arg3 = (std::list< UltraEngine::Event >::iterator *) 0 ;
  bool result;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  arg2 = (std::list< UltraEngine::Event >::iterator *)jarg2; 
  arg3 = (std::list< UltraEngine::Event >::iterator *)jarg3; 
  result = (bool)std_list_Sl_UltraEngine_Event_Sg__equals(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListEvent() {
  void * jresult ;
  std::list< UltraEngine::Event > *result = 0 ;
  
  result = (std::list< UltraEngine::Event > *)new std::list< UltraEngine::Event >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListEvent(void * jarg1) {
  std::list< UltraEngine::Event > *arg1 = (std::list< UltraEngine::Event > *) 0 ;
  
  arg1 = (std::list< UltraEngine::Event > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_push_front(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::weak_ptr< UltraEngine::Package > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Package > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > const & type is null", 0);
    return ;
  } 
  (arg1)->push_front((std::weak_ptr< UltraEngine::Package > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_push_back(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::weak_ptr< UltraEngine::Package > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Package > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((std::weak_ptr< UltraEngine::Package > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_RemoveFirst(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  (arg1)->pop_front();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_RemoveLast(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  (arg1)->pop_back();
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_ListPackage_size(void * jarg1) {
  unsigned long jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::size_type result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  result = ((std::list< std::weak_ptr< UltraEngine::Package > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_Clear(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_getItem(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::value_type *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::value_type *) &std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getItem(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_setItem(void * jarg1, void * jarg2, void * jarg3) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Package > *arg3 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Package > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > const & type is null", 0);
    return ;
  } 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__setItem(arg1,arg2,(std::weak_ptr< UltraEngine::Package > const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_getFirstIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getFirstIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_getLastIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getLastIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_getNextIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getNextIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_getPrevIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__getPrevIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPackage_insertNode(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Package > *arg3 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Package > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Package > const & type is null", 0);
    return 0;
  } 
  result = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__insertNode(arg1,arg2,(std::weak_ptr< UltraEngine::Package > const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_eraseIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__eraseIter(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPackage_deleteIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__deleteIter(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListPackage_equals(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > >::iterator *arg3 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *) 0 ;
  bool result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg2; 
  arg3 = (std::list< std::weak_ptr< UltraEngine::Package > >::iterator *)jarg3; 
  result = (bool)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Package_Sg__Sg__equals(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListPackage() {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Package > > *result = 0 ;
  
  result = (std::list< std::weak_ptr< UltraEngine::Package > > *)new std::list< std::weak_ptr< UltraEngine::Package > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListPackage(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Package > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_push_front(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Plugin > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > const & type is null", 0);
    return ;
  } 
  (arg1)->push_front((std::weak_ptr< UltraEngine::Plugin > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_push_back(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Plugin > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((std::weak_ptr< UltraEngine::Plugin > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_RemoveFirst(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  (arg1)->pop_front();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_RemoveLast(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  (arg1)->pop_back();
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_ListPlugin_size(void * jarg1) {
  unsigned long jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::size_type result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  result = ((std::list< std::weak_ptr< UltraEngine::Plugin > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_Clear(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_getItem(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::value_type *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::value_type *) &std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getItem(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_setItem(void * jarg1, void * jarg2, void * jarg3) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg3 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Plugin > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > const & type is null", 0);
    return ;
  } 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__setItem(arg1,arg2,(std::weak_ptr< UltraEngine::Plugin > const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_getFirstIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getFirstIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_getLastIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getLastIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_getNextIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getNextIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_getPrevIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__getPrevIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListPlugin_insertNode(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg3 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Plugin > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Plugin > const & type is null", 0);
    return 0;
  } 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__insertNode(arg1,arg2,(std::weak_ptr< UltraEngine::Plugin > const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_eraseIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__eraseIter(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListPlugin_deleteIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__deleteIter(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListPlugin_equals(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *arg3 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *) 0 ;
  bool result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg2; 
  arg3 = (std::list< std::weak_ptr< UltraEngine::Plugin > >::iterator *)jarg3; 
  result = (bool)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Plugin_Sg__Sg__equals(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListPlugin() {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *result = 0 ;
  
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)new std::list< std::weak_ptr< UltraEngine::Plugin > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListPlugin(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_push_front(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > const & type is null", 0);
    return ;
  } 
  (arg1)->push_front((std::weak_ptr< UltraEngine::Widget > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_push_back(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > const & type is null", 0);
    return ;
  } 
  (arg1)->push_back((std::weak_ptr< UltraEngine::Widget > const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_RemoveFirst(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  (arg1)->pop_front();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_RemoveLast(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  (arg1)->pop_back();
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_ListWidget_size(void * jarg1) {
  unsigned long jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::size_type result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  result = ((std::list< std::weak_ptr< UltraEngine::Widget > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_Clear(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_getItem(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::value_type *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::value_type *) &std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getItem(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_setItem(void * jarg1, void * jarg2, void * jarg3) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg3 = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Widget > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > const & type is null", 0);
    return ;
  } 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__setItem(arg1,arg2,(std::weak_ptr< UltraEngine::Widget > const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_getFirstIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getFirstIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_getLastIter(void * jarg1) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getLastIter(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_getNextIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getNextIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_getPrevIter(void * jarg1, void * jarg2) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__getPrevIter(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ListWidget_insertNode(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg3 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *result = 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  arg3 = (std::weak_ptr< UltraEngine::Widget > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::weak_ptr< UltraEngine::Widget > const & type is null", 0);
    return 0;
  } 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__insertNode(arg1,arg2,(std::weak_ptr< UltraEngine::Widget > const &)*arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_eraseIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__eraseIter(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListWidget_deleteIter(void * jarg1, void * jarg2) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__deleteIter(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListWidget_equals(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *arg3 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *) 0 ;
  bool result;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg2; 
  arg3 = (std::list< std::weak_ptr< UltraEngine::Widget > >::iterator *)jarg3; 
  result = (bool)std_list_Sl_std_weak_ptr_Sl_UltraEngine_Widget_Sg__Sg__equals(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListWidget() {
  void * jresult ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *result = 0 ;
  
  result = (std::list< std::weak_ptr< UltraEngine::Widget > > *)new std::list< std::weak_ptr< UltraEngine::Widget > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListWidget(void * jarg1) {
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  
  arg1 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapTimer__SWIG_0() {
  void * jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *result = 0 ;
  
  result = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)new std::map< int,std::weak_ptr< UltraEngine::Timer > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapTimer__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *result = 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,std::weak_ptr< UltraEngine::Timer > > const & type is null", 0);
    return 0;
  } 
  result = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)new std::map< int,std::weak_ptr< UltraEngine::Timer > >((std::map< int,std::weak_ptr< UltraEngine::Timer > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapTimer_size(void * jarg1) {
  unsigned long jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::size_type result;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  result = ((std::map< int,std::weak_ptr< UltraEngine::Timer > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapTimer_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  bool result;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  result = (bool)((std::map< int,std::weak_ptr< UltraEngine::Timer > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapTimer_Clear(void * jarg1) {
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapTimer_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *arg2 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type temp2 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  temp2 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type)jarg2; 
  arg2 = &temp2; 
  try {
    result = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *) &std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__getitem(arg1,(int const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapTimer_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *arg2 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *arg3 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type temp2 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  temp2 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type const & type is null", 0);
    return ;
  } 
  std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__setitem(arg1,(int const &)*arg2,(std::weak_ptr< UltraEngine::Timer > const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapTimer_ContainsKey(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *arg2 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  temp2 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__ContainsKey(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapTimer_Add(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *arg2 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *arg3 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type temp2 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  temp2 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,std::weak_ptr< UltraEngine::Timer > >::mapped_type const & type is null", 0);
    return ;
  } 
  try {
    std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__Add(arg1,(int const &)*arg2,(std::weak_ptr< UltraEngine::Timer > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapTimer_Remove(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *arg2 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  temp2 = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__Remove(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapTimer_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *result = 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  result = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *)std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_MapTimer_get_next_key(void * jarg1, void * jarg2) {
  int jresult ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *result = 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *)jarg2; 
  result = (std::map< int,std::weak_ptr< UltraEngine::Timer > >::key_type *) &std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__get_next_key(arg1,arg2);
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapTimer_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *) 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > >::iterator *)jarg2; 
  std_map_Sl_int_Sc_std_weak_ptr_Sl_UltraEngine_Timer_Sg__Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapTimer(void * jarg1) {
  std::map< int,std::weak_ptr< UltraEngine::Timer > > *arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *) 0 ;
  
  arg1 = (std::map< int,std::weak_ptr< UltraEngine::Timer > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapAsset__SWIG_0() {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *result = 0 ;
  
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)new std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapAsset__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > const & type is null", 0);
    return 0;
  } 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)new std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >((std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapAsset_size(void * jarg1) {
  unsigned long jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::size_type result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  result = ((std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapAsset_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  result = (bool)((std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapAsset_Clear(void * jarg1) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapAsset_getitem(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  try {
    result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *) &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__getitem(arg1,(std::wstring const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapAsset_setitem(void * jarg1, wchar_t * jarg2, void * jarg3) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type const & type is null", 0);
    return ;
  } 
  std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__setitem(arg1,(std::wstring const &)*arg2,(std::weak_ptr< UltraEngine::Asset > const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapAsset_ContainsKey(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__ContainsKey(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapAsset_Add(void * jarg1, wchar_t * jarg2, void * jarg3) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::mapped_type const & type is null", 0);
    return ;
  } 
  try {
    std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__Add(arg1,(std::wstring const &)*arg2,(std::weak_ptr< UltraEngine::Asset > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapAsset_Remove(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__Remove(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapAsset_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapAsset_get_next_key(void * jarg1, void * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *)jarg2; 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > >::key_type *) &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__get_next_key(arg1,arg2);
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapAsset_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > >::iterator *)jarg2; 
  std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Asset_Sg__Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapAsset(void * jarg1) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapWindow__SWIG_0() {
  void * jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *result = 0 ;
  
  result = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)new std::map< HWND,std::weak_ptr< UltraEngine::Window > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapWindow__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *result = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< HWND,std::weak_ptr< UltraEngine::Window > > const & type is null", 0);
    return 0;
  } 
  result = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)new std::map< HWND,std::weak_ptr< UltraEngine::Window > >((std::map< HWND,std::weak_ptr< UltraEngine::Window > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapWindow_size(void * jarg1) {
  unsigned long jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::size_type result;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  result = ((std::map< HWND,std::weak_ptr< UltraEngine::Window > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapWindow_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  bool result;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  result = (bool)((std::map< HWND,std::weak_ptr< UltraEngine::Window > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapWindow_Clear(void * jarg1) {
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapWindow_getitem(void * jarg1,  HWND*  jarg2) {
  void * jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *arg2 = 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2; 
  try {
    result = (std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *) &std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__getitem(arg1,(HWND const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapWindow_setitem(void * jarg1,  HWND*  jarg2, void * jarg3) {
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *arg2 = 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2; 
  arg3 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type const & type is null", 0);
    return ;
  } 
  std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__setitem(arg1,(HWND const &)*arg2,(std::weak_ptr< UltraEngine::Window > const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapWindow_ContainsKey(void * jarg1,  HWND*  jarg2) {
  unsigned int jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2; 
  result = (bool)std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__ContainsKey(arg1,(HWND const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapWindow_Add(void * jarg1,  HWND*  jarg2, void * jarg3) {
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *arg2 = 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2; 
  arg3 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< HWND,std::weak_ptr< UltraEngine::Window > >::mapped_type const & type is null", 0);
    return ;
  } 
  try {
    std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__Add(arg1,(HWND const &)*arg2,(std::weak_ptr< UltraEngine::Window > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapWindow_Remove(void * jarg1,  HWND*  jarg2) {
  unsigned int jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = jarg2; 
  result = (bool)std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__Remove(arg1,(HWND const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapWindow_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *result = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  result = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *)std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT  HWND*  SWIGSTDCALL CSharp_MapWindow_get_next_key(void * jarg1, void * jarg2) {
  HWND*  jresult ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *result = 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *)jarg2; 
  result = (std::map< HWND,std::weak_ptr< UltraEngine::Window > >::key_type *) &std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__get_next_key(arg1,arg2);
  jresult = result;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapWindow_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *) 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > >::iterator *)jarg2; 
  std_map_Sl_HWND_Sc_std_weak_ptr_Sl_UltraEngine_Window_Sg__Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapWindow(void * jarg1) {
  std::map< HWND,std::weak_ptr< UltraEngine::Window > > *arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *) 0 ;
  
  arg1 = (std::map< HWND,std::weak_ptr< UltraEngine::Window > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapProperties__SWIG_0() {
  void * jresult ;
  std::map< std::wstring,std::wstring > *result = 0 ;
  
  result = (std::map< std::wstring,std::wstring > *)new std::map< std::wstring,std::wstring >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapProperties__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::wstring > *arg1 = 0 ;
  std::map< std::wstring,std::wstring > *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::wstring > const & type is null", 0);
    return 0;
  } 
  result = (std::map< std::wstring,std::wstring > *)new std::map< std::wstring,std::wstring >((std::map< std::wstring,std::wstring > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapProperties_size(void * jarg1) {
  unsigned long jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::size_type result;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  result = ((std::map< std::wstring,std::wstring > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapProperties_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  result = (bool)((std::map< std::wstring,std::wstring > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapProperties_Clear(void * jarg1) {
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapProperties_getitem(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::wstring >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  try {
    result = (std::map< std::wstring,std::wstring >::mapped_type *) &std_map_Sl_std_wstring_Sc_std_wstring_Sg__getitem(arg1,(std::wstring const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapProperties_setitem(void * jarg1, wchar_t * jarg2, wchar_t * jarg3) {
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::wstring >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  std_map_Sl_std_wstring_Sc_std_wstring_Sg__setitem(arg1,(std::wstring const &)*arg2,(std::wstring const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapProperties_ContainsKey(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_wstring_Sg__ContainsKey(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapProperties_Add(void * jarg1, wchar_t * jarg2, wchar_t * jarg3) {
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::wstring >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_map_Sl_std_wstring_Sc_std_wstring_Sg__Add(arg1,(std::wstring const &)*arg2,(std::wstring const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapProperties_Remove(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_wstring_Sg__Remove(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapProperties_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  result = (std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *)std_map_Sl_std_wstring_Sc_std_wstring_Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapProperties_get_next_key(void * jarg1, void * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *) 0 ;
  std::map< std::wstring,std::wstring >::key_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *)jarg2; 
  result = (std::map< std::wstring,std::wstring >::key_type *) &std_map_Sl_std_wstring_Sc_std_wstring_Sg__get_next_key(arg1,arg2);
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapProperties_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *) 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > >::iterator *)jarg2; 
  std_map_Sl_std_wstring_Sc_std_wstring_Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapProperties(void * jarg1) {
  std::map< std::wstring,std::wstring > *arg1 = (std::map< std::wstring,std::wstring > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::wstring > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapPixmap__SWIG_0() {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)new std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapPixmap__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return 0;
  } 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)new std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >((std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapPixmap_size(void * jarg1) {
  unsigned long jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::size_type result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  result = ((std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapPixmap_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  result = (bool)((std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapPixmap_Clear(void * jarg1) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapPixmap_getitem(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  try {
    result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *) &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__getitem(arg1,(std::wstring const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapPixmap_setitem(void * jarg1, wchar_t * jarg2, void * jarg3) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type const & type is null", 0);
    return ;
  } 
  std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__setitem(arg1,(std::wstring const &)*arg2,(std::weak_ptr< UltraEngine::Pixmap > const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapPixmap_ContainsKey(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__ContainsKey(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapPixmap_Add(void * jarg1, wchar_t * jarg2, void * jarg3) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *arg2 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::mapped_type const & type is null", 0);
    return ;
  } 
  try {
    std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Add(arg1,(std::wstring const &)*arg2,(std::weak_ptr< UltraEngine::Pixmap > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapPixmap_Remove(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Remove(arg1,(std::wstring const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapPixmap_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *)std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapPixmap_get_next_key(void * jarg1, void * jarg2) {
  void * jresult ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *result = 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *)jarg2; 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > >::key_type *) &std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__get_next_key(arg1,arg2);
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapPixmap_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >::iterator *)jarg2; 
  std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapPixmap(void * jarg1) {
  std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *) 0 ;
  
  arg1 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapCachedPixmaps__SWIG_0() {
  void * jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *result = 0 ;
  
  result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)new std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MapCachedPixmaps__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > > *arg1 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *result = 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > > const & type is null", 0);
    return 0;
  } 
  result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)new std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >((std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_MapCachedPixmaps_size(void * jarg1) {
  unsigned long jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::size_type result;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  result = ((std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > const *)arg1)->size();
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapCachedPixmaps_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  bool result;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  result = (bool)((std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapCachedPixmaps_Clear(void * jarg1) {
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapCachedPixmaps_getitem(void * jarg1, float jarg2) {
  void * jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *arg2 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type temp2 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  temp2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type)jarg2; 
  arg2 = &temp2; 
  try {
    result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *) &std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__getitem(arg1,(float const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapCachedPixmaps_setitem(void * jarg1, float jarg2, void * jarg3) {
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *arg2 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *arg3 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type temp2 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  temp2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type const & type is null", 0);
    return ;
  } 
  std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__setitem(arg1,(float const &)*arg2,(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapCachedPixmaps_ContainsKey(void * jarg1, float jarg2) {
  unsigned int jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *arg2 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  temp2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__ContainsKey(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapCachedPixmaps_Add(void * jarg1, float jarg2, void * jarg3) {
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *arg2 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *arg3 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type temp2 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  temp2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::mapped_type const & type is null", 0);
    return ;
  } 
  try {
    std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__Add(arg1,(float const &)*arg2,(std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MapCachedPixmaps_Remove(void * jarg1, float jarg2) {
  unsigned int jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *arg2 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  temp2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__Remove(arg1,(float const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MapCachedPixmaps_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *result = 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *)std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_MapCachedPixmaps_get_next_key(void * jarg1, void * jarg2) {
  float jresult ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *result = 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *)jarg2; 
  result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > >::key_type *) &std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__get_next_key(arg1,arg2);
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MapCachedPixmaps_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *) 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > >::iterator *)jarg2; 
  std_map_Sl_float_Sc_std_map_Sl_std_wstring_Sc_std_weak_ptr_Sl_UltraEngine_Pixmap_Sg__Sg__Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MapCachedPixmaps(void * jarg1) {
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *) 0 ;
  
  arg1 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap > > > *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp__ULTRA_ENGINE_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp__HAS_STD_BYTE_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_0(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::TextureFlags arg1 ;
  UltraEngine::TextureFlags arg2 ;
  UltraEngine::TextureFlags result;
  
  arg1 = (UltraEngine::TextureFlags)jarg1; 
  arg2 = (UltraEngine::TextureFlags)jarg2; 
  result = (UltraEngine::TextureFlags)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_1(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::RenderLayer arg1 ;
  UltraEngine::RenderLayer arg2 ;
  UltraEngine::RenderLayer result;
  
  arg1 = (UltraEngine::RenderLayer)jarg1; 
  arg2 = (UltraEngine::RenderLayer)jarg2; 
  result = (UltraEngine::RenderLayer)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_2(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::WindowStyles arg1 ;
  UltraEngine::WindowStyles arg2 ;
  UltraEngine::WindowStyles result;
  
  arg1 = (UltraEngine::WindowStyles)jarg1; 
  arg2 = (UltraEngine::WindowStyles)jarg2; 
  result = (UltraEngine::WindowStyles)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_3(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::LoadFlags arg1 ;
  UltraEngine::LoadFlags arg2 ;
  UltraEngine::LoadFlags result;
  
  arg1 = (UltraEngine::LoadFlags)jarg1; 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (UltraEngine::LoadFlags)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryNot__SWIG_0(int jarg1) {
  int jresult ;
  UltraEngine::LoadFlags arg1 ;
  UltraEngine::LoadFlags result;
  
  arg1 = (UltraEngine::LoadFlags)jarg1; 
  result = (UltraEngine::LoadFlags)UltraEngine::operator ~(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_4(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::SaveFlags arg1 ;
  UltraEngine::SaveFlags arg2 ;
  UltraEngine::SaveFlags result;
  
  arg1 = (UltraEngine::SaveFlags)jarg1; 
  arg2 = (UltraEngine::SaveFlags)jarg2; 
  result = (UltraEngine::SaveFlags)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryNot__SWIG_1(int jarg1) {
  int jresult ;
  UltraEngine::SaveFlags arg1 ;
  UltraEngine::SaveFlags result;
  
  arg1 = (UltraEngine::SaveFlags)jarg1; 
  result = (UltraEngine::SaveFlags)UltraEngine::operator ~(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryAnd__SWIG_0(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::SaveFlags arg1 ;
  UltraEngine::SaveFlags arg2 ;
  UltraEngine::SaveFlags result;
  
  arg1 = (UltraEngine::SaveFlags)jarg1; 
  arg2 = (UltraEngine::SaveFlags)jarg2; 
  result = (UltraEngine::SaveFlags)UltraEngine::operator &(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_MAX_ANIMATION_THREADS_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::MAX_ANIMATION_THREADS;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TEXT_MULTILINE_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::TEXT_MULTILINE;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TEXT_WORDWRAP_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::TEXT_WORDWRAP;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TEXT_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::TEXT_SHADOW;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_5(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::ClearMode arg1 ;
  UltraEngine::ClearMode arg2 ;
  UltraEngine::ClearMode result;
  
  arg1 = (UltraEngine::ClearMode)jarg1; 
  arg2 = (UltraEngine::ClearMode)jarg2; 
  result = (UltraEngine::ClearMode)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_6(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::EntityBounds arg1 ;
  UltraEngine::EntityBounds arg2 ;
  UltraEngine::EntityBounds result;
  
  arg1 = (UltraEngine::EntityBounds)jarg1; 
  arg2 = (UltraEngine::EntityBounds)jarg2; 
  result = (UltraEngine::EntityBounds)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryAnd__SWIG_1(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::EntityBounds arg1 ;
  UltraEngine::EntityBounds arg2 ;
  UltraEngine::EntityBounds result;
  
  arg1 = (UltraEngine::EntityBounds)jarg1; 
  arg2 = (UltraEngine::EntityBounds)jarg2; 
  result = (UltraEngine::EntityBounds)UltraEngine::operator &(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryNot__SWIG_2(int jarg1) {
  int jresult ;
  UltraEngine::EntityBounds arg1 ;
  UltraEngine::EntityBounds result;
  
  arg1 = (UltraEngine::EntityBounds)jarg1; 
  result = (UltraEngine::EntityBounds)UltraEngine::operator ~(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_PI_OVER_180_get() {
  double jresult ;
  double result;
  
  result = (double)(0.017453292519943295769236907684886);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_PI_OVER_360_get() {
  double jresult ;
  double result;
  
  result = (double)(0.0087266462599716478846184538424431);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_DEGTORAD_get() {
  double jresult ;
  double result;
  
  result = (double)(0.0174532925);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_RADTODEG_get() {
  double jresult ;
  double result;
  
  result = (double)(57.2957795785523);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Alpha(unsigned int jarg1) {
  unsigned char jresult ;
  unsigned int arg1 ;
  unsigned char result;
  
  arg1 = (unsigned int)jarg1; 
  result = (unsigned char)UltraEngine::Alpha(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Blue(unsigned int jarg1) {
  unsigned char jresult ;
  unsigned int arg1 ;
  unsigned char result;
  
  arg1 = (unsigned int)jarg1; 
  result = (unsigned char)UltraEngine::Blue(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Green(unsigned int jarg1) {
  unsigned char jresult ;
  unsigned int arg1 ;
  unsigned char result;
  
  arg1 = (unsigned int)jarg1; 
  result = (unsigned char)UltraEngine::Green(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Red(unsigned int jarg1) {
  unsigned char jresult ;
  unsigned int arg1 ;
  unsigned char result;
  
  arg1 = (unsigned int)jarg1; 
  result = (unsigned char)UltraEngine::Red(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Abs(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Abs(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Round__SWIG_0(float jarg1) {
  int jresult ;
  float arg1 ;
  int result;
  
  arg1 = (float)jarg1; 
  result = (int)UltraEngine::Round(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Round__SWIG_1(double jarg1) {
  long long jresult ;
  double arg1 ;
  int64_t result;
  
  arg1 = (double)jarg1; 
  result = (int64_t)UltraEngine::Round(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Floor__SWIG_0(float jarg1) {
  int jresult ;
  float arg1 ;
  int result;
  
  arg1 = (float)jarg1; 
  result = (int)UltraEngine::Floor(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Floor__SWIG_1(double jarg1) {
  long long jresult ;
  double arg1 ;
  int64_t result;
  
  arg1 = (double)jarg1; 
  result = (int64_t)UltraEngine::Floor(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Ceil__SWIG_0(float jarg1) {
  int jresult ;
  float arg1 ;
  int result;
  
  arg1 = (float)jarg1; 
  result = (int)UltraEngine::Ceil(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Ceil__SWIG_1(double jarg1) {
  long long jresult ;
  double arg1 ;
  int64_t result;
  
  arg1 = (double)jarg1; 
  result = (int64_t)UltraEngine::Ceil(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Sin__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Sin(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Cos__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Cos(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Tan__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Tan(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_ASin__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::ASin(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_ACos__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::ACos(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_ATan__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::ATan(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_ATan__SWIG_1(float jarg1, float jarg2) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (float)UltraEngine::ATan(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Sin__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::Sin(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Cos__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::Cos(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Tan__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::Tan(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ASin__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::ASin(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ACos__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::ACos(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ATan__SWIG_2(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::ATan(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ATan__SWIG_3(double jarg1, double jarg2) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)UltraEngine::ATan(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Min__SWIG_0(float jarg1, float jarg2) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (float)UltraEngine::Min(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Max__SWIG_0(float jarg1, float jarg2) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (float)UltraEngine::Max(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Min__SWIG_1(int jarg1, int jarg2) {
  int jresult ;
  int arg1 ;
  int arg2 ;
  int result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)UltraEngine::Min(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Max__SWIG_1(int jarg1, int jarg2) {
  int jresult ;
  int arg1 ;
  int arg2 ;
  int result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)UltraEngine::Max(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Min__SWIG_2(double jarg1, double jarg2) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)UltraEngine::Min(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Max__SWIG_2(double jarg1, double jarg2) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)UltraEngine::Max(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Clamp__SWIG_0(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::Clamp(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Clamp__SWIG_1(int jarg1, int jarg2, int jarg3) {
  int jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)UltraEngine::Clamp(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Clamp__SWIG_2(double jarg1, double jarg2, double jarg3) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)UltraEngine::Clamp(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Degrees__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Degrees(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Radians__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Radians(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Degrees__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::Degrees(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Radians__SWIG_1(double jarg1) {
  double jresult ;
  double arg1 ;
  double result;
  
  arg1 = (double)jarg1; 
  result = (double)UltraEngine::Radians(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Mix(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::Mix(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Log2(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Log2(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_DeltaAngle(float jarg1, float jarg2) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (float)UltraEngine::DeltaAngle(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_MoveAngle(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::MoveAngle(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Pow2(int jarg1) {
  int jresult ;
  int arg1 ;
  int result;
  
  arg1 = (int)jarg1; 
  result = (int)UltraEngine::Pow2(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Sign(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Sign(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Random__SWIG_0(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  result = (float)UltraEngine::Random(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Random__SWIG_1() {
  float jresult ;
  float result;
  
  result = (float)UltraEngine::Random();
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Random__SWIG_2(float jarg1, float jarg2) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (float)UltraEngine::Random(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_MoveValue(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::MoveValue(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_CurveValue__SWIG_0(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::CurveValue(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CurveValue__SWIG_1(double jarg1, double jarg2, double jarg3) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)UltraEngine::CurveValue(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_CurveAngle__SWIG_0(float jarg1, float jarg2, float jarg3) {
  float jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (float)UltraEngine::CurveAngle(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CurveAngle__SWIG_1(double jarg1, double jarg2, double jarg3) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)UltraEngine::CurveAngle(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Mod(double jarg1, double jarg2) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)UltraEngine::Mod(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Min__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = UltraEngine::Min((UltraEngine::Vec3 const &)*arg1,(UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Max__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = UltraEngine::Max((UltraEngine::Vec3 const &)*arg1,(UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_SeedRandom(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::SeedRandom(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_rnd_state_set(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::rnd_state = arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_rnd_state_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::rnd_state;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_x_set(void * jarg1, float jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_x_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_r_set(void * jarg1, float jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_r_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = (float) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_y_set(void * jarg1, float jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_y_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_g_set(void * jarg1, float jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_g_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = (float) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec2__SWIG_0() {
  void * jresult ;
  UltraEngine::Vec2 *result = 0 ;
  
  result = (UltraEngine::Vec2 *)new UltraEngine::Vec2();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec2__SWIG_1(float jarg1) {
  void * jresult ;
  float arg1 ;
  UltraEngine::Vec2 *result = 0 ;
  
  arg1 = (float)jarg1; 
  result = (UltraEngine::Vec2 *)new UltraEngine::Vec2(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec2__SWIG_2(float jarg1, float jarg2) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  UltraEngine::Vec2 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (UltraEngine::Vec2 *)new UltraEngine::Vec2(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec2_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator ==((UltraEngine::Vec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec2_LessThan(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 arg2 ;
  UltraEngine::Vec2 const *argp2 ;
  bool result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  argp2 = (UltraEngine::Vec2 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::Vec2 const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (bool)((UltraEngine::Vec2 const *)arg1)->operator <(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::Vec2 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::Vec2 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_DivideEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator /=((UltraEngine::Vec2 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec2_MultiplyEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator *=((UltraEngine::Vec2 const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_IndexInto(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  unsigned int arg2 ;
  float *result = 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (float *) &(arg1)->operator [](arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Multiply(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec2 const *)arg1)->operator *((UltraEngine::Vec2 const &)*arg2);
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Divide(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec2 const *)arg1)->operator /((UltraEngine::Vec2 const &)*arg2);
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec2 const *)arg1)->operator +((UltraEngine::Vec2 const &)*arg2);
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Minus__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec2 const *)arg1)->operator -((UltraEngine::Vec2 const &)*arg2);
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Minus__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = ((UltraEngine::Vec2 const *)arg1)->operator -();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_Percent(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = (float)((UltraEngine::Vec2 const *)arg1)->operator %((UltraEngine::Vec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_Dot(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = (float)((UltraEngine::Vec2 const *)arg1)->Dot((UltraEngine::Vec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec2_Normalize(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = ((UltraEngine::Vec2 const *)arg1)->Normalize();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_Length(void * jarg1) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  result = (float)((UltraEngine::Vec2 const *)arg1)->Length();
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec2_DistanceToPoint(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  UltraEngine::Vec2 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  arg2 = (UltraEngine::Vec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec2 const & type is null", 0);
    return 0;
  } 
  result = (float)(arg1)->DistanceToPoint((UltraEngine::Vec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Vec2(void * jarg1) {
  UltraEngine::Vec2 *arg1 = (UltraEngine::Vec2 *) 0 ;
  
  arg1 = (UltraEngine::Vec2 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_x_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_x_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_r_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_r_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_width_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_width_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->width);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_y_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_y_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_g_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_g_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_height_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_height_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_z_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_z_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_b_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_b_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->b);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_depth_set(void * jarg1, float jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->depth = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_depth_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float) ((arg1)->depth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec3__SWIG_0() {
  void * jresult ;
  UltraEngine::Vec3 *result = 0 ;
  
  result = (UltraEngine::Vec3 *)new UltraEngine::Vec3();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec3__SWIG_1(float jarg1) {
  void * jresult ;
  float arg1 ;
  UltraEngine::Vec3 *result = 0 ;
  
  arg1 = (float)jarg1; 
  result = (UltraEngine::Vec3 *)new UltraEngine::Vec3(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec3__SWIG_2(float jarg1, float jarg2) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  UltraEngine::Vec3 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (UltraEngine::Vec3 *)new UltraEngine::Vec3(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec3__SWIG_3(float jarg1, float jarg2, float jarg3) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  UltraEngine::Vec3 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (UltraEngine::Vec3 *)new UltraEngine::Vec3(arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec3_LessThan(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 arg2 ;
  UltraEngine::Vec3 const *argp2 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  argp2 = (UltraEngine::Vec3 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::Vec3 const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (bool)(arg1)->operator <(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec3_GreaterThan(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 arg2 ;
  UltraEngine::Vec3 const *argp2 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  argp2 = (UltraEngine::Vec3 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::Vec3 const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (bool)(arg1)->operator >(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec3_NotEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator !=((UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec3_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator ==((UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_IndexInto(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  unsigned int arg2 ;
  float *result = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (float *) &(arg1)->operator [](arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Minus__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec3 const *)arg1)->operator -((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::Vec3 const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec3 const *)arg1)->operator +((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::Vec3 const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Multiply(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec3 const *)arg1)->operator *((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_MultiplyEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator *=((UltraEngine::Vec3 const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Divide(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec3 const *)arg1)->operator /((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_DivideEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator /=((UltraEngine::Vec3 const &)*arg2);
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_Percent(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (float)(arg1)->operator %((UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Minus__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = ((UltraEngine::Vec3 const *)arg1)->operator -();
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Reflect(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (arg1)->Reflect((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_xy(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (arg1)->xy();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_zy(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (arg1)->zy();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_xz(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec2 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (arg1)->xz();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_Length(void * jarg1) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (float)((UltraEngine::Vec3 const *)arg1)->Length();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Normalize(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = ((UltraEngine::Vec3 const *)arg1)->Normalize();
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Inverse(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  result = (arg1)->Inverse();
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_DistanceToPoint(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (float)((UltraEngine::Vec3 const *)arg1)->DistanceToPoint((UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec3_Cross__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec3 const *)arg1)->Cross((UltraEngine::Vec3 const &)*arg2);
  jresult = new UltraEngine::Vec3((const UltraEngine::Vec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec3_Cross__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  UltraEngine::Vec3 *arg3 = 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::Vec3 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 & type is null", 0);
    return ;
  } 
  ((UltraEngine::Vec3 const *)arg1)->Cross((UltraEngine::Vec3 const &)*arg2,*arg3);
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec3_Dot(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (float)((UltraEngine::Vec3 const *)arg1)->Dot((UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Vec3(void * jarg1) {
  UltraEngine::Vec3 *arg1 = (UltraEngine::Vec3 *) 0 ;
  
  arg1 = (UltraEngine::Vec3 *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_LessThan__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator <((UltraEngine::Vec3 const &)*arg1,(UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GreaterThan__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec3 *arg1 = 0 ;
  UltraEngine::Vec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator >((UltraEngine::Vec3 const &)*arg1,(UltraEngine::Vec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_x_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_x_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_r_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_r_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_y_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_y_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_g_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_g_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_z_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_z_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_b_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_b_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->b);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_width_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_width_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->width);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_w_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_w_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->w);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_a_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_a_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->a);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_height_set(void * jarg1, float jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_height_get(void * jarg1) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = (float) ((arg1)->height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec4__SWIG_0() {
  void * jresult ;
  UltraEngine::Vec4 *result = 0 ;
  
  result = (UltraEngine::Vec4 *)new UltraEngine::Vec4();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec4__SWIG_1(float jarg1) {
  void * jresult ;
  float arg1 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  result = (UltraEngine::Vec4 *)new UltraEngine::Vec4(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec4__SWIG_2(float jarg1, float jarg2) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (UltraEngine::Vec4 *)new UltraEngine::Vec4(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec4__SWIG_3(float jarg1, float jarg2, float jarg3) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (UltraEngine::Vec4 *)new UltraEngine::Vec4(arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vec4__SWIG_4(float jarg1, float jarg2, float jarg3, float jarg4) {
  void * jresult ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = (UltraEngine::Vec4 *)new UltraEngine::Vec4(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Vec4_DistanceToPoint(void * jarg1, void * jarg2) {
  float jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  float result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (float)(arg1)->DistanceToPoint((UltraEngine::Vec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_Minus__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  result = ((UltraEngine::Vec4 const *)arg1)->operator -();
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::Vec4 result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec4 const *)arg1)->operator +((UltraEngine::Vec4 const &)*arg2);
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_Minus__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::Vec4 result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec4 const *)arg1)->operator -((UltraEngine::Vec4 const &)*arg2);
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_Multiply(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::Vec4 result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec4 const *)arg1)->operator *((UltraEngine::Vec4 const &)*arg2);
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_Divide(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::Vec4 result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::Vec4 const *)arg1)->operator /((UltraEngine::Vec4 const &)*arg2);
  jresult = new UltraEngine::Vec4((const UltraEngine::Vec4 &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec4_NotEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)((UltraEngine::Vec4 const *)arg1)->operator !=((UltraEngine::Vec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec4_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)((UltraEngine::Vec4 const *)arg1)->operator ==((UltraEngine::Vec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vec4_IndexInto(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  unsigned int arg2 ;
  float *result = 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (float *) &(arg1)->operator [](arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Vec4_LessThan(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 arg2 ;
  UltraEngine::Vec4 const *argp2 ;
  bool result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  argp2 = (UltraEngine::Vec4 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::Vec4 const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (bool)(arg1)->operator <(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_MultiplyEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator *=((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vec4_DivideEqual(void * jarg1, void * jarg2) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator /=((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Vec4(void * jarg1) {
  UltraEngine::Vec4 *arg1 = (UltraEngine::Vec4 *) 0 ;
  
  arg1 = (UltraEngine::Vec4 *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_LessThan__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec4 *arg1 = 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator <((UltraEngine::Vec4 const &)*arg1,(UltraEngine::Vec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GreaterThan__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Vec4 *arg1 = 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::Vec4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator >((UltraEngine::Vec4 const &)*arg1,(UltraEngine::Vec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_x_set(void * jarg1, int jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec2_x_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_r_set(void * jarg1, int jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec2_r_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  result = (int) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_y_set(void * jarg1, int jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec2_y_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_g_set(void * jarg1, int jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec2_g_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  result = (int) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec2__SWIG_0() {
  void * jresult ;
  UltraEngine::iVec2 *result = 0 ;
  
  result = (UltraEngine::iVec2 *)new UltraEngine::iVec2();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec2__SWIG_1(int jarg1) {
  void * jresult ;
  int arg1 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (UltraEngine::iVec2 *)new UltraEngine::iVec2(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec2__SWIG_2(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (UltraEngine::iVec2 *)new UltraEngine::iVec2(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec2_Minus__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  result = ((UltraEngine::iVec2 const *)arg1)->operator -();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec2_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec2 const *)arg1)->operator +((UltraEngine::iVec2 const &)*arg2);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec2_Minus__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec2 const *)arg1)->operator -((UltraEngine::iVec2 const &)*arg2);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::iVec2 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec2_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::iVec2 const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_iVec2_LessThan(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 arg2 ;
  UltraEngine::iVec2 const *argp2 ;
  bool result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  argp2 = (UltraEngine::iVec2 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2 const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (bool)(arg1)->operator <(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec2_IndexInto(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  unsigned int arg2 ;
  int *result = 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (int *) &(arg1)->operator [](arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_iVec2_NotEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)((UltraEngine::iVec2 const *)arg1)->operator !=((UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_iVec2_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)((UltraEngine::iVec2 const *)arg1)->operator ==((UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_iVec2(void * jarg1) {
  UltraEngine::iVec2 *arg1 = (UltraEngine::iVec2 *) 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_LessThan__SWIG_2(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec2 *arg1 = 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator <((UltraEngine::iVec2 const &)*arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GreaterThan__SWIG_2(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec2 *arg1 = 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator >((UltraEngine::iVec2 const &)*arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec3_x_set(void * jarg1, int jarg2) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec3_x_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec3_y_set(void * jarg1, int jarg2) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec3_y_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec3_z_set(void * jarg1, int jarg2) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec3_z_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  result = (int) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec3__SWIG_0() {
  void * jresult ;
  UltraEngine::iVec3 *result = 0 ;
  
  result = (UltraEngine::iVec3 *)new UltraEngine::iVec3();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec3__SWIG_1(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  UltraEngine::iVec3 *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (UltraEngine::iVec3 *)new UltraEngine::iVec3(arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec3_Minus__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  result = ((UltraEngine::iVec3 const *)arg1)->operator -();
  jresult = new UltraEngine::iVec3((const UltraEngine::iVec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec3_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  UltraEngine::iVec3 result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec3 const *)arg1)->operator +((UltraEngine::iVec3 const &)*arg2);
  jresult = new UltraEngine::iVec3((const UltraEngine::iVec3 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec3_Minus__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  UltraEngine::iVec3 result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec3 const *)arg1)->operator -((UltraEngine::iVec3 const &)*arg2);
  jresult = new UltraEngine::iVec3((const UltraEngine::iVec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec3_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::iVec3 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec3_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::iVec3 const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_iVec3_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator ==((UltraEngine::iVec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_iVec3_NotEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator !=((UltraEngine::iVec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_iVec3(void * jarg1) {
  UltraEngine::iVec3 *arg1 = (UltraEngine::iVec3 *) 0 ;
  
  arg1 = (UltraEngine::iVec3 *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_LessThan__SWIG_3(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec3 *arg1 = 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator <((UltraEngine::iVec3 const &)*arg1,(UltraEngine::iVec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GreaterThan__SWIG_3(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec3 *arg1 = 0 ;
  UltraEngine::iVec3 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec3 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec3 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec3 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator >((UltraEngine::iVec3 const &)*arg1,(UltraEngine::iVec3 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_x_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_x_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_r_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_r_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_y_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_y_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_g_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_g_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_z_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_z_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_b_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_b_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->b);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_width_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_width_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->width);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_w_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_w_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->w);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_a_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_a_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->a);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_height_set(void * jarg1, int jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_iVec4_height_get(void * jarg1) {
  int jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  int result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = (int) ((arg1)->height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec4__SWIG_0() {
  void * jresult ;
  UltraEngine::iVec4 *result = 0 ;
  
  result = (UltraEngine::iVec4 *)new UltraEngine::iVec4();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec4__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  UltraEngine::iVec4 *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (UltraEngine::iVec4 *)new UltraEngine::iVec4(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_iVec4__SWIG_2(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec4 *result = 0 ;
  
  arg1 = (UltraEngine::iVec2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (UltraEngine::iVec4 *)new UltraEngine::iVec4((UltraEngine::iVec2 const &)*arg1,(UltraEngine::iVec2 const &)*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec4_Minus__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  UltraEngine::iVec4 result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  result = ((UltraEngine::iVec4 const *)arg1)->operator -();
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec4_IndexInto(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  unsigned int arg2 ;
  int *result = 0 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (int *) &(arg1)->operator [](arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec4_Plus(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  UltraEngine::iVec4 result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec4 const *)arg1)->operator +((UltraEngine::iVec4 const &)*arg2);
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_iVec4_Minus__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  UltraEngine::iVec4 result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  result = ((UltraEngine::iVec4 const *)arg1)->operator -((UltraEngine::iVec4 const &)*arg2);
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_PlusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::iVec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_iVec4_MinusEqual(void * jarg1, void * jarg2) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return ;
  } 
  (arg1)->operator -=((UltraEngine::iVec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_iVec4(void * jarg1) {
  UltraEngine::iVec4 *arg1 = (UltraEngine::iVec4 *) 0 ;
  
  arg1 = (UltraEngine::iVec4 *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_LessThan__SWIG_4(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec4 *arg1 = 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator <((UltraEngine::iVec4 const &)*arg1,(UltraEngine::iVec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GreaterThan__SWIG_4(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::iVec4 *arg1 = 0 ;
  UltraEngine::iVec4 *arg2 = 0 ;
  bool result;
  
  arg1 = (UltraEngine::iVec4 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::iVec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec4 const & type is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::operator >((UltraEngine::iVec4 const &)*arg1,(UltraEngine::iVec4 const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Object(void * jarg1) {
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_Self(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Self();
  jresult = result ? new std::shared_ptr< UltraEngine::Object >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_GetAddress(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetAddress();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsAsset(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsAsset(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsBuffer(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsBuffer(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsClock(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Clock > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsClock(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Clock >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsDisplay(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Display > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsDisplay(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Display >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsFileSystemWatcher(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::FileSystemWatcher > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsFileSystemWatcher(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::FileSystemWatcher >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsGameEngine(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsGameEngine(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::GameEngine >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsIDSystem(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::IDSystem > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsIDSystem(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::IDSystem >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsInterface(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Interface > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsInterface(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Interface >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsLanguage(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Language > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsLanguage(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Language >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsLoader(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Loader > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsLoader(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Loader >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsMutex(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Mutex > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsMutex(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Mutex >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsProcess(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Process > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsProcess(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Process >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsStream(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsStream(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsString(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::String > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsString(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::String >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsThread(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsThread(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTimer(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Timer > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTimer(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Timer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsWString(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::WString > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsWString(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::WString >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsWidget(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsWidgetItem(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsWidgetItem(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::WidgetItem >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsWindow(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsWindow(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsBufferStream(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::BufferStream > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsBufferStream(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::BufferStream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsButton(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Button > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsButton(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Button >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsComboBox(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::ComboBox > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsComboBox(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::ComboBox >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsDDSTextureLoader(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsDDSTextureLoader(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::DDSTextureLoader >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsFont(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Font > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsFont(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Font >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsIcon(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsIcon(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Icon >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsLabel(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Label > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsLabel(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Label >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsListBox(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::ListBox > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsListBox(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::ListBox >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsMenu(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Menu > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsMenu(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Menu >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsMenuPanel(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::MenuPanel > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsMenuPanel(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::MenuPanel >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsPackage(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Package > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsPackage(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Package >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsPanel(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Panel > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsPanel(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Panel >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsPipeStream(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::PipeStream > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsPipeStream(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::PipeStream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsPixmap(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsPixmap(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsPlugin(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Plugin > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsPlugin(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Plugin >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsProgressBar(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::ProgressBar > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsProgressBar(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::ProgressBar >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsSlider(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Slider > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsSlider(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Slider >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsStreamBuffer(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::StreamBuffer > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsStreamBuffer(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::StreamBuffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTabber(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Tabber > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTabber(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Tabber >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTextArea(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TextArea > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTextArea(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::TextArea >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTextField(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TextField > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTextField(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::TextField >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTreeView(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TreeView > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTreeView(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::TreeView >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsTreeViewNode(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsTreeViewNode(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::TreeViewNode >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Object_AsObject(void * jarg1) {
  void * jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  result = UltraEngine_Object_AsObject(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Object >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Object_CompareWith(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Object *arg1 = (UltraEngine::Object *) 0 ;
  UltraEngine::Object *arg2 = (UltraEngine::Object *) 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > *smartarg2 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Object > *)jarg1;
  arg1 = (UltraEngine::Object *)(smartarg1 ? smartarg1->get() : 0); 
  
  smartarg2 = (std::shared_ptr<  UltraEngine::Object > *)jarg2;
  arg2 = (UltraEngine::Object *)(smartarg2 ? smartarg2->get() : 0); 
  result = (bool)UltraEngine_Object_CompareWith(arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_0() {
  void * jresult ;
  UltraEngine::String *result = 0 ;
  
  result = (UltraEngine::String *)new UltraEngine::String();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_1(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (char *)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String((char const *)arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_3(char jarg1) {
  void * jresult ;
  char arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (char)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_4(unsigned char jarg1) {
  void * jresult ;
  unsigned char arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (unsigned char)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_5(short jarg1) {
  void * jresult ;
  short arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (short)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_6(unsigned short jarg1) {
  void * jresult ;
  unsigned short arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (unsigned short)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_7(int jarg1) {
  void * jresult ;
  int arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_8(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_9(long long jarg1) {
  void * jresult ;
  int64_t arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (int64_t)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_10(unsigned long long jarg1) {
  void * jresult ;
  uint64_t arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (uint64_t)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_11(double jarg1) {
  void * jresult ;
  double arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (double)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_String__SWIG_12(float jarg1) {
  void * jresult ;
  float arg1 ;
  UltraEngine::String *result = 0 ;
  
  arg1 = (float)jarg1; 
  result = (UltraEngine::String *)new UltraEngine::String(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::String >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_String_PlusEqual(void * jarg1, char * jarg2) {
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->operator +=((std::string const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_String_Equal(void * jarg1, char * jarg2) {
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->operator =((std::string const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Plus__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->operator +((UltraEngine::String const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Plus__SWIG_1(void * jarg1, char * jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (arg1)->operator +((std::string const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_String_ToInt(void * jarg1) {
  long long jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  int64_t result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int64_t)((UltraEngine::String const *)arg1)->ToInt();
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_String_ToFloat(void * jarg1) {
  double jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double)((UltraEngine::String const *)arg1)->ToFloat();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_String_GetSize(void * jarg1) {
  int jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)((UltraEngine::String const *)arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Left(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::String const *)arg1)->Left(arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Right(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::String const *)arg1)->Right(arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Mid__SWIG_0(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((UltraEngine::String const *)arg1)->Mid(arg2,arg3);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Mid__SWIG_1(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::String const *)arg1)->Mid(arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Upper(void * jarg1) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::String const *)arg1)->Upper();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Lower(void * jarg1) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::String const *)arg1)->Lower();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Trim(void * jarg1) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::String const *)arg1)->Trim();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Replace(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  UltraEngine::String *arg3 = 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  
  arg3 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg3) ? ((std::shared_ptr< const UltraEngine::String > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::String const *)arg1)->Replace((UltraEngine::String const &)*arg2,(UltraEngine::String const &)*arg3);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_String_Find(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (int)((UltraEngine::String const *)arg1)->Find((UltraEngine::String const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_Split(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  std::vector< UltraEngine::String > result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::String const *)arg1)->Split((UltraEngine::String const &)*arg2);
  jresult = new std::vector< UltraEngine::String >((const std::vector< UltraEngine::String > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_String_XOR(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::String const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::String const *)arg1)->XOR((UltraEngine::String const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_String(void * jarg1) {
  UltraEngine::String *arg1 = (UltraEngine::String *) 0 ;
  std::shared_ptr< UltraEngine::String > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::String > *)jarg1;
  arg1 = (UltraEngine::String *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Dec(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::String *arg1 = 0 ;
  uint64_t result;
  
  
  arg1 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg1) ? ((std::shared_ptr< const UltraEngine::String > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = (uint64_t)UltraEngine::Dec((UltraEngine::String const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Hex(unsigned long long jarg1) {
  void * jresult ;
  uint64_t arg1 ;
  UltraEngine::String result;
  
  arg1 = (uint64_t)jarg1; 
  result = UltraEngine::Hex(arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_0() {
  void * jresult ;
  UltraEngine::WString *result = 0 ;
  
  result = (UltraEngine::WString *)new UltraEngine::WString();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_1(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (char *)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString((char const *)arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_5(char jarg1) {
  void * jresult ;
  char arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (char)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_6(unsigned char jarg1) {
  void * jresult ;
  unsigned char arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (unsigned char)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_7(short jarg1) {
  void * jresult ;
  short arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (short)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_8(unsigned short jarg1) {
  void * jresult ;
  unsigned short arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (unsigned short)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_9(int jarg1) {
  void * jresult ;
  int arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_10(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_11(long long jarg1) {
  void * jresult ;
  int64_t arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (int64_t)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_12(unsigned long long jarg1) {
  void * jresult ;
  uint64_t arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (uint64_t)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_13(double jarg1) {
  void * jresult ;
  double arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (double)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WString__SWIG_14(float jarg1) {
  void * jresult ;
  float arg1 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (float)jarg1; 
  result = (UltraEngine::WString *)new UltraEngine::WString(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WString_PlusEqual__SWIG_0(void * jarg1, char * jarg2) {
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->operator +=((std::string const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WString_PlusEqual__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->operator +=((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WString_Equal(void * jarg1, char * jarg2) {
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->operator =((std::string const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Plus__SWIG_0(void * jarg1, char * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  char *arg2 = (char *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (char *)jarg2; 
  result = ((UltraEngine::WString const *)arg1)->operator +((char const *)arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Plus__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::WString const *)arg1)->operator +((UltraEngine::String const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Plus__SWIG_4(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::WString const *)arg1)->operator +((UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WString_EqualEqual__SWIG_0(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)((UltraEngine::WString const *)arg1)->operator ==((std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WString_NotEqual__SWIG_0(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)((UltraEngine::WString const *)arg1)->operator !=((std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_WString_ToInt(void * jarg1) {
  long long jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  int64_t result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int64_t)((UltraEngine::WString const *)arg1)->ToInt();
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_WString_ToFloat(void * jarg1) {
  double jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double)((UltraEngine::WString const *)arg1)->ToFloat();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WString_GetSize(void * jarg1) {
  int jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)((UltraEngine::WString const *)arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Left(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::WString const *)arg1)->Left(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Right(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::WString const *)arg1)->Right(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Mid__SWIG_0(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = ((UltraEngine::WString const *)arg1)->Mid(arg2,arg3);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Mid__SWIG_1(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = ((UltraEngine::WString const *)arg1)->Mid(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Upper(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::WString const *)arg1)->Upper();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Lower(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::WString const *)arg1)->Lower();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Trim(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::WString const *)arg1)->Trim();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Replace(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::WString const *)arg1)->Replace((UltraEngine::WString const &)*arg2,(UltraEngine::WString const &)*arg3);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WString_Find(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)((UltraEngine::WString const *)arg1)->Find((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_Split(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  std::vector< UltraEngine::WString > result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::WString const *)arg1)->Split((UltraEngine::WString const &)*arg2);
  jresult = new std::vector< UltraEngine::WString >((const std::vector< UltraEngine::WString > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_XOR(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = ((UltraEngine::WString const *)arg1)->XOR((UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_ToString(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::WString const *)arg1)->ToString();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WString_ToUTF8String(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString const > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr< const UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  result = ((UltraEngine::WString const *)arg1)->ToUTF8String();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WString(void * jarg1) {
  UltraEngine::WString *arg1 = (UltraEngine::WString *) 0 ;
  std::shared_ptr< UltraEngine::WString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WString > *)jarg1;
  arg1 = (UltraEngine::WString *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plus(char * jarg1, void * jarg2) {
  void * jresult ;
  std::string arg1 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::operator +(arg1,(UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_JSONSetString(void * jarg1, void * jarg2) {
  nlohmann::json *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  
  arg1 = (nlohmann::json *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return ;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::JSONSetString(*arg1,(UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_JSONGetString(void * jarg1) {
  void * jresult ;
  nlohmann::json *arg1 = 0 ;
  UltraEngine::WString result;
  
  arg1 = (nlohmann::json *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json const & type is null", 0);
    return 0;
  } 
  result = UltraEngine::JSONGetString((nlohmann::json const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_graphicsmodes_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  std::vector< UltraEngine::iVec2 > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< UltraEngine::iVec2 > *) &(std::vector< UltraEngine::iVec2 > const &) ((arg1)->graphicsmodes);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_position_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *) &(UltraEngine::iVec2 const &) ((arg1)->position);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *) &(UltraEngine::iVec2 const &) ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Display_scale_get(void * jarg1) {
  float jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  float *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float *) &(float const &) ((arg1)->scale);
  jresult = *result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Display_EqualEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  UltraEngine::Display *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::Display *)(((std::shared_ptr< const UltraEngine::Display > *)jarg2) ? ((std::shared_ptr< const UltraEngine::Display > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Display const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator ==((UltraEngine::Display const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Display_NotEqual(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  UltraEngine::Display *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::Display *)(((std::shared_ptr< const UltraEngine::Display > *)jarg2) ? ((std::shared_ptr< const UltraEngine::Display > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Display const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->operator !=((UltraEngine::Display const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Display() {
  void * jresult ;
  UltraEngine::Display *result = 0 ;
  
  result = (UltraEngine::Display *)new UltraEngine::Display();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Display >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_GetPosition(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPosition();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_GetSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_ClientArea(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::iVec4 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ClientArea();
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Display_GetScale(void * jarg1) {
  void * jresult ;
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  UltraEngine::Vec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetScale();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Display(void * jarg1) {
  UltraEngine::Display *arg1 = (UltraEngine::Display *) 0 ;
  std::shared_ptr< UltraEngine::Display > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Display > *)jarg1;
  arg1 = (UltraEngine::Display *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetDisplays() {
  void * jresult ;
  std::vector< std::shared_ptr< UltraEngine::Display > > result;
  
  result = UltraEngine::GetDisplays();
  jresult = new std::vector< std::shared_ptr< UltraEngine::Display > >((const std::vector< std::shared_ptr< UltraEngine::Display > > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetDisplayAtCoord(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Display > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = UltraEngine::GetDisplayAtCoord(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Display >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IDHandle(int jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::IDSystem > arg3 ;
  UltraEngine::IDHandle *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::IDSystem > *)jarg3; 
  result = (UltraEngine::IDHandle *)new UltraEngine::IDHandle(arg1,arg2,arg3);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::IDHandle >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_IDHandle(void * jarg1) {
  UltraEngine::IDHandle *arg1 = (UltraEngine::IDHandle *) 0 ;
  std::shared_ptr< UltraEngine::IDHandle > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDHandle > *)jarg1;
  arg1 = (UltraEngine::IDHandle *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IDHandle_GetID(void * jarg1) {
  int jresult ;
  UltraEngine::IDHandle *arg1 = (UltraEngine::IDHandle *) 0 ;
  std::shared_ptr< UltraEngine::IDHandle > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDHandle > *)jarg1;
  arg1 = (UltraEngine::IDHandle *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->GetID();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IDSystem__SWIG_0(int jarg1) {
  void * jresult ;
  int arg1 ;
  UltraEngine::IDSystem *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (UltraEngine::IDSystem *)new UltraEngine::IDSystem(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::IDSystem >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IDSystem__SWIG_1() {
  void * jresult ;
  UltraEngine::IDSystem *result = 0 ;
  
  result = (UltraEngine::IDSystem *)new UltraEngine::IDSystem();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::IDSystem >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IDSystem_AllocID__SWIG_0(void * jarg1, int jarg2) {
  int jresult ;
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->AllocID(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IDSystem_AllocID__SWIG_1(void * jarg1) {
  int jresult ;
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->AllocID();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_IDSystem_AllocHandle__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::IDHandle > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->AllocHandle(arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::IDHandle >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_IDSystem_AllocHandle__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::IDHandle > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->AllocHandle();
  jresult = result ? new std::shared_ptr< UltraEngine::IDHandle >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IDSystem_ReleaseID(void * jarg1, int jarg2) {
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->ReleaseID(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_IDSystem(void * jarg1) {
  UltraEngine::IDSystem *arg1 = (UltraEngine::IDSystem *) 0 ;
  std::shared_ptr< UltraEngine::IDSystem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::IDSystem > *)jarg1;
  arg1 = (UltraEngine::IDSystem *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateIDSystem() {
  void * jresult ;
  std::shared_ptr< UltraEngine::IDSystem > result;
  
  result = UltraEngine::CreateIDSystem();
  jresult = result ? new std::shared_ptr< UltraEngine::IDSystem >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GetVersion() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::GetVersion();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ICON_WARNING_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::ICON_WARNING;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ICON_QUESTION_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::ICON_QUESTION;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ICON_INFORMATION_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::ICON_INFORMATION;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DebugObject1_set(void * jarg1) {
  std::shared_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull1 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Object > *)jarg1 : &tempnull1; 
  UltraEngine::DebugObject1 = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DebugObject1_get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  result = (std::shared_ptr< UltraEngine::Object > *) &UltraEngine::DebugObject1;
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DebugObject2_set(void * jarg1) {
  std::shared_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull1 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Object > *)jarg1 : &tempnull1; 
  UltraEngine::DebugObject2 = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DebugObject2_get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  result = (std::shared_ptr< UltraEngine::Object > *) &UltraEngine::DebugObject2;
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DebugObject3_set(void * jarg1) {
  std::shared_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull1 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Object > *)jarg1 : &tempnull1; 
  UltraEngine::DebugObject3 = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DebugObject3_get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  result = (std::shared_ptr< UltraEngine::Object > *) &UltraEngine::DebugObject3;
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DebugObject4_set(void * jarg1) {
  std::shared_ptr< UltraEngine::Object > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull1 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::Object > *)jarg1 : &tempnull1; 
  UltraEngine::DebugObject4 = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DebugObject4_get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  result = (std::shared_ptr< UltraEngine::Object > *) &UltraEngine::DebugObject4;
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadJSON__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  nlohmann::json result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadJSON((UltraEngine::WString const &)*arg1);
  jresult = new nlohmann::json((const nlohmann::json &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadJSON__SWIG_1(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  nlohmann::json result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  result = UltraEngine::LoadJSON(arg1);
  jresult = new nlohmann::json((const nlohmann::json &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveJSON__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  nlohmann::json *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  arg1 = (nlohmann::json *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::SaveJSON(*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveJSON__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  nlohmann::json *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  bool result;
  
  arg1 = (nlohmann::json *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  result = (bool)UltraEngine::SaveJSON(*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ParseCommandLine(int jarg1, void * jarg2) {
  void * jresult ;
  int arg1 ;
  char **arg2 ;
  nlohmann::json result;
  
  arg1 = (int)jarg1; 
  arg2 = (char **)jarg2; 
  result = UltraEngine::ParseCommandLine(arg1,(char const *(*))arg2);
  jresult = new nlohmann::json((const nlohmann::json &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Input__SWIG_0(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  UltraEngine::String result;
  
  arg1 = (char *)jarg1; 
  result = UltraEngine::Input((char const *)arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Input__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::String *arg1 = 0 ;
  UltraEngine::String result;
  
  
  arg1 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg1) ? ((std::shared_ptr< const UltraEngine::String > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::Input((UltraEngine::String const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Input__SWIG_2(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::Input((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetProperty__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString arg1 ;
  UltraEngine::WString arg2 ;
  UltraEngine::WString const *argp1 = 0 ;
  UltraEngine::WString const *argp2 = 0 ;
  UltraEngine::WString result;
  
  
  argp1 = ((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0;
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString const", 0);
    return 0;
  }
  arg1 = *argp1; 
  
  argp2 = ((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0;
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString const", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = UltraEngine::GetProperty(arg1,arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetProperty__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString arg1 ;
  UltraEngine::WString const *argp1 = 0 ;
  UltraEngine::WString result;
  
  
  argp1 = ((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0;
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString const", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = UltraEngine::GetProperty(arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetProperty__SWIG_2(char * jarg1, char * jarg2) {
  char * jresult ;
  std::string arg1 ;
  std::string arg2 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = UltraEngine::GetProperty(arg1,arg2);
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetProperty__SWIG_3(char * jarg1) {
  char * jresult ;
  std::string arg1 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  result = UltraEngine::GetProperty(arg1);
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetProperty__SWIG_0(char * jarg1, char * jarg2) {
  std::string arg1 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg1)->assign(jarg1); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  UltraEngine::SetProperty(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetProperty__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::WString arg1 ;
  UltraEngine::WString arg2 ;
  UltraEngine::WString const *argp1 = 0 ;
  UltraEngine::WString const *argp2 = 0 ;
  
  
  argp1 = ((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0;
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString const", 0);
    return ;
  }
  arg1 = *argp1; 
  
  argp2 = ((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0;
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::WString const", 0);
    return ;
  }
  arg2 = *argp2; 
  UltraEngine::SetProperty(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetLogMode(unsigned int jarg1) {
  bool arg1 ;
  
  arg1 = jarg1 ? true : false; 
  UltraEngine::SetLogMode(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Notify__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  arg3 = jarg3 ? true : false; 
  UltraEngine::Notify((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Notify__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Notify((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Notify__SWIG_2(void * jarg1) {
  UltraEngine::WString *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Notify((UltraEngine::WString const &)*arg1);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Confirm__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)UltraEngine::Confirm((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Confirm__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)UltraEngine::Confirm((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Confirm__SWIG_2(void * jarg1) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)UltraEngine::Confirm((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Proceed__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)UltraEngine::Proceed((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Proceed__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)UltraEngine::Proceed((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Proceed__SWIG_2(void * jarg1) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)UltraEngine::Proceed((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_RequestColor(int jarg1, int jarg2, int jarg3) {
  int jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)UltraEngine::RequestColor(arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestDir__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RequestDir((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestDir__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RequestDir((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestDir__SWIG_2() {
  void * jresult ;
  UltraEngine::WString result;
  
  result = UltraEngine::RequestDir();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_0(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString *arg3 = 0 ;
  int arg4 ;
  bool arg5 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  result = UltraEngine::RequestFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,(UltraEngine::WString const &)*arg3,arg4,arg5);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_1(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString *arg3 = 0 ;
  int arg4 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg4 = (int)jarg4; 
  result = UltraEngine::RequestFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,(UltraEngine::WString const &)*arg3,arg4);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_2(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString *arg3 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RequestFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2,(UltraEngine::WString const &)*arg3);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RequestFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_4(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RequestFile((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RequestFile__SWIG_5() {
  void * jresult ;
  UltraEngine::WString result;
  
  result = UltraEngine::RequestFile();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetClipboardText__SWIG_0(void * jarg1) {
  UltraEngine::String *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg1) ? ((std::shared_ptr< const UltraEngine::String > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  UltraEngine::SetClipboardText((UltraEngine::String const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetClipboardText__SWIG_1(void * jarg1) {
  UltraEngine::WString *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::SetClipboardText((UltraEngine::WString const &)*arg1);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetClipboardText() {
  void * jresult ;
  UltraEngine::WString result;
  
  result = UltraEngine::GetClipboardText();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_RuntimeError(void * jarg1) {
  UltraEngine::WString *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::RuntimeError((UltraEngine::WString const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Warn(void * jarg1) {
  UltraEngine::WString *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Warn((UltraEngine::WString const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Assert__SWIG_0(unsigned int jarg1) {
  bool arg1 ;
  
  arg1 = jarg1 ? true : false; 
  UltraEngine::Assert(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Assert__SWIG_1(unsigned int jarg1, void * jarg2) {
  bool arg1 ;
  UltraEngine::WString *arg2 = 0 ;
  
  arg1 = jarg1 ? true : false; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Assert(arg1,(UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Assert__SWIG_2(void * jarg1) {
  std::shared_ptr< UltraEngine::Object > arg1 ;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Object > *)jarg1; 
  UltraEngine::Assert(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Assert__SWIG_3(void * jarg1, void * jarg2) {
  std::shared_ptr< UltraEngine::Object > arg1 ;
  UltraEngine::WString *arg2 = 0 ;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Object > *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Assert(arg1,(UltraEngine::WString const &)*arg2);
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Millisecs() {
  unsigned long long jresult ;
  uint64_t result;
  
  result = (uint64_t)UltraEngine::Millisecs();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Sleep(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::Sleep(arg1);
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_GetMemoryUsage() {
  unsigned long long jresult ;
  uint64_t result;
  
  result = (uint64_t)UltraEngine::GetMemoryUsage();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateUUID() {
  void * jresult ;
  UltraEngine::String result;
  
  result = UltraEngine::CreateUUID();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Chr(unsigned char jarg1) {
  void * jresult ;
  unsigned char arg1 ;
  UltraEngine::String result;
  
  arg1 = (unsigned char)jarg1; 
  result = UltraEngine::Chr(arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Asc__SWIG_0(char * jarg1) {
  unsigned char jresult ;
  std::string *arg1 = 0 ;
  unsigned char result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = (unsigned char)UltraEngine::Asc((std::string const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_XOR(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::XOR((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WChr(wchar_t jarg1) {
  void * jresult ;
  wchar_t arg1 ;
  UltraEngine::WString result;
  
  arg1 = (wchar_t)jarg1; 
  result = UltraEngine::WChr(arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT wchar_t SWIGSTDCALL CSharp_Asc__SWIG_1(void * jarg1) {
  wchar_t jresult ;
  UltraEngine::WString *arg1 = 0 ;
  wchar_t result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (wchar_t)UltraEngine::Asc((UltraEngine::WString const &)*arg1);
  jresult = (wchar_t)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_0(char * jarg1, unsigned int jarg2) {
  std::string *arg1 = 0 ;
  bool arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  UltraEngine::Print((std::string const &)*arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_1(char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  UltraEngine::Print((std::string const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_2(void * jarg1, unsigned int jarg2) {
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  UltraEngine::Print((UltraEngine::WString const &)*arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_3(void * jarg1) {
  UltraEngine::WString *arg1 = 0 ;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  UltraEngine::Print((UltraEngine::WString const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_4(unsigned int jarg1) {
  unsigned int arg1 ;
  
  arg1 = (unsigned int)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_5(unsigned long long jarg1) {
  uint64_t arg1 ;
  
  arg1 = (uint64_t)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_6(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_7(float jarg1) {
  float arg1 ;
  
  arg1 = (float)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_8(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_9(unsigned int jarg1) {
  bool arg1 ;
  
  arg1 = jarg1 ? true : false; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Print__SWIG_11(void * jarg1) {
  std::shared_ptr< UltraEngine::String > arg1 ;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::String > *)jarg1; 
  UltraEngine::Print(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_AddLogStream(void * jarg1) {
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  UltraEngine::AddLogStream(arg1);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FileHidden(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::FileHidden((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DownloadFile(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::DownloadFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_PathIsURL(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::PathIsURL((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LuaLoadDir(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  std::vector< std::string > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = UltraEngine::LuaLoadDir((UltraEngine::WString const &)*arg1,arg2);
  jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadDir__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  std::vector< UltraEngine::WString > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = UltraEngine::LoadDir((UltraEngine::WString const &)*arg1,arg2);
  jresult = new std::vector< UltraEngine::WString >((const std::vector< UltraEngine::WString > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadDir__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::vector< UltraEngine::WString > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadDir((UltraEngine::WString const &)*arg1);
  jresult = new std::vector< UltraEngine::WString >((const std::vector< UltraEngine::WString > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StripAll__SWIG_0(char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  UltraEngine::String result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = UltraEngine::StripAll((std::string const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StripAll__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::StripAll((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StripDir__SWIG_0(char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  UltraEngine::String result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = UltraEngine::StripDir((std::string const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StripDir__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::StripDir((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ExtractDir__SWIG_0(char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  UltraEngine::String result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = UltraEngine::ExtractDir((std::string const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ExtractDir__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::ExtractDir((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_StripExt__SWIG_0(char * jarg1) {
  char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = UltraEngine::StripExt((std::string const &)*arg1);
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StripExt__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::StripExt((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_FileTime(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::WString *arg1 = 0 ;
  uint64_t result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (uint64_t)UltraEngine::FileTime((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FileType(void * jarg1) {
  int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)UltraEngine::FileType((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ExtractExt__SWIG_0(char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  UltraEngine::String result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  result = UltraEngine::ExtractExt((std::string const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ExtractExt__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::ExtractExt((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetPath(int jarg1) {
  void * jresult ;
  UltraEngine::UserPath arg1 ;
  UltraEngine::WString result;
  
  arg1 = (UltraEngine::UserPath)jarg1; 
  result = UltraEngine::GetPath(arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CurrentDir() {
  void * jresult ;
  UltraEngine::WString result;
  
  result = UltraEngine::CurrentDir();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AppDir() {
  void * jresult ;
  UltraEngine::WString result;
  
  result = UltraEngine::AppDir();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ChangeDir(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::ChangeDir((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RealPath(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::RealPath((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DeleteDir__SWIG_0(void * jarg1, unsigned int jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = (bool)UltraEngine::DeleteDir((UltraEngine::WString const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DeleteDir__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::DeleteDir((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_CreateDir__SWIG_0(void * jarg1, unsigned int jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = (bool)UltraEngine::CreateDir((UltraEngine::WString const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_CreateDir__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::CreateDir((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_RenameDir(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::RenameDir((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FixPath(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::FixPath((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CasedPath(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::CasedPath((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CasedFileName(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::CasedFileName((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ClearWebCache() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)UltraEngine::ClearWebCache();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadString(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::String result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadString((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadWString(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadWString((UltraEngine::WString const &)*arg1);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ReadFile__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::ReadFile((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ReadFile__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::ReadFile((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_RenameFile(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::RenameFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WriteFile(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::WriteFile((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpenFile(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::OpenFile((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DeleteFile(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::DeleteFile((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_CopyFile(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::CopyFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpenDir(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::OpenDir((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_RunFile__SWIG_0(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::RunFile((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_RunFile__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::RunFile((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_CreateFile(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)UltraEngine::CreateFile((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_FileSize(void * jarg1) {
  long long jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int64_t result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int64_t)UltraEngine::FileSize((UltraEngine::WString const &)*arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_id_set(void * jarg1, int jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::EventID arg2 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = (UltraEngine::EventID)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Event_id_get(void * jarg1) {
  int jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::EventID result;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (UltraEngine::EventID) ((arg1)->id);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_source_set(void * jarg1, void * jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->source = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Event_source_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->source);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_data_set(void * jarg1, int jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->data = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Event_data_get(void * jarg1) {
  int jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (int) ((arg1)->data);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_position_set(void * jarg1, void * jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->position = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Event_position_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (UltraEngine::iVec2 *)& ((arg1)->position);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_size_set(void * jarg1, void * jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->size = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Event_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (UltraEngine::iVec2 *)& ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Event_extra_set(void * jarg1, void * jarg2) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->extra = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Event_extra_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->extra);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_0() {
  void * jresult ;
  UltraEngine::Event *result = 0 ;
  
  result = (UltraEngine::Event *)new UltraEngine::Event();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_1(int jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  void * jresult ;
  UltraEngine::EventID arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  UltraEngine::iVec2 arg4 ;
  UltraEngine::iVec2 arg5 ;
  std::shared_ptr< UltraEngine::Object > arg6 ;
  UltraEngine::iVec2 *argp4 ;
  UltraEngine::iVec2 *argp5 ;
  UltraEngine::Event *result = 0 ;
  
  arg1 = (UltraEngine::EventID)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  argp4 = (UltraEngine::iVec2 *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2", 0);
    return 0;
  }
  arg4 = *argp4; 
  argp5 = (UltraEngine::iVec2 *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2", 0);
    return 0;
  }
  arg5 = *argp5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Object > *)jarg6; 
  result = (UltraEngine::Event *)new UltraEngine::Event(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_2(int jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5) {
  void * jresult ;
  UltraEngine::EventID arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  UltraEngine::iVec2 arg4 ;
  UltraEngine::iVec2 arg5 ;
  UltraEngine::iVec2 *argp4 ;
  UltraEngine::iVec2 *argp5 ;
  UltraEngine::Event *result = 0 ;
  
  arg1 = (UltraEngine::EventID)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  argp4 = (UltraEngine::iVec2 *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2", 0);
    return 0;
  }
  arg4 = *argp4; 
  argp5 = (UltraEngine::iVec2 *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2", 0);
    return 0;
  }
  arg5 = *argp5; 
  result = (UltraEngine::Event *)new UltraEngine::Event(arg1,arg2,arg3,arg4,arg5);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_3(int jarg1, void * jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  UltraEngine::EventID arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  UltraEngine::iVec2 arg4 ;
  UltraEngine::iVec2 *argp4 ;
  UltraEngine::Event *result = 0 ;
  
  arg1 = (UltraEngine::EventID)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  argp4 = (UltraEngine::iVec2 *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2", 0);
    return 0;
  }
  arg4 = *argp4; 
  result = (UltraEngine::Event *)new UltraEngine::Event(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_4(int jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::EventID arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  UltraEngine::Event *result = 0 ;
  
  arg1 = (UltraEngine::EventID)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (UltraEngine::Event *)new UltraEngine::Event(arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Event__SWIG_5(int jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::EventID arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  UltraEngine::Event *result = 0 ;
  
  arg1 = (UltraEngine::EventID)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  result = (UltraEngine::Event *)new UltraEngine::Event(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Event(void * jarg1) {
  UltraEngine::Event *arg1 = (UltraEngine::Event *) 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AllocEventID() {
  int jresult ;
  UltraEngine::EventID result;
  
  result = (UltraEngine::EventID)UltraEngine::AllocEventID();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EventQueue_Peek() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)UltraEngine::EventQueue::Peek();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EventQueue_Wait() {
  void * jresult ;
  UltraEngine::Event result;
  
  result = UltraEngine::EventQueue::Wait();
  jresult = new UltraEngine::Event((const UltraEngine::Event &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Flush() {
  UltraEngine::EventQueue::Flush();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_0(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, void * jarg8, unsigned int jarg9) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  std::shared_ptr< UltraEngine::Object > arg8 ;
  bool arg9 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  if (jarg8) arg8 = *(std::shared_ptr< UltraEngine::Object > *)jarg8; 
  arg9 = jarg9 ? true : false; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_1(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, void * jarg8) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  std::shared_ptr< UltraEngine::Object > arg8 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  if (jarg8) arg8 = *(std::shared_ptr< UltraEngine::Object > *)jarg8; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_2(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_3(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_4(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_5(int jarg1, void * jarg2, int jarg3, int jarg4) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_6(int jarg1, void * jarg2, int jarg3) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  UltraEngine::EventQueue::Emit(arg1,arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_7(int jarg1, void * jarg2) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  UltraEngine::EventQueue::Emit(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventQueue_Emit__SWIG_8(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::EventQueue::Emit(arg1);
}


SWIGEXPORT int SWIGSTDCALL CSharp_EventQueue_MaxSize_get() {
  int jresult ;
  int result;
  
  result = (int)(int)UltraEngine::EventQueue::MaxSize;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_EventQueue() {
  void * jresult ;
  UltraEngine::EventQueue *result = 0 ;
  
  result = (UltraEngine::EventQueue *)new UltraEngine::EventQueue();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_EventQueue(void * jarg1) {
  UltraEngine::EventQueue *arg1 = (UltraEngine::EventQueue *) 0 ;
  
  arg1 = (UltraEngine::EventQueue *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_EventListener() {
  void * jresult ;
  UltraEngine::EventListener *result = 0 ;
  
  result = (UltraEngine::EventListener *)new UltraEngine::EventListener();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventListener_id_set(void * jarg1, int jarg2) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  UltraEngine::EventID arg2 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  arg2 = (UltraEngine::EventID)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EventListener_id_get(void * jarg1) {
  int jresult ;
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  UltraEngine::EventID result;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  result = (UltraEngine::EventID) ((arg1)->id);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventListener_source_set(void * jarg1, void * jarg2) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::weak_ptr< UltraEngine::Object > *arg2 = (std::weak_ptr< UltraEngine::Object > *) 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  arg2 = (std::weak_ptr< UltraEngine::Object > *)jarg2; 
  if (arg1) (arg1)->source = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EventListener_source_get(void * jarg1) {
  void * jresult ;
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::weak_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  result = (std::weak_ptr< UltraEngine::Object > *)& ((arg1)->source);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventListener_callback_set(void * jarg1, void * jarg2) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  bool (*arg2)(UltraEngine::Event const &,std::shared_ptr< UltraEngine::Object >) = (bool (*)(UltraEngine::Event const &,std::shared_ptr< UltraEngine::Object >)) 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  arg2 = (bool (*)(UltraEngine::Event const &,std::shared_ptr< UltraEngine::Object >))jarg2; 
  if (arg1) (arg1)->callback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EventListener_callback_get(void * jarg1) {
  void * jresult ;
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  bool (*result)(UltraEngine::Event const &,std::shared_ptr< UltraEngine::Object >) = 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  result = (bool (*)(UltraEngine::Event const &,std::shared_ptr< UltraEngine::Object >)) ((arg1)->callback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventListener_command_set(void * jarg1, void * jarg2) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::function< void () > arg2 ;
  std::function< void () > *argp2 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  argp2 = (std::function< void () > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::function< void () >", 0);
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->command = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EventListener_command_get(void * jarg1) {
  void * jresult ;
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::function< void () > result;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  result =  ((arg1)->command);
  jresult = new std::function< void () >((const std::function< void () > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EventListener_extra_set(void * jarg1, void * jarg2) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->extra = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EventListener_extra_get(void * jarg1) {
  void * jresult ;
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->extra);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_EventListener(void * jarg1) {
  UltraEngine::EventListener *arg1 = (UltraEngine::EventListener *) 0 ;
  
  arg1 = (UltraEngine::EventListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_PeekEvent() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)UltraEngine::PeekEvent();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WaitEvent() {
  void * jresult ;
  UltraEngine::Event result;
  
  result = UltraEngine::WaitEvent();
  jresult = new UltraEngine::Event((const UltraEngine::Event &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_0(void * jarg1, unsigned int jarg2) {
  UltraEngine::Event *arg1 = 0 ;
  bool arg2 ;
  
  arg1 = (UltraEngine::Event *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  UltraEngine::EmitEvent((UltraEngine::Event const &)*arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_1(void * jarg1) {
  UltraEngine::Event *arg1 = 0 ;
  
  arg1 = (UltraEngine::Event *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  UltraEngine::EmitEvent((UltraEngine::Event const &)*arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_2(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, void * jarg8) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  std::shared_ptr< UltraEngine::Object > arg8 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  if (jarg8) arg8 = *(std::shared_ptr< UltraEngine::Object > *)jarg8; 
  UltraEngine::EmitEvent(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_3(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  UltraEngine::EmitEvent(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_4(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  UltraEngine::EmitEvent(arg1,arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_5(int jarg1, void * jarg2, int jarg3, int jarg4, int jarg5) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  UltraEngine::EmitEvent(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_6(int jarg1, void * jarg2, int jarg3, int jarg4) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  UltraEngine::EmitEvent(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_7(int jarg1, void * jarg2, int jarg3) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  int arg3 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = (int)jarg3; 
  UltraEngine::EmitEvent(arg1,arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_8(int jarg1, void * jarg2) {
  int arg1 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  
  arg1 = (int)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  UltraEngine::EmitEvent(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EmitEvent__SWIG_9(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  UltraEngine::EmitEvent(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Language_AddTerm(void * jarg1, wchar_t * jarg2, wchar_t * jarg3) {
  UltraEngine::Language *arg1 = (UltraEngine::Language *) 0 ;
  std::wstring *arg2 = 0 ;
  std::wstring *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Language > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Language > *)jarg1;
  arg1 = (UltraEngine::Language *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  (arg1)->AddTerm((std::wstring const &)*arg2,(std::wstring const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Language_Translate__SWIG_0(void * jarg1, char * jarg2) {
  void * jresult ;
  UltraEngine::Language *arg1 = (UltraEngine::Language *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Language > *smartarg1 = 0 ;
  std::wstring result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Language > *)jarg1;
  arg1 = (UltraEngine::Language *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (arg1)->Translate((std::string const &)*arg2);
  jresult = SWIG_csharp_wstring_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Language() {
  void * jresult ;
  UltraEngine::Language *result = 0 ;
  
  result = (UltraEngine::Language *)new UltraEngine::Language();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Language >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Language(void * jarg1) {
  UltraEngine::Language *arg1 = (UltraEngine::Language *) 0 ;
  std::shared_ptr< UltraEngine::Language > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Language > *)jarg1;
  arg1 = (UltraEngine::Language *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadLanguage__SWIG_0(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Language > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadLanguage((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Language >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadLanguage__SWIG_1(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  std::shared_ptr< UltraEngine::Language > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  result = UltraEngine::LoadLanguage(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Language >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_SetLanguage(void * jarg1) {
  std::shared_ptr< UltraEngine::Language > arg1 ;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Language > *)jarg1; 
  UltraEngine::SetLanguage(arg1);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GetLanguage() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Language > result;
  
  result = UltraEngine::GetLanguage();
  jresult = result ? new std::shared_ptr< UltraEngine::Language >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_STREAM_READ_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::STREAM_READ;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_STREAM_WRITE_get() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::STREAM_WRITE;
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_path_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->path);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Stream() {
  void * jresult ;
  UltraEngine::Stream *result = 0 ;
  
  result = (UltraEngine::Stream *)new UltraEngine::Stream();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Stream >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Stream(void * jarg1) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Stream_GetPosition(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetPosition();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_Seek(void * jarg1, unsigned long long jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  (arg1)->Seek(arg2);
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Stream_GetSize(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Stream_EOF(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->EOF();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Stream_Resize(void * jarg1, unsigned long long jarg2) {
  unsigned int jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (bool)(arg1)->Resize(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_Close(void * jarg1) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Close();
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Stream_ReadByte(void * jarg1) {
  unsigned char jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  unsigned char result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (unsigned char)(arg1)->ReadByte();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Stream_ReadInt(void * jarg1) {
  int jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->ReadInt();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_Stream_ReadShort(void * jarg1) {
  unsigned short jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  unsigned short result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (unsigned short)(arg1)->ReadShort();
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Stream_ReadFloat(void * jarg1) {
  float jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float)(arg1)->ReadFloat();
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Stream_ReadDouble(void * jarg1) {
  double jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double)(arg1)->ReadDouble();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadString__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->ReadString(arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadString__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ReadString();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadWString__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->ReadWString(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadWString__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ReadWString();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadLine(void * jarg1) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ReadLine();
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Stream_ReadWLine(void * jarg1) {
  void * jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ReadWLine();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Stream_Read(void * jarg1, void * jarg2, unsigned long long jarg3) {
  unsigned long long jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  void *arg2 = (void *) 0 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = (uint64_t)(arg1)->Read((void const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Stream_Write__SWIG_0(void * jarg1, void * jarg2, unsigned long long jarg3) {
  unsigned long long jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  void *arg2 = (void *) 0 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = (uint64_t)(arg1)->Write((void const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Stream_Write__SWIG_1(void * jarg1, void * jarg2, unsigned long long jarg3, unsigned long long jarg4) {
  unsigned long long jresult ;
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > arg2 ;
  uint64_t arg3 ;
  uint64_t arg4 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg2; 
  arg3 = (uint64_t)jarg3; 
  arg4 = (uint64_t)jarg4; 
  result = (uint64_t)(arg1)->Write(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteByte(void * jarg1, unsigned char jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  unsigned char arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (unsigned char)jarg2; 
  (arg1)->WriteByte(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteInt(void * jarg1, int jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->WriteInt(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteFloat(void * jarg1, float jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  (arg1)->WriteFloat(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteDouble(void * jarg1, double jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  double arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  (arg1)->WriteDouble(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteString__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  arg3 = jarg3 ? true : false; 
  (arg1)->WriteString((UltraEngine::String const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteString__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  (arg1)->WriteString((UltraEngine::String const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteWString__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  arg3 = jarg3 ? true : false; 
  (arg1)->WriteWString((UltraEngine::WString const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteWString__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->WriteWString((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteLine(void * jarg1, void * jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::String *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg2) ? ((std::shared_ptr< const UltraEngine::String > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  (arg1)->WriteLine((UltraEngine::String const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteWLine(void * jarg1, void * jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->WriteWLine((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_WriteShort(void * jarg1, unsigned short jarg2) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  unsigned short arg2 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (unsigned short)jarg2; 
  (arg1)->WriteShort(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Stream_Flush(void * jarg1) {
  UltraEngine::Stream *arg1 = (UltraEngine::Stream *) 0 ;
  std::shared_ptr< UltraEngine::Stream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Stream > *)jarg1;
  arg1 = (UltraEngine::Stream *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Flush();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BufferStream_data_get(void * jarg1) {
  void * jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Buffer > *) &(std::shared_ptr< UltraEngine::Buffer > const &) ((arg1)->data);
  jresult = *result ? new std::shared_ptr< UltraEngine::Buffer >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BufferStream() {
  void * jresult ;
  UltraEngine::BufferStream *result = 0 ;
  
  result = (UltraEngine::BufferStream *)new UltraEngine::BufferStream();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::BufferStream >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BufferStream(void * jarg1) {
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BufferStream_Close(void * jarg1) {
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Close();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_BufferStream_EOF(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->EOF();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_BufferStream_GetPosition(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetPosition();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BufferStream_Seek(void * jarg1, unsigned long long jarg2) {
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  (arg1)->Seek(arg2);
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_BufferStream_GetSize(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_BufferStream_Read(void * jarg1, void * jarg2, unsigned long long jarg3) {
  unsigned long long jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  void *arg2 = (void *) 0 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = (uint64_t)(arg1)->Read((void const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_BufferStream_Write(void * jarg1, void * jarg2, unsigned long long jarg3) {
  unsigned long long jresult ;
  UltraEngine::BufferStream *arg1 = (UltraEngine::BufferStream *) 0 ;
  void *arg2 = (void *) 0 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::BufferStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::BufferStream > *)jarg1;
  arg1 = (UltraEngine::BufferStream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = (uint64_t)(arg1)->Write((void const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateBufferStream__SWIG_0(void * jarg1, wchar_t * jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Buffer > arg1 ;
  std::wstring *arg2 = 0 ;
  std::shared_ptr< UltraEngine::BufferStream > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = UltraEngine::CreateBufferStream(arg1,(std::wstring const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::BufferStream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateBufferStream__SWIG_1(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Buffer > arg1 ;
  std::shared_ptr< UltraEngine::BufferStream > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg1; 
  result = UltraEngine::CreateBufferStream(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::BufferStream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateBufferStream__SWIG_2() {
  void * jresult ;
  std::shared_ptr< UltraEngine::BufferStream > result;
  
  result = UltraEngine::CreateBufferStream();
  jresult = result ? new std::shared_ptr< UltraEngine::BufferStream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FileSystemWatcher() {
  void * jresult ;
  UltraEngine::FileSystemWatcher *result = 0 ;
  
  result = (UltraEngine::FileSystemWatcher *)new UltraEngine::FileSystemWatcher();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::FileSystemWatcher >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FileSystemWatcher(void * jarg1) {
  UltraEngine::FileSystemWatcher *arg1 = (UltraEngine::FileSystemWatcher *) 0 ;
  std::shared_ptr< UltraEngine::FileSystemWatcher > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::FileSystemWatcher > *)jarg1;
  arg1 = (UltraEngine::FileSystemWatcher *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FileSystemWatcher_TimerCallback(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Event *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  bool result;
  
  arg1 = (UltraEngine::Event *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  result = (bool)UltraEngine::FileSystemWatcher::TimerCallback((UltraEngine::Event const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateFileSystemWatcher__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::FileSystemWatcher > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = UltraEngine::CreateFileSystemWatcher((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::FileSystemWatcher >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateFileSystemWatcher__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::FileSystemWatcher > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::CreateFileSystemWatcher((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::FileSystemWatcher >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_disableWindowsKey_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->disableWindowsKey = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GameEngine_disableWindowsKey_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->disableWindowsKey);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_timerwindow_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::Window > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Window > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->timerwindow = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_timerwindow_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Window > *) & ((arg1)->timerwindow);
  jresult = *result ? new std::shared_ptr< UltraEngine::Window >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_timers_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > > *arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > > *)jarg2; 
  if (arg1) (arg1)->timers = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_timers_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< int,std::weak_ptr< UltraEngine::Timer >,std::less< int > > *)& ((arg1)->timers);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_timerIDs_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  UltraEngine::IDSystem *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::IDSystem *)(((std::shared_ptr< const UltraEngine::IDSystem > *)jarg2) ? ((std::shared_ptr< const UltraEngine::IDSystem > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::IDSystem const & reference is null", 0);
    return ;
  } 
  if (arg1) (arg1)->timerIDs = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_timerIDs_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  UltraEngine::IDSystem *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::IDSystem *) & ((arg1)->timerIDs);
  jresult = new std::shared_ptr< const UltraEngine::IDSystem >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_EventIDSystem_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  UltraEngine::IDSystem *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::IDSystem *)(((std::shared_ptr< const UltraEngine::IDSystem > *)jarg2) ? ((std::shared_ptr< const UltraEngine::IDSystem > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::IDSystem const & reference is null", 0);
    return ;
  } 
  if (arg1) (arg1)->EventIDSystem = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_EventIDSystem_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  UltraEngine::IDSystem *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::IDSystem *) & ((arg1)->EventIDSystem);
  jresult = new std::shared_ptr< const UltraEngine::IDSystem >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_vmmessagemutex_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Mutex > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Mutex > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->vmmessagemutex = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_vmmessagemutex_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Mutex > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Mutex > *) & ((arg1)->vmmessagemutex);
  jresult = *result ? new std::shared_ptr< UltraEngine::Mutex >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_widgets_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg2; 
  if (arg1) (arg1)->widgets = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_widgets_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > > *)& ((arg1)->widgets);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_windowhandle_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > > *arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > > *)jarg2; 
  if (arg1) (arg1)->windowhandle = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_windowhandle_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< HWND,std::weak_ptr< UltraEngine::Window >,std::less< HWND > > *)& ((arg1)->windowhandle);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_settings_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  nlohmann::json arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  nlohmann::json *argp2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  argp2 = (nlohmann::json *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null nlohmann::json", 0);
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->settings = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_settings_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  nlohmann::json result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result =  ((arg1)->settings);
  jresult = new nlohmann::json((const nlohmann::json &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_bonematrices_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::vector< float > *arg2 = (std::vector< float > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< float > *)jarg2; 
  if (arg1) (arg1)->bonematrices = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_bonematrices_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::vector< float > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< float > *)& ((arg1)->bonematrices);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_textureloaders_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg2; 
  if (arg1) (arg1)->textureloaders = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_textureloaders_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)& ((arg1)->textureloaders);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_modelloaders_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg2; 
  if (arg1) (arg1)->modelloaders = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_modelloaders_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)& ((arg1)->modelloaders);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_soundloaders_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg2; 
  if (arg1) (arg1)->soundloaders = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_soundloaders_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)& ((arg1)->soundloaders);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_materialloaders_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)jarg2; 
  if (arg1) (arg1)->materialloaders = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_materialloaders_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Loader > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Loader > > *)& ((arg1)->materialloaders);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_PrintMutex_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Mutex > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Mutex > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->PrintMutex = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_PrintMutex_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Mutex > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Mutex > *) & ((arg1)->PrintMutex);
  jresult = *result ? new std::shared_ptr< UltraEngine::Mutex >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_DPIScaling_set(void * jarg1, float jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->DPIScaling = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_GameEngine_DPIScaling_get(void * jarg1) {
  float jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float) ((arg1)->DPIScaling);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_eventqueue_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::list< UltraEngine::Event > *arg2 = (std::list< UltraEngine::Event > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::list< UltraEngine::Event > *)jarg2; 
  if (arg1) (arg1)->eventqueue = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_eventqueue_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::list< UltraEngine::Event > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::list< UltraEngine::Event > *)& ((arg1)->eventqueue);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_properties_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::map< std::wstring,std::wstring,std::less< std::wstring > > *arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< std::wstring,std::wstring,std::less< std::wstring > > *)jarg2; 
  if (arg1) (arg1)->properties = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_properties_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::map< std::wstring,std::wstring,std::less< std::wstring > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< std::wstring,std::wstring,std::less< std::wstring > > *)& ((arg1)->properties);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_packages_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > > *arg2 = (std::list< std::weak_ptr< UltraEngine::Package > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Package > > *)jarg2; 
  if (arg1) (arg1)->packages = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_packages_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Package > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::list< std::weak_ptr< UltraEngine::Package > > *)& ((arg1)->packages);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_plugins_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)jarg2; 
  if (arg1) (arg1)->plugins = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_plugins_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Plugin > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::list< std::weak_ptr< UltraEngine::Plugin > > *)& ((arg1)->plugins);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_skeletondata_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Buffer > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->skeletondata = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_skeletondata_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Buffer > *) & ((arg1)->skeletondata);
  jresult = *result ? new std::shared_ptr< UltraEngine::Buffer >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_skeletonmin_set(void * jarg1, unsigned long long jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  if (arg1) (arg1)->skeletonmin = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_GameEngine_skeletonmin_get(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t) ((arg1)->skeletonmin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_skeletonmax_set(void * jarg1, unsigned long long jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  if (arg1) (arg1)->skeletonmax = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_GameEngine_skeletonmax_get(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t) ((arg1)->skeletonmax);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_skeletonschanged_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->skeletonschanged = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GameEngine_skeletonschanged_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->skeletonschanged);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_brdfloaded_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->brdfloaded = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GameEngine_brdfloaded_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->brdfloaded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_GameEngine() {
  void * jresult ;
  UltraEngine::GameEngine *result = 0 ;
  
  result = (UltraEngine::GameEngine *)new UltraEngine::GameEngine();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::GameEngine >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_GameEngine(void * jarg1) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_Start(void * jarg1) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Start();
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_cachedassets_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > > *arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > > *)jarg2; 
  if (arg1) (arg1)->cachedassets = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_cachedassets_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< std::wstring,std::weak_ptr< UltraEngine::Asset >,std::less< std::wstring > > *)& ((arg1)->cachedassets);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_cachedpixmaps_set(void * jarg1, void * jarg2) {
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > > *arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > > *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > > *)jarg2; 
  if (arg1) (arg1)->cachedpixmaps = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_cachedpixmaps_get(void * jarg1) {
  void * jresult ;
  UltraEngine::GameEngine *arg1 = (UltraEngine::GameEngine *) 0 ;
  std::shared_ptr< UltraEngine::GameEngine > *smartarg1 = 0 ;
  std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::GameEngine > *)jarg1;
  arg1 = (UltraEngine::GameEngine *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< float,std::map< std::wstring,std::weak_ptr< UltraEngine::Pixmap >,std::less< std::wstring > >,std::less< float > > *)& ((arg1)->cachedpixmaps);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_Get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::GameEngine > result;
  
  result = UltraEngine::GameEngine::Get();
  jresult = result ? new std::shared_ptr< UltraEngine::GameEngine >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GameEngine_instance_set(void * jarg1) {
  std::shared_ptr< UltraEngine::GameEngine > *arg1 = 0 ;
  std::shared_ptr< UltraEngine::GameEngine > tempnull1 ;
  
  arg1 = jarg1 ? (std::shared_ptr< UltraEngine::GameEngine > *)jarg1 : &tempnull1; 
  UltraEngine::GameEngine::instance = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_GameEngine_instance_get() {
  void * jresult ;
  std::shared_ptr< UltraEngine::GameEngine > *result = 0 ;
  
  result = (std::shared_ptr< UltraEngine::GameEngine > *) &UltraEngine::GameEngine::instance;
  jresult = *result ? new std::shared_ptr< UltraEngine::GameEngine >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Initialize() {
  UltraEngine::Initialize();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Shutdown() {
  UltraEngine::Shutdown();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Clock(int jarg1) {
  void * jresult ;
  int arg1 ;
  UltraEngine::Clock *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (UltraEngine::Clock *)new UltraEngine::Clock(arg1);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Clock >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Clock_GetTime(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetTime();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Clock_Tick__SWIG_0(void * jarg1) {
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Tick();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Clock_Tick__SWIG_1(void * jarg1, int jarg2) {
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->Tick(arg2);
}


SWIGEXPORT float SWIGSTDCALL CSharp_Clock_GetSpeed(void * jarg1) {
  float jresult ;
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float)(arg1)->GetSpeed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Clock_Pause(void * jarg1) {
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Pause();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Clock_Paused(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Paused();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Clock_Resume(void * jarg1) {
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Resume();
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Clock(void * jarg1) {
  UltraEngine::Clock *arg1 = (UltraEngine::Clock *) 0 ;
  std::shared_ptr< UltraEngine::Clock > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Clock > *)jarg1;
  arg1 = (UltraEngine::Clock *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateClock__SWIG_0(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::shared_ptr< UltraEngine::Clock > result;
  
  arg1 = (int)jarg1; 
  result = UltraEngine::CreateClock(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Clock >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateClock__SWIG_1() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Clock > result;
  
  result = UltraEngine::CreateClock();
  jresult = result ? new std::shared_ptr< UltraEngine::Clock >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Buffer__SWIG_0() {
  void * jresult ;
  UltraEngine::Buffer *result = 0 ;
  
  result = (UltraEngine::Buffer *)new UltraEngine::Buffer();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Buffer >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Buffer__SWIG_1(unsigned long long jarg1, unsigned int jarg2) {
  void * jresult ;
  uint64_t arg1 ;
  bool arg2 ;
  UltraEngine::Buffer *result = 0 ;
  
  arg1 = (uint64_t)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (UltraEngine::Buffer *)new UltraEngine::Buffer(arg1,arg2);
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Buffer >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Buffer(void * jarg1) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Buffer_Data(void * jarg1) {
  char * jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  char *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  result = (char *)(arg1)->Data();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_Clear(void * jarg1) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Clear();
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Buffer_GetSize(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Buffer_Resize__SWIG_0(void * jarg1, unsigned long long jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (bool)(arg1)->Resize(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Buffer_Resize__SWIG_1(void * jarg1, unsigned long long jarg2) {
  unsigned int jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (bool)(arg1)->Resize(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeByte(void * jarg1, unsigned long long jarg2, unsigned char jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  unsigned char arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (unsigned char)jarg3; 
  (arg1)->PokeByte(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeShort(void * jarg1, unsigned long long jarg2, unsigned short jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  unsigned short arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (unsigned short)jarg3; 
  (arg1)->PokeShort(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeInt(void * jarg1, unsigned long long jarg2, int jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->PokeInt(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeFloat(void * jarg1, unsigned long long jarg2, float jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  float arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->PokeFloat(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeDouble(void * jarg1, unsigned long long jarg2, double jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  double arg3 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (double)jarg3; 
  (arg1)->PokeDouble(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeString(void * jarg1, unsigned long long jarg2, void * jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  UltraEngine::String *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  
  arg3 = (UltraEngine::String *)(((std::shared_ptr< const UltraEngine::String > *)jarg3) ? ((std::shared_ptr< const UltraEngine::String > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::String const & reference is null", 0);
    return ;
  } 
  (arg1)->PokeString(arg2,(UltraEngine::String const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_PokeWString(void * jarg1, unsigned long long jarg2, void * jarg3) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->PokeWString(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Buffer_PeekByte(void * jarg1, unsigned long long jarg2) {
  unsigned char jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  unsigned char result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (unsigned char)(arg1)->PeekByte(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_Buffer_PeekShort(void * jarg1, unsigned long long jarg2) {
  unsigned short jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  unsigned short result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (unsigned short)(arg1)->PeekShort(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Buffer_PeekInt(void * jarg1, unsigned long long jarg2) {
  int jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (int)(arg1)->PeekInt(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Buffer_PeekFloat(void * jarg1, unsigned long long jarg2) {
  float jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (float)(arg1)->PeekFloat(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Buffer_PeekDouble(void * jarg1, unsigned long long jarg2) {
  double jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (double)(arg1)->PeekDouble(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Buffer_PeekString(void * jarg1, unsigned long long jarg2) {
  void * jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  UltraEngine::String result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (arg1)->PeekString(arg2);
  jresult = new std::shared_ptr<  UltraEngine::String >(new UltraEngine::String((UltraEngine::String &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Buffer_PeekWString(void * jarg1, unsigned long long jarg2) {
  void * jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (arg1)->PeekWString(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Buffer_Copy(void * jarg1, unsigned long long jarg2, void * jarg3, unsigned long long jarg4, unsigned long long jarg5) {
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > arg3 ;
  uint64_t arg4 ;
  uint64_t arg5 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg3; 
  arg4 = (uint64_t)jarg4; 
  arg5 = (uint64_t)jarg5; 
  (arg1)->Copy(arg2,arg3,arg4,arg5);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Buffer_Save(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Buffer *arg1 = (UltraEngine::Buffer *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Buffer > *)jarg1;
  arg1 = (UltraEngine::Buffer *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadBuffer__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadBuffer((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadBuffer__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadBuffer((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateBuffer__SWIG_0(unsigned long long jarg1) {
  void * jresult ;
  uint64_t arg1 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  arg1 = (uint64_t)jarg1; 
  result = UltraEngine::CreateBuffer(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateBuffer__SWIG_1() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  result = UltraEngine::CreateBuffer();
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateStaticBuffer__SWIG_0(void * jarg1, unsigned long long jarg2, void * jarg3) {
  void * jresult ;
  void *arg1 = (void *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  arg1 = jarg1; 
  arg2 = (uint64_t)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  result = UltraEngine::CreateStaticBuffer((void const *)arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateStaticBuffer__SWIG_1(void * jarg1, unsigned long long jarg2) {
  void * jresult ;
  void *arg1 = (void *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > result;
  
  arg1 = jarg1; 
  arg2 = (uint64_t)jarg2; 
  result = UltraEngine::CreateStaticBuffer((void const *)arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Buffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetBlock() {
  void * jresult ;
  UltraEngine::WidgetBlock *result = 0 ;
  
  result = (UltraEngine::WidgetBlock *)new UltraEngine::WidgetBlock();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WidgetBlock(void * jarg1) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_iconscale_set(void * jarg1, float jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->iconscale = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_WidgetBlock_iconscale_get(void * jarg1) {
  float jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  float result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (float) ((arg1)->iconscale);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_icon_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_icon_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_filter_set(void * jarg1, int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::TextureFilter arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (UltraEngine::TextureFilter)jarg2; 
  if (arg1) (arg1)->filter = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WidgetBlock_filter_get(void * jarg1) {
  int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::TextureFilter result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (UltraEngine::TextureFilter) ((arg1)->filter);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_gradient_set(void * jarg1, float jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  float arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->gradient = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_WidgetBlock_gradient_get(void * jarg1) {
  float jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  float result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (float) ((arg1)->gradient);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_hidden_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hidden = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetBlock_hidden_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (bool) ((arg1)->hidden);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_position_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->position = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_position_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (UltraEngine::iVec2 *)& ((arg1)->position);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_size_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->size = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (UltraEngine::iVec2 *)& ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_text_set(void * jarg1, wchar_t * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::wstring *arg2 = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->text = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_text_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::wstring *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::wstring *) & ((arg1)->text);
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_color_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::Vec4 *arg2 = (UltraEngine::Vec4 *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2; 
  if (arg1) (arg1)->color = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_color_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (UltraEngine::Vec4 *)& ((arg1)->color);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_radius_set(void * jarg1, int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->radius = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WidgetBlock_radius_get(void * jarg1) {
  int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (int) ((arg1)->radius);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_wireframe_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->wireframe = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetBlock_wireframe_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (bool) ((arg1)->wireframe);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_textalignment_set(void * jarg1, int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->textalignment = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WidgetBlock_textalignment_get(void * jarg1) {
  int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (int) ((arg1)->textalignment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_fontsize_set(void * jarg1, int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->fontsize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WidgetBlock_fontsize_get(void * jarg1) {
  int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (int) ((arg1)->fontsize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_textdefined_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->textdefined = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetBlock_textdefined_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (bool) ((arg1)->textdefined);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_clipregiondefined_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->clipregiondefined = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_WidgetBlock_clipregiondefined_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  bool result;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (bool) ((arg1)->clipregiondefined);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_clipregion_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec4 *arg2 = (UltraEngine::iVec4 *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (UltraEngine::iVec4 *)jarg2; 
  if (arg1) (arg1)->clipregion = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_clipregion_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec4 *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (UltraEngine::iVec4 *)& ((arg1)->clipregion);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_pixmap_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->pixmap = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_pixmap_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::shared_ptr< UltraEngine::Pixmap > *) & ((arg1)->pixmap);
  jresult = *result ? new std::shared_ptr< UltraEngine::Pixmap >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_edgepadding_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *arg2 = (std::array< int,4 > *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (std::array< int,4 > *)jarg2; 
  if (arg1) (arg1)->edgepadding = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_edgepadding_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::array< int,4 > *)& ((arg1)->edgepadding);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_alignment_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *arg2 = (std::array< int,4 > *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (std::array< int,4 > *)jarg2; 
  if (arg1) (arg1)->alignment = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_alignment_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::array< int,4 > *)& ((arg1)->alignment);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_edgedistance_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *arg2 = (std::array< int,4 > *) 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (std::array< int,4 > *)jarg2; 
  if (arg1) (arg1)->edgedistance = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetBlock_edgedistance_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::array< int,4 > *result = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  result = (std::array< int,4 > *)& ((arg1)->edgedistance);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetClipRegion(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetClipRegion(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetPixmap__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::Vec4 *arg3 = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::Vec4 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetPixmap(arg2,(UltraEngine::Vec4 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetPixmap__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  (arg1)->SetPixmap(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetText(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetLayout(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetLayout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetShape(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  UltraEngine::iVec2 arg2 ;
  UltraEngine::iVec2 arg3 ;
  UltraEngine::iVec2 const *argp2 ;
  UltraEngine::iVec2 const *argp3 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  argp2 = (UltraEngine::iVec2 *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2 const", 0);
    return ;
  }
  arg2 = *argp2; 
  argp3 = (UltraEngine::iVec2 *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null UltraEngine::iVec2 const", 0);
    return ;
  }
  arg3 = *argp3; 
  (arg1)->SetShape(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetIcon__SWIG_0(void * jarg1, void * jarg2, float jarg3, void * jarg4) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  float arg3 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetIcon(arg2,arg3,(UltraEngine::Vec4 const &)*arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetIcon__SWIG_1(void * jarg1, void * jarg2, float jarg3) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  float arg3 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->SetIcon(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetBlock_SetIcon__SWIG_2(void * jarg1, void * jarg2) {
  UltraEngine::WidgetBlock *arg1 = (UltraEngine::WidgetBlock *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  
  arg1 = (UltraEngine::WidgetBlock *)jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  (arg1)->SetIcon(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_root_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Widget > *) &(std::shared_ptr< UltraEngine::Widget > const &) ((arg1)->root);
  jresult = *result ? new std::shared_ptr< UltraEngine::Widget >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_autoscalemode_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->autoscalemode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_autoscalemode_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->autoscalemode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_orderiterator_set(void * jarg1, long long jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int64_t arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->orderiterator = arg2;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Interface_orderiterator_get(void * jarg1) {
  long long jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int64_t) ((arg1)->orderiterator);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_buffer_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Buffer > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->buffer = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_buffer_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Buffer > *) & ((arg1)->buffer);
  jresult = *result ? new std::shared_ptr< UltraEngine::Buffer >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_base__set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Widget > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->base = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_base__get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Widget > *) & ((arg1)->base);
  jresult = *result ? new std::shared_ptr< UltraEngine::Widget >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_hoverwidget_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2; 
  if (arg1) (arg1)->hoverwidget = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_hoverwidget_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Widget > *)& ((arg1)->hoverwidget);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_focusedwidget_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2; 
  if (arg1) (arg1)->focusedwidget = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_focusedwidget_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Widget > *)& ((arg1)->focusedwidget);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_window_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::weak_ptr< UltraEngine::Window > *arg2 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Window > *)jarg2; 
  if (arg1) (arg1)->window = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_window_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Window > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Window > *)& ((arg1)->window);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_colors_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg2; 
  if (arg1) (arg1)->colors = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_colors_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)& ((arg1)->colors);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_hidestate_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hidestate = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_hidestate_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->hidestate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_scale_set(void * jarg1, float jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->scale = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Interface_scale_get(void * jarg1) {
  float jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float) ((arg1)->scale);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_fontpath_set(void * jarg1, char * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->fontpath = *arg2;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Interface_fontpath_get(void * jarg1) {
  char * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->fontpath);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_lastcursorblinktime_set(void * jarg1, int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lastcursorblinktime = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Interface_lastcursorblinktime_get(void * jarg1) {
  int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->lastcursorblinktime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_cursorblinkfrequency_set(void * jarg1, int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->cursorblinkfrequency = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Interface_cursorblinkfrequency_get(void * jarg1) {
  int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->cursorblinkfrequency);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_rootwidgets_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::list< std::weak_ptr< UltraEngine::Widget > > *)jarg2; 
  if (arg1) (arg1)->rootwidgets = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_rootwidgets_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::list< std::weak_ptr< UltraEngine::Widget > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::list< std::weak_ptr< UltraEngine::Widget > > *)& ((arg1)->rootwidgets);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_enabled_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->enabled = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_enabled_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->enabled);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_LoadIcons(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoadIcons();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_knob_vertical_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_knob_vertical = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_knob_vertical_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_knob_vertical);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_knob_horizontal_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_knob_horizontal = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_knob_horizontal_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_knob_horizontal);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_arrow_right_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_arrow_right = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_arrow_right_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_arrow_right);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_arrow_left_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_arrow_left = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_arrow_left_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_arrow_left);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_arrow_up_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_arrow_up = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_arrow_up_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_arrow_up);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_slider_arrow_down_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_slider_arrow_down = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_slider_arrow_down_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_slider_arrow_down);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_treeviewnode_open_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_treeviewnode_open = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_treeviewnode_open_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_treeviewnode_open);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_treeviewnode_closed_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_treeviewnode_closed = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_treeviewnode_closed_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_treeviewnode_closed);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_combobox_arrow_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_combobox_arrow = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_combobox_arrow_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_combobox_arrow);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_icon_button_checkmark_set(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon_button_checkmark = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_icon_button_checkmark_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon_button_checkmark);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Interface() {
  void * jresult ;
  UltraEngine::Interface *result = 0 ;
  
  result = (UltraEngine::Interface *)new UltraEngine::Interface();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Interface >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Interface(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_LoadColorScheme__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::LoadFlags arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::LoadFlags)jarg3; 
  result = (bool)(arg1)->LoadColorScheme((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_LoadColorScheme__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->LoadColorScheme((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Lock(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Lock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Unlock(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Unlock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_AutoScale(void * jarg1, unsigned int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->AutoScale(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Enable(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Enable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Disable(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Disable();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetMousePosition(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  UltraEngine::iVec3 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetMousePosition();
  jresult = new UltraEngine::iVec3((const UltraEngine::iVec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Sort(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Sort();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Draw(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Draw();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Clear(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_SetFocus(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  (arg1)->SetFocus(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetFocus(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetFocus();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Interface_GetLineHeight(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Font > arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Font > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)(arg1)->GetLineHeight(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Interface_GetFontHeight(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Font > arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Font > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)(arg1)->GetFontHeight(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ResetCursorBlink(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ResetCursorBlink();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_SetGradientMode(void * jarg1, unsigned int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetGradientMode(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_SetScale(void * jarg1, float jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  (arg1)->SetScale(arg2);
}


SWIGEXPORT float SWIGSTDCALL CSharp_Interface_GetScale(void * jarg1) {
  float jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float)(arg1)->GetScale();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Redraw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Redraw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Hide(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Hide();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_Show(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Show();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Hidden(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Hidden();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_MouseDown(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::MouseButton arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  result = (bool)(arg1)->MouseDown(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  result = (bool)(arg1)->Save(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_2(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_3(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_4(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  nlohmann::json *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save(*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Save__SWIG_5(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  nlohmann::json *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_SetPointer(void * jarg1, int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::MousePointer arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MousePointer)jarg2; 
  (arg1)->SetPointer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_UpdateLayout(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_SetClipRegion(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetClipRegion(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_0(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  (arg1)->ProcessEvent(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_1(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5, int jarg6, int jarg7) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  (arg1)->ProcessEvent(arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_2(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5, int jarg6) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  (arg1)->ProcessEvent(arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_3(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->ProcessEvent(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_4(void * jarg1, int jarg2, void * jarg3, int jarg4) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->ProcessEvent(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_5(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  (arg1)->ProcessEvent(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_6(void * jarg1, int jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->ProcessEvent(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_ProcessEvent__SWIG_7(void * jarg1, void * jarg2) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return ;
  } 
  (arg1)->ProcessEvent((UltraEngine::Event const &)*arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Interface_GetTextWidth(void * jarg1, void * jarg2, int jarg3, void * jarg4, int jarg5) {
  int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Font > arg2 ;
  int arg3 ;
  UltraEngine::WString *arg4 = 0 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Font > *)jarg2; 
  arg3 = (int)jarg3; 
  
  arg4 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg4) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (int)(arg1)->GetTextWidth(arg2,arg3,(UltraEngine::WString const &)*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_TextSize(void * jarg1, void * jarg2, int jarg3, int jarg4, void * jarg5, int jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Font > arg2 ;
  int arg3 ;
  int arg4 ;
  UltraEngine::WString *arg5 = 0 ;
  int arg6 ;
  UltraEngine::TextAlignment arg7 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Font > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  
  arg5 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg5) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg5)->get() : 0);
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg6 = (int)jarg6; 
  arg7 = (UltraEngine::TextAlignment)jarg7; 
  result = (arg1)->TextSize(arg2,arg3,arg4,(UltraEngine::WString const &)*arg5,arg6,arg7);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Interface_UpdateCursorBlink(void * jarg1) {
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateCursorBlink();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetHoveredWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetHoveredWidget();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetWindow(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetWindow();
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetBase(void * jarg1) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetBase();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Interface_GetWidgetAtPoint(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->GetWidgetAtPoint(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Interface_Reload(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Interface *arg1 = (UltraEngine::Interface *) 0 ;
  nlohmann::json *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Interface > *)jarg1;
  arg1 = (UltraEngine::Interface *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Reload(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateInterface(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Window > arg1 ;
  std::shared_ptr< UltraEngine::Interface > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Window > *)jarg1; 
  result = UltraEngine::CreateInterface(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Interface >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_iconscale_set(void * jarg1, float jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->iconscale = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_WidgetItem_iconscale_get(void * jarg1) {
  float jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float) ((arg1)->iconscale);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_text_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  if (arg1) (arg1)->text = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetItem_text_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) & ((arg1)->text);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_icon_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Icon > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->icon = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetItem_icon_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) & ((arg1)->icon);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_pixmap_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->pixmap = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetItem_pixmap_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Pixmap > *) & ((arg1)->pixmap);
  jresult = *result ? new std::shared_ptr< UltraEngine::Pixmap >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_extra_set(void * jarg1, void * jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->extra = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_WidgetItem_extra_get(void * jarg1) {
  void * jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->extra);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_WidgetItem_state_set(void * jarg1, int jarg2) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  UltraEngine::WidgetState arg2 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::WidgetState)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WidgetItem_state_get(void * jarg1) {
  int jresult ;
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  UltraEngine::WidgetState result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WidgetState) ((arg1)->state);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_WidgetItem() {
  void * jresult ;
  UltraEngine::WidgetItem *result = 0 ;
  
  result = (UltraEngine::WidgetItem *)new UltraEngine::WidgetItem();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::WidgetItem >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_WidgetItem(void * jarg1) {
  UltraEngine::WidgetItem *arg1 = (UltraEngine::WidgetItem *) 0 ;
  std::shared_ptr< UltraEngine::WidgetItem > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::WidgetItem > *)jarg1;
  arg1 = (UltraEngine::WidgetItem *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Reset(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  (darg)->Reset();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ResetSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  (darg)->ResetSwigPublic();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_OK(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (bool)(darg)->OK();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_OKSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (bool)(darg)->OKSwigPublic();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Cancel(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (bool)(darg)->Cancel();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_CancelSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (bool)(darg)->CancelSwigPublic();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_UpdateColors(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  (darg)->UpdateColors();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_UpdateColorsSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  SwigDirector_Widget *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  (darg)->UpdateColorsSwigPublic();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_icon_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Icon > *) &(std::shared_ptr< UltraEngine::Icon > const &) ((arg1)->icon);
  jresult = *result ? new std::shared_ptr< UltraEngine::Icon >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_text_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->text);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Initialize__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7, int jarg8) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Widget > arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  if (jarg7) arg7 = *(std::shared_ptr< UltraEngine::Widget > *)jarg7; 
  arg8 = (int)jarg8; 
  result = (bool)(arg1)->Initialize((UltraEngine::WString const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_InitializeSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7, int jarg8) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Widget > arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  if (jarg7) arg7 = *(std::shared_ptr< UltraEngine::Widget > *)jarg7; 
  arg8 = (int)jarg8; 
  result = (bool)(arg1)->UltraEngine::Widget::Initialize((UltraEngine::WString const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Initialize__SWIG_1(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7, int jarg8) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Interface > arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  if (jarg7) arg7 = *(std::shared_ptr< UltraEngine::Interface > *)jarg7; 
  arg8 = (int)jarg8; 
  result = (bool)(arg1)->Initialize((UltraEngine::WString const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_InitializeSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7, int jarg8) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Interface > arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  if (jarg7) arg7 = *(std::shared_ptr< UltraEngine::Interface > *)jarg7; 
  arg8 = (int)jarg8; 
  result = (bool)(arg1)->UltraEngine::Widget::Initialize((UltraEngine::WString const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_extra_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->extra = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_extra_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->extra);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_pixmapfilter_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::TextureFilter arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::TextureFilter)jarg2; 
  if (arg1) (arg1)->pixmapfilter = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_pixmapfilter_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::TextureFilter result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::TextureFilter) ((arg1)->pixmapfilter);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_cornerradius_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->cornerradius = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_cornerradius_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->cornerradius);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_color_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)jarg2; 
  if (arg1) (arg1)->color = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_color_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::array< UltraEngine::Vec4,UltraEngine::WIDGETCOLOR_POPUP+1 > *)& ((arg1)->color);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_order_set(void * jarg1, long long jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int64_t arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->order = arg2;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Widget_order_get(void * jarg1) {
  long long jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int64_t) ((arg1)->order);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_range_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->range = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_range_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *)& ((arg1)->range);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_selection_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->selection = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_selection_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->selection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_hidestate_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hidestate = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_hidestate_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->hidestate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_textalignement_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->textalignement = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_textalignement_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->textalignement);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_position_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->position = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_position_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *)& ((arg1)->position);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_size_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = (UltraEngine::iVec2 *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2; 
  if (arg1) (arg1)->size = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *)& ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_edgemode_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int *arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int *)jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->edgemode;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_edgemode_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int *)(int *) ((arg1)->edgemode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_edgedistance_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int *arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int *)jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->edgedistance;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_edgedistance_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int *)(int *) ((arg1)->edgedistance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_gui_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Interface > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Interface > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Interface > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->gui = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_gui_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Interface > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Interface > *) & ((arg1)->gui);
  jresult = *result ? new std::shared_ptr< UltraEngine::Interface >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_window_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::weak_ptr< UltraEngine::Window > *arg2 = (std::weak_ptr< UltraEngine::Window > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Window > *)jarg2; 
  if (arg1) (arg1)->window = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_window_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Window > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Window > *)& ((arg1)->window);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_parent_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::weak_ptr< UltraEngine::Widget > *arg2 = (std::weak_ptr< UltraEngine::Widget > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Widget > *)jarg2; 
  if (arg1) (arg1)->parent = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_parent_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Widget > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Widget > *)& ((arg1)->parent);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_m_kids_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg2 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg2; 
  if (arg1) (arg1)->m_kids = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_m_kids_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)& ((arg1)->m_kids);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_items_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::vector< UltraEngine::WidgetItem > *arg2 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< UltraEngine::WidgetItem > *)jarg2; 
  if (arg1) (arg1)->items = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_items_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< UltraEngine::WidgetItem > *)& ((arg1)->items);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_filtereditems_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::vector< UltraEngine::WidgetItem > *arg2 = (std::vector< UltraEngine::WidgetItem > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< UltraEngine::WidgetItem > *)jarg2; 
  if (arg1) (arg1)->filtereditems = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_filtereditems_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::vector< UltraEngine::WidgetItem > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< UltraEngine::WidgetItem > *)& ((arg1)->filtereditems);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_padding_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec4 *arg2 = (UltraEngine::iVec4 *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec4 *)jarg2; 
  if (arg1) (arg1)->padding = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_padding_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec4 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec4 *)& ((arg1)->padding);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_redrawfrequency_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->redrawfrequency = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_redrawfrequency_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->redrawfrequency);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_progress_set(void * jarg1, double jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  double arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->progress = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_progress_get(void * jarg1) {
  double jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->progress);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_slidervalue_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->slidervalue = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_slidervalue_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->slidervalue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_disabled_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->disabled = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_disabled_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->disabled);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_font_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Font > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Font > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Font > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->font = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_font_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Font > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Font > *) & ((arg1)->font);
  jresult = *result ? new std::shared_ptr< UltraEngine::Font >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_state_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WidgetState arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::WidgetState)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_state_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WidgetState result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WidgetState) ((arg1)->state);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_collapsed_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->collapsed = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_collapsed_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->collapsed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_blocks_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::vector< UltraEngine::WidgetBlock > *arg2 = (std::vector< UltraEngine::WidgetBlock > *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< UltraEngine::WidgetBlock > *)jarg2; 
  if (arg1) (arg1)->blocks = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_blocks_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::vector< UltraEngine::WidgetBlock > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< UltraEngine::WidgetBlock > *)& ((arg1)->blocks);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_sensitivity_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sensitivity = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_sensitivity_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->sensitivity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_m_pixmap_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Pixmap > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->m_pixmap = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_m_pixmap_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Pixmap > *) & ((arg1)->m_pixmap);
  jresult = *result ? new std::shared_ptr< UltraEngine::Pixmap >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_pixmap_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Pixmap > *) &(std::shared_ptr< UltraEngine::Pixmap > const &) ((arg1)->pixmap);
  jresult = *result ? new std::shared_ptr< UltraEngine::Pixmap >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_style_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->style = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_style_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->style);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_drawupdate_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->drawupdate = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_drawupdate_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->drawupdate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_lockstate_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lockstate = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_lockstate_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->lockstate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_filtertext_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  if (arg1) (arg1)->filtertext = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_filtertext_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) & ((arg1)->filtertext);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_fontweight_set(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->fontweight = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_fontweight_get(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->fontweight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_kids_set(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< UltraEngine::Widget > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Widget > > & type is null", 0);
    return ;
  } 
  if (arg1) (arg1)->kids = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_kids_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Widget > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Widget > > *) &(std::vector< std::shared_ptr< UltraEngine::Widget > > &) ((arg1)->kids);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget() {
  void * jresult ;
  UltraEngine::Widget *result = 0 ;
  
  result = (UltraEngine::Widget *)new SwigDirector_Widget();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Widget >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Widget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_SetParent__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->SetParent(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_SetParentSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->UltraEngine::Widget::SetParent(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemText(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetItemText(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemTextSwigExplicitWidget(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::SetItemText(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetItemText(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->GetItemText(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetItemTextSwigExplicitWidget(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->UltraEngine::Widget::GetItemText(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemIcon__SWIG_0(void * jarg1, int jarg2, void * jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->SetItemIcon(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemIconSwigExplicitWidget__SWIG_0(void * jarg1, int jarg2, void * jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->UltraEngine::Widget::SetItemIcon(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemIcon__SWIG_1(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  (arg1)->SetItemIcon(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemIconSwigExplicitWidget__SWIG_1(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  (arg1)->UltraEngine::Widget::SetItemIcon(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemPixmap(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  (arg1)->SetItemPixmap(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetItemPixmapSwigExplicitWidget(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  (arg1)->UltraEngine::Widget::SetItemPixmap(arg2,arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_AddNode__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  result = (arg1)->AddNode((UltraEngine::WString const &)*arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_AddNodeSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  result = (arg1)->UltraEngine::Widget::AddNode((UltraEngine::WString const &)*arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_AddNode__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->AddNode((UltraEngine::WString const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_AddNodeSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->UltraEngine::Widget::AddNode((UltraEngine::WString const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetInteractive(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetInteractive(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetInteractiveSwigExplicitWidget(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->UltraEngine::Widget::SetInteractive(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SelectText(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SelectText(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SelectTextSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->UltraEngine::Widget::SelectText(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetParent__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  (arg1)->SetParent(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetParentSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  (arg1)->UltraEngine::Widget::SetParent(arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Reload(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  nlohmann::json *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Reload(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_ReloadSwigExplicitWidget(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  nlohmann::json *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->UltraEngine::Widget::Reload(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Save(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  nlohmann::json *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save(*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_SaveSwigExplicitWidget(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  nlohmann::json *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (nlohmann::json *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->UltraEngine::Widget::Save(*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRadius(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SetRadius(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRadiusSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::SetRadius(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetRadius(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->GetRadius();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetRadiusSwigExplicitWidget(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->UltraEngine::Widget::GetRadius();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPointer(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MousePointer arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MousePointer)jarg2; 
  (arg1)->SetPointer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPointerSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MousePointer arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MousePointer)jarg2; 
  (arg1)->UltraEngine::Widget::SetPointer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_FilterItems(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->FilterItems((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_FilterItemsSwigExplicitWidget(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::FilterItems((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetNext(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetNext();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetNextSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetNext();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPrev(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPrev();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPrevSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetPrev();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_CursorBlink(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->CursorBlink();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_CursorBlinkSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::CursorBlink();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ModifyItem(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->ModifyItem(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ModifyItemSwigExplicitWidget(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::ModifyItem(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_WindowDragBegin(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->WindowDragBegin();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_WindowDragBeginSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::WindowDragBegin();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_ProcessEvent(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->ProcessEvent((UltraEngine::Event const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_ProcessEventSwigExplicitWidget(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->UltraEngine::Widget::ProcessEvent((UltraEngine::Event const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseMoveSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->UltraEngine::Widget::MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseEnterSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->UltraEngine::Widget::MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseLeaveSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->UltraEngine::Widget::MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseDownSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseRepeat(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseRepeat(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseRepeatSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::MouseRepeat(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseUpSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_LoseFocus(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_LoseFocusSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_DoubleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->DoubleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_DoubleClickSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::DoubleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_TripleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->TripleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_TripleClickSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::TripleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_GainFocus(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_GainFocusSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyDownSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->UltraEngine::Widget::KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyUp(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyUp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyUpSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->UltraEngine::Widget::KeyUp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyChar(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->KeyChar(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_KeyCharSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::KeyChar(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_MouseWheelSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->UltraEngine::Widget::MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Activate(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Activate();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ActivateSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Activate();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_FindOK(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->FindOK();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_FindOKSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->UltraEngine::Widget::FindOK();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Paint__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Paint(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_PaintSwigExplicitWidget__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::Paint(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Paint__SWIG_1(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Paint();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_PaintSwigExplicitWidget__SWIG_1(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Paint();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_FindCancel(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->FindCancel();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_FindCancelSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->UltraEngine::Widget::FindCancel();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetSensitivity(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SetSensitivity(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetSensitivitySwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::SetSensitivity(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Sort__SWIG_0(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->Sort(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SortSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->UltraEngine::Widget::Sort(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Hide(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Hide();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_HideSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Hide();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Show(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Show();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ShowSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Show();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Sort__SWIG_1(void * jarg1, long long jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int64_t arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int64_t)jarg2; 
  (arg1)->Sort(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SortSwigExplicitWidget__SWIG_1(void * jarg1, long long jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int64_t arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int64_t)jarg2; 
  (arg1)->UltraEngine::Widget::Sort(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_0(void * jarg1, void * jarg2, void * jarg3, float jarg4, void * jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  float arg4 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,arg4,(UltraEngine::Vec4 const &)*arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, void * jarg3, float jarg4, void * jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  float arg4 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,arg4,(UltraEngine::Vec4 const &)*arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_1(void * jarg1, void * jarg2, void * jarg3, float jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (float)jarg4; 
  result = (int)(arg1)->AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2, void * jarg3, float jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (float)jarg4; 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_2(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_2(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_3(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_3(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_4(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_4(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock(arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_5(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5, float jarg6, float jarg7) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  float arg6 ;
  float arg7 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  result = (int)(arg1)->AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5,arg6,arg7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_5(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5, float jarg6, float jarg7) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  float arg6 ;
  float arg7 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5,arg6,arg7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_6(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5, float jarg6) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  float arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = (float)jarg6; 
  result = (int)(arg1)->AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_6(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5, float jarg6) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  float arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = (float)jarg6; 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_7(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  result = (int)(arg1)->AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_7(void * jarg1, void * jarg2, void * jarg3, void * jarg4, unsigned int jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  bool arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_8(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_8(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::Vec4 *arg4 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::Vec4 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::Vec4 const &)*arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_9(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_9(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_10(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5, int jarg6) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::iVec2 *arg4 = 0 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::iVec2 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg6 = (int)jarg6; 
  result = (int)(arg1)->AddBlock((UltraEngine::WString const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::iVec2 const &)*arg4,(UltraEngine::Vec4 const &)*arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_10(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5, int jarg6) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::iVec2 *arg4 = 0 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::iVec2 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  arg6 = (int)jarg6; 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::WString const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::iVec2 const &)*arg4,(UltraEngine::Vec4 const &)*arg5,arg6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlock__SWIG_11(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::iVec2 *arg4 = 0 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::iVec2 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddBlock((UltraEngine::WString const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::iVec2 const &)*arg4,(UltraEngine::Vec4 const &)*arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddBlockSwigExplicitWidget__SWIG_11(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  UltraEngine::iVec2 *arg4 = 0 ;
  UltraEngine::Vec4 *arg5 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg4 = (UltraEngine::iVec2 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  arg5 = (UltraEngine::Vec4 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddBlock((UltraEngine::WString const &)*arg2,(UltraEngine::iVec2 const &)*arg3,(UltraEngine::iVec2 const &)*arg4,(UltraEngine::Vec4 const &)*arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Invalidate__SWIG_0(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->Invalidate(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_InvalidateSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->UltraEngine::Widget::Invalidate(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Invalidate__SWIG_1(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Invalidate();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_InvalidateSwigExplicitWidget__SWIG_1(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Invalidate();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Refresh(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Refresh();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_RefreshSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Refresh();
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Widget_Debug(void * jarg1) {
  char * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Debug();
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Widget_DebugSwigExplicitWidget(void * jarg1) {
  char * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::Debug();
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetFontScale(void * jarg1, float jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  (arg1)->SetFontScale(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetFontScaleSwigExplicitWidget(void * jarg1, float jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  (arg1)->UltraEngine::Widget::SetFontScale(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetFontWeight(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetFontWeight(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetFontWeightSwigExplicitWidget(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->UltraEngine::Widget::SetFontWeight(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Lock(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Lock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_LockSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Lock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Unlock(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Unlock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_UnlockSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Unlock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Expand(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Expand();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ExpandSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Expand();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Collapse(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Collapse();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_CollapseSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Collapse();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Collapsed(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Collapsed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_CollapsedSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->UltraEngine::Widget::Collapsed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColor__SWIG_0(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5, int jarg6) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  UltraEngine::WidgetColor arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (UltraEngine::WidgetColor)jarg6; 
  (arg1)->SetColor(arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColorSwigExplicitWidget__SWIG_0(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5, int jarg6) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  UltraEngine::WidgetColor arg6 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (UltraEngine::WidgetColor)jarg6; 
  (arg1)->UltraEngine::Widget::SetColor(arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColor__SWIG_1(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->SetColor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColorSwigExplicitWidget__SWIG_1(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->UltraEngine::Widget::SetColor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColor__SWIG_2(void * jarg1, float jarg2, float jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->SetColor(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColorSwigExplicitWidget__SWIG_2(void * jarg1, float jarg2, float jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->UltraEngine::Widget::SetColor(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColor__SWIG_3(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::WidgetColor arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::WidgetColor)jarg3; 
  (arg1)->SetColor((UltraEngine::Vec4 const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColorSwigExplicitWidget__SWIG_3(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  UltraEngine::WidgetColor arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::WidgetColor)jarg3; 
  (arg1)->UltraEngine::Widget::SetColor((UltraEngine::Vec4 const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColor__SWIG_4(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->SetColor((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetColorSwigExplicitWidget__SWIG_4(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::Vec4 *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Vec4 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Vec4 const & type is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::SetColor((UltraEngine::Vec4 const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetState__SWIG_0(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WidgetState arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::WidgetState)jarg2; 
  (arg1)->SetState(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetStateSwigExplicitWidget__SWIG_0(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WidgetState arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::WidgetState)jarg2; 
  (arg1)->UltraEngine::Widget::SetState(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetState__SWIG_1(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetState(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetStateSwigExplicitWidget__SWIG_1(void * jarg1, unsigned int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  (arg1)->UltraEngine::Widget::SetState(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetState(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WidgetState result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WidgetState)(arg1)->GetState();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetStateSwigExplicitWidget(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WidgetState result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WidgetState)(arg1)->UltraEngine::Widget::GetState();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIcon__SWIG_0(void * jarg1, void * jarg2, int jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->SetIcon(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIconSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, int jarg3, float jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  float arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->UltraEngine::Widget::SetIcon(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIcon__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  (arg1)->SetIcon(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIconSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  (arg1)->UltraEngine::Widget::SetIcon(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIcon__SWIG_2(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  (arg1)->SetIcon(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetIconSwigExplicitWidget__SWIG_2(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Icon > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Icon > *)jarg2; 
  (arg1)->UltraEngine::Widget::SetIcon(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmap__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  UltraEngine::TextureFilter arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  arg4 = (UltraEngine::TextureFilter)jarg4; 
  (arg1)->SetPixmap(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmapSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  UltraEngine::TextureFilter arg4 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  arg4 = (UltraEngine::TextureFilter)jarg4; 
  (arg1)->UltraEngine::Widget::SetPixmap(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmap__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  (arg1)->SetPixmap(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmapSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  UltraEngine::PixmapAlignment arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (UltraEngine::PixmapAlignment)jarg3; 
  (arg1)->UltraEngine::Widget::SetPixmap(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmap__SWIG_2(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  (arg1)->SetPixmap(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPixmapSwigExplicitWidget__SWIG_2(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  (arg1)->UltraEngine::Widget::SetPixmap(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPixmap(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPixmap();
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPixmapSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetPixmap();
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Enable(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Enable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_EnableSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Enable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Disable(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Disable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_DisableSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Disable();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_GetDisabled(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->GetDisabled();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_GetDisabledSwigExplicitWidget(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->UltraEngine::Widget::GetDisabled();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRange(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SetRange(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRangeSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->UltraEngine::Widget::SetRange(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetValue(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SetValue(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetValueSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::SetValue(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetValue(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->GetValue();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetValueSwigExplicitWidget(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->UltraEngine::Widget::GetValue();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetRange(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetRange();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetRangeSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetRange();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetSelectedItem(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->GetSelectedItem();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_GetSelectedItemSwigExplicitWidget(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->UltraEngine::Widget::GetSelectedItem();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SelectItem(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SelectItem(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SelectItemSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::SelectItem(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddItem__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddItemSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)(arg1)->UltraEngine::Widget::AddItem((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddItem__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_AddItemSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->UltraEngine::Widget::AddItem((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetParent(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetParent();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetParentSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetParent();
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetText(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetTextSwigExplicitWidget(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_CountItems(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->CountItems();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Widget_CountItemsSwigExplicitWidget(void * jarg1) {
  int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->UltraEngine::Widget::CountItems();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ClearItems(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ClearItems();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_ClearItemsSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::ClearItems();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_RemoveItem(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->RemoveItem(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_RemoveItemSwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::RemoveItem(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetProgress(void * jarg1, double jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  double arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  (arg1)->SetProgress(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetProgressSwigExplicitWidget(void * jarg1, double jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  double arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  (arg1)->UltraEngine::Widget::SetProgress(arg2);
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_GetProgress(void * jarg1) {
  double jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double)(arg1)->GetProgress();
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_GetProgressSwigExplicitWidget(void * jarg1) {
  double jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double)(arg1)->UltraEngine::Widget::GetProgress();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRedrawFrequency(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SetRedrawFrequency(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetRedrawFrequencySwigExplicitWidget(void * jarg1, int jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->UltraEngine::Widget::SetRedrawFrequency(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_AddText(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->AddText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_AddTextSwigExplicitWidget(void * jarg1, void * jarg2) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::AddText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Redraw(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Redraw();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_RedrawSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Redraw();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPadding(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetPadding(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetPaddingSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::SetPadding(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPadding(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec4 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPadding();
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPaddingSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec4 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetPadding();
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPosition__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (arg1)->GetPosition(arg2);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPositionSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (arg1)->UltraEngine::Widget::GetPosition(arg2);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPosition__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPosition();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetPositionSwigExplicitWidget__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetPosition();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetSizeSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Cut(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Cut();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_CutSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Cut();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Copy(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Copy();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_CopySwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Copy();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Paste(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Paste();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_PasteSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::Paste();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_ClientSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ClientSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_ClientSizeSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::ClientSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetInterface(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Interface > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetInterface();
  jresult = result ? new std::shared_ptr< UltraEngine::Interface >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetInterfaceSwigExplicitWidget(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Interface > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetInterface();
  jresult = result ? new std::shared_ptr< UltraEngine::Interface >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetText__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (arg1)->GetText(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetTextSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (arg1)->UltraEngine::Widget::GetText(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetText__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetText();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetTextSwigExplicitWidget__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Widget::GetText();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetLayout(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetLayout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetLayoutSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::SetLayout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetShape__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetShapeSwigExplicitWidget__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::SetShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetShape__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->SetShape((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_SetShapeSwigExplicitWidget__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->UltraEngine::Widget::SetShape((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Hidden__SWIG_0(void * jarg1, unsigned int jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (bool)(arg1)->Hidden(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_HiddenSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (bool)(arg1)->UltraEngine::Widget::Hidden(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_Hidden__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Hidden();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_HiddenSwigExplicitWidget__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->UltraEngine::Widget::Hidden();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetWidgetAtPoint(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->GetWidgetAtPoint(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_GetWidgetAtPointSwigExplicitWidget(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->UltraEngine::Widget::GetWidgetAtPoint(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_UpdateLayout(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_UpdateLayoutSwigExplicitWidget(void * jarg1) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UltraEngine::Widget::UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_DrawSwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Draw__(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw__(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_Draw__SwigExplicitWidget(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Widget *arg1 = (UltraEngine::Widget *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Widget > *)jarg1;
  arg1 = (UltraEngine::Widget *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->UltraEngine::Widget::Draw__(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_director_connect(void *objarg, SwigDirector_Widget::SWIG_Callback0_t callback0, SwigDirector_Widget::SWIG_Callback1_t callback1, SwigDirector_Widget::SWIG_Callback2_t callback2, SwigDirector_Widget::SWIG_Callback3_t callback3, SwigDirector_Widget::SWIG_Callback4_t callback4, SwigDirector_Widget::SWIG_Callback5_t callback5, SwigDirector_Widget::SWIG_Callback6_t callback6, SwigDirector_Widget::SWIG_Callback7_t callback7, SwigDirector_Widget::SWIG_Callback8_t callback8, SwigDirector_Widget::SWIG_Callback9_t callback9, SwigDirector_Widget::SWIG_Callback10_t callback10, SwigDirector_Widget::SWIG_Callback11_t callback11, SwigDirector_Widget::SWIG_Callback12_t callback12, SwigDirector_Widget::SWIG_Callback13_t callback13, SwigDirector_Widget::SWIG_Callback14_t callback14, SwigDirector_Widget::SWIG_Callback15_t callback15, SwigDirector_Widget::SWIG_Callback16_t callback16, SwigDirector_Widget::SWIG_Callback17_t callback17, SwigDirector_Widget::SWIG_Callback18_t callback18, SwigDirector_Widget::SWIG_Callback19_t callback19, SwigDirector_Widget::SWIG_Callback20_t callback20, SwigDirector_Widget::SWIG_Callback21_t callback21, SwigDirector_Widget::SWIG_Callback22_t callback22, SwigDirector_Widget::SWIG_Callback23_t callback23, SwigDirector_Widget::SWIG_Callback24_t callback24, SwigDirector_Widget::SWIG_Callback25_t callback25, SwigDirector_Widget::SWIG_Callback26_t callback26, SwigDirector_Widget::SWIG_Callback27_t callback27, SwigDirector_Widget::SWIG_Callback28_t callback28, SwigDirector_Widget::SWIG_Callback29_t callback29, SwigDirector_Widget::SWIG_Callback30_t callback30, SwigDirector_Widget::SWIG_Callback31_t callback31, SwigDirector_Widget::SWIG_Callback32_t callback32, SwigDirector_Widget::SWIG_Callback33_t callback33, SwigDirector_Widget::SWIG_Callback34_t callback34, SwigDirector_Widget::SWIG_Callback35_t callback35, SwigDirector_Widget::SWIG_Callback36_t callback36, SwigDirector_Widget::SWIG_Callback37_t callback37, SwigDirector_Widget::SWIG_Callback38_t callback38, SwigDirector_Widget::SWIG_Callback39_t callback39, SwigDirector_Widget::SWIG_Callback40_t callback40, SwigDirector_Widget::SWIG_Callback41_t callback41, SwigDirector_Widget::SWIG_Callback42_t callback42, SwigDirector_Widget::SWIG_Callback43_t callback43, SwigDirector_Widget::SWIG_Callback44_t callback44, SwigDirector_Widget::SWIG_Callback45_t callback45, SwigDirector_Widget::SWIG_Callback46_t callback46, SwigDirector_Widget::SWIG_Callback47_t callback47, SwigDirector_Widget::SWIG_Callback48_t callback48, SwigDirector_Widget::SWIG_Callback49_t callback49, SwigDirector_Widget::SWIG_Callback50_t callback50, SwigDirector_Widget::SWIG_Callback51_t callback51, SwigDirector_Widget::SWIG_Callback52_t callback52, SwigDirector_Widget::SWIG_Callback53_t callback53, SwigDirector_Widget::SWIG_Callback54_t callback54, SwigDirector_Widget::SWIG_Callback55_t callback55, SwigDirector_Widget::SWIG_Callback56_t callback56, SwigDirector_Widget::SWIG_Callback57_t callback57, SwigDirector_Widget::SWIG_Callback58_t callback58, SwigDirector_Widget::SWIG_Callback59_t callback59, SwigDirector_Widget::SWIG_Callback60_t callback60, SwigDirector_Widget::SWIG_Callback61_t callback61, SwigDirector_Widget::SWIG_Callback62_t callback62, SwigDirector_Widget::SWIG_Callback63_t callback63, SwigDirector_Widget::SWIG_Callback64_t callback64, SwigDirector_Widget::SWIG_Callback65_t callback65, SwigDirector_Widget::SWIG_Callback66_t callback66, SwigDirector_Widget::SWIG_Callback67_t callback67, SwigDirector_Widget::SWIG_Callback68_t callback68, SwigDirector_Widget::SWIG_Callback69_t callback69, SwigDirector_Widget::SWIG_Callback70_t callback70, SwigDirector_Widget::SWIG_Callback71_t callback71, SwigDirector_Widget::SWIG_Callback72_t callback72, SwigDirector_Widget::SWIG_Callback73_t callback73, SwigDirector_Widget::SWIG_Callback74_t callback74, SwigDirector_Widget::SWIG_Callback75_t callback75, SwigDirector_Widget::SWIG_Callback76_t callback76, SwigDirector_Widget::SWIG_Callback77_t callback77, SwigDirector_Widget::SWIG_Callback78_t callback78, SwigDirector_Widget::SWIG_Callback79_t callback79, SwigDirector_Widget::SWIG_Callback80_t callback80, SwigDirector_Widget::SWIG_Callback81_t callback81, SwigDirector_Widget::SWIG_Callback82_t callback82, SwigDirector_Widget::SWIG_Callback83_t callback83, SwigDirector_Widget::SWIG_Callback84_t callback84, SwigDirector_Widget::SWIG_Callback85_t callback85, SwigDirector_Widget::SWIG_Callback86_t callback86, SwigDirector_Widget::SWIG_Callback87_t callback87, SwigDirector_Widget::SWIG_Callback88_t callback88, SwigDirector_Widget::SWIG_Callback89_t callback89, SwigDirector_Widget::SWIG_Callback90_t callback90, SwigDirector_Widget::SWIG_Callback91_t callback91, SwigDirector_Widget::SWIG_Callback92_t callback92, SwigDirector_Widget::SWIG_Callback93_t callback93, SwigDirector_Widget::SWIG_Callback94_t callback94, SwigDirector_Widget::SWIG_Callback95_t callback95, SwigDirector_Widget::SWIG_Callback96_t callback96, SwigDirector_Widget::SWIG_Callback97_t callback97, SwigDirector_Widget::SWIG_Callback98_t callback98, SwigDirector_Widget::SWIG_Callback99_t callback99, SwigDirector_Widget::SWIG_Callback100_t callback100, SwigDirector_Widget::SWIG_Callback101_t callback101, SwigDirector_Widget::SWIG_Callback102_t callback102, SwigDirector_Widget::SWIG_Callback103_t callback103, SwigDirector_Widget::SWIG_Callback104_t callback104, SwigDirector_Widget::SWIG_Callback105_t callback105, SwigDirector_Widget::SWIG_Callback106_t callback106, SwigDirector_Widget::SWIG_Callback107_t callback107, SwigDirector_Widget::SWIG_Callback108_t callback108, SwigDirector_Widget::SWIG_Callback109_t callback109, SwigDirector_Widget::SWIG_Callback110_t callback110, SwigDirector_Widget::SWIG_Callback111_t callback111, SwigDirector_Widget::SWIG_Callback112_t callback112, SwigDirector_Widget::SWIG_Callback113_t callback113, SwigDirector_Widget::SWIG_Callback114_t callback114, SwigDirector_Widget::SWIG_Callback115_t callback115, SwigDirector_Widget::SWIG_Callback116_t callback116, SwigDirector_Widget::SWIG_Callback117_t callback117, SwigDirector_Widget::SWIG_Callback118_t callback118, SwigDirector_Widget::SWIG_Callback119_t callback119, SwigDirector_Widget::SWIG_Callback120_t callback120, SwigDirector_Widget::SWIG_Callback121_t callback121, SwigDirector_Widget::SWIG_Callback122_t callback122, SwigDirector_Widget::SWIG_Callback123_t callback123, SwigDirector_Widget::SWIG_Callback124_t callback124, SwigDirector_Widget::SWIG_Callback125_t callback125, SwigDirector_Widget::SWIG_Callback126_t callback126, SwigDirector_Widget::SWIG_Callback127_t callback127, SwigDirector_Widget::SWIG_Callback128_t callback128, SwigDirector_Widget::SWIG_Callback129_t callback129, SwigDirector_Widget::SWIG_Callback130_t callback130, SwigDirector_Widget::SWIG_Callback131_t callback131, SwigDirector_Widget::SWIG_Callback132_t callback132) {
  std::shared_ptr< UltraEngine::Widget > *obj = (std::shared_ptr< UltraEngine::Widget > *)objarg;
  // Keep a local instance of the smart pointer around while we are using the raw pointer
  // Avoids using smart pointer specific API.
  SwigDirector_Widget *director = static_cast<SwigDirector_Widget *>(obj->operator->());
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29, callback30, callback31, callback32, callback33, callback34, callback35, callback36, callback37, callback38, callback39, callback40, callback41, callback42, callback43, callback44, callback45, callback46, callback47, callback48, callback49, callback50, callback51, callback52, callback53, callback54, callback55, callback56, callback57, callback58, callback59, callback60, callback61, callback62, callback63, callback64, callback65, callback66, callback67, callback68, callback69, callback70, callback71, callback72, callback73, callback74, callback75, callback76, callback77, callback78, callback79, callback80, callback81, callback82, callback83, callback84, callback85, callback86, callback87, callback88, callback89, callback90, callback91, callback92, callback93, callback94, callback95, callback96, callback97, callback98, callback99, callback100, callback101, callback102, callback103, callback104, callback105, callback106, callback107, callback108, callback109, callback110, callback111, callback112, callback113, callback114, callback115, callback116, callback117, callback118, callback119, callback120, callback121, callback122, callback123, callback124, callback125, callback126, callback127, callback128, callback129, callback130, callback131, callback132);
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_7(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::PanelStyle arg1 ;
  UltraEngine::PanelStyle arg2 ;
  UltraEngine::PanelStyle result;
  
  arg1 = (UltraEngine::PanelStyle)jarg1; 
  arg2 = (UltraEngine::PanelStyle)jarg2; 
  result = (UltraEngine::PanelStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Panel() {
  void * jresult ;
  UltraEngine::Panel *result = 0 ;
  
  result = (UltraEngine::Panel *)new UltraEngine::Panel();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Panel >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Panel_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Panel *arg1 = (UltraEngine::Panel *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Panel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Panel > *)jarg1;
  arg1 = (UltraEngine::Panel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Panel(void * jarg1) {
  UltraEngine::Panel *arg1 = (UltraEngine::Panel *) 0 ;
  std::shared_ptr< UltraEngine::Panel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Panel > *)jarg1;
  arg1 = (UltraEngine::Panel *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreatePanel__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::PanelStyle arg6 ;
  std::shared_ptr< UltraEngine::Panel > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::PanelStyle)jarg6; 
  result = UltraEngine::CreatePanel(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Panel >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreatePanel__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Panel > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreatePanel(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Panel >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_8(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::SliderStyle arg1 ;
  UltraEngine::SliderStyle arg2 ;
  UltraEngine::SliderStyle result;
  
  arg1 = (UltraEngine::SliderStyle)jarg1; 
  arg2 = (UltraEngine::SliderStyle)jarg2; 
  result = (UltraEngine::SliderStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider() {
  void * jresult ;
  UltraEngine::Slider *result = 0 ;
  
  result = (UltraEngine::Slider *)new UltraEngine::Slider();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Slider >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_SetValue(void * jarg1, int jarg2) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SetValue(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseRepeat(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseRepeat(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Slider_GetValueAtPosition(void * jarg1, int jarg2) {
  int jresult ;
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->GetValueAtPosition(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Slider(void * jarg1) {
  UltraEngine::Slider *arg1 = (UltraEngine::Slider *) 0 ;
  std::shared_ptr< UltraEngine::Slider > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Slider > *)jarg1;
  arg1 = (UltraEngine::Slider *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateSlider__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::SliderStyle arg6 ;
  std::shared_ptr< UltraEngine::Slider > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::SliderStyle)jarg6; 
  result = UltraEngine::CreateSlider(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Slider >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateSlider__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Slider > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateSlider(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Slider >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_9(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::LabelStyle arg1 ;
  UltraEngine::LabelStyle arg2 ;
  UltraEngine::LabelStyle result;
  
  arg1 = (UltraEngine::LabelStyle)jarg1; 
  arg2 = (UltraEngine::LabelStyle)jarg2; 
  result = (UltraEngine::LabelStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label() {
  void * jresult ;
  UltraEngine::Label *result = 0 ;
  
  result = (UltraEngine::Label *)new UltraEngine::Label();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Label >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Label *arg1 = (UltraEngine::Label *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Label > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Label > *)jarg1;
  arg1 = (UltraEngine::Label *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Label(void * jarg1) {
  UltraEngine::Label *arg1 = (UltraEngine::Label *) 0 ;
  std::shared_ptr< UltraEngine::Label > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Label > *)jarg1;
  arg1 = (UltraEngine::Label *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateLabel__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > arg6 ;
  UltraEngine::LabelStyle arg7 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Widget > *)jarg6; 
  arg7 = (UltraEngine::LabelStyle)jarg7; 
  result = UltraEngine::CreateLabel((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateLabel__SWIG_1(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Widget > *)jarg6; 
  result = UltraEngine::CreateLabel((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_10(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::ButtonStyle arg1 ;
  UltraEngine::ButtonStyle arg2 ;
  UltraEngine::ButtonStyle result;
  
  arg1 = (UltraEngine::ButtonStyle)jarg1; 
  arg2 = (UltraEngine::ButtonStyle)jarg2; 
  result = (UltraEngine::ButtonStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button() {
  void * jresult ;
  UltraEngine::Button *result = 0 ;
  
  result = (UltraEngine::Button *)new UltraEngine::Button();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Button >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_LoseFocus(void * jarg1) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_SetState(void * jarg1, int jarg2) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  UltraEngine::WidgetState arg2 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::WidgetState)jarg2; 
  (arg1)->SetState(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Button(void * jarg1) {
  UltraEngine::Button *arg1 = (UltraEngine::Button *) 0 ;
  std::shared_ptr< UltraEngine::Button > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Button > *)jarg1;
  arg1 = (UltraEngine::Button *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateButton__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > arg6 ;
  UltraEngine::ButtonStyle arg7 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Widget > *)jarg6; 
  arg7 = (UltraEngine::ButtonStyle)jarg7; 
  result = UltraEngine::CreateButton((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateButton__SWIG_1(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Widget > arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Widget > *)jarg6; 
  result = UltraEngine::CreateButton((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_11(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::TextFieldStyle arg1 ;
  UltraEngine::TextFieldStyle arg2 ;
  UltraEngine::TextFieldStyle result;
  
  arg1 = (UltraEngine::TextFieldStyle)jarg1; 
  arg2 = (UltraEngine::TextFieldStyle)jarg2; 
  result = (UltraEngine::TextFieldStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TextField() {
  void * jresult ;
  UltraEngine::TextField *result = 0 ;
  
  result = (UltraEngine::TextField *)new UltraEngine::TextField();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::TextField >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TextField_GetText__SWIG_0(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  bool arg2 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  result = (arg1)->GetText(arg2);
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TextField_GetText__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetText();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_SelectText(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SelectText(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_KeyUp(void * jarg1, int jarg2) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyUp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_DoubleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->DoubleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_TripleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->TripleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_GainFocus(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_LoseFocus(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_KeyChar(void * jarg1, int jarg2) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->KeyChar(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_CursorBlink(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->CursorBlink();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_Cut(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Cut();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_Copy(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Copy();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_Paste(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Paste();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_SetText(void * jarg1, void * jarg2) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextField_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TextField(void * jarg1) {
  UltraEngine::TextField *arg1 = (UltraEngine::TextField *) 0 ;
  std::shared_ptr< UltraEngine::TextField > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextField > *)jarg1;
  arg1 = (UltraEngine::TextField *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTextField__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::TextFieldStyle arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::TextFieldStyle)jarg6; 
  result = UltraEngine::CreateTextField(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTextField__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateTextField(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BinaryOR__SWIG_12(int jarg1, int jarg2) {
  int jresult ;
  UltraEngine::TreeViewStyle arg1 ;
  UltraEngine::TreeViewStyle arg2 ;
  UltraEngine::TreeViewStyle result;
  
  arg1 = (UltraEngine::TreeViewStyle)jarg1; 
  arg2 = (UltraEngine::TreeViewStyle)jarg2; 
  result = (UltraEngine::TreeViewStyle)UltraEngine::operator |(arg1,arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeView_root_get(void * jarg1) {
  void * jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::TreeViewNode > *) &(std::shared_ptr< UltraEngine::TreeViewNode > const &) ((arg1)->root);
  jresult = *result ? new std::shared_ptr< UltraEngine::TreeViewNode >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TreeView() {
  void * jresult ;
  UltraEngine::TreeView *result = 0 ;
  
  result = (UltraEngine::TreeView *)new UltraEngine::TreeView();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::TreeView >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_UpdateColors(void * jarg1) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateColors();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_SelectNode__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->SelectNode(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_SelectNode__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  (arg1)->SelectNode(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_FilterItems(void * jarg1, void * jarg2) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->FilterItems((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeView_GetSelectedNode(void * jarg1) {
  void * jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetSelectedNode();
  jresult = result ? new std::shared_ptr< UltraEngine::TreeViewNode >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeView_GetSelectedNodes(void * jarg1) {
  void * jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetSelectedNodes();
  jresult = new std::vector< std::shared_ptr< UltraEngine::TreeViewNode > >((const std::vector< std::shared_ptr< UltraEngine::TreeViewNode > > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_DoubleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->DoubleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_GainFocus(void * jarg1) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_LoseFocus(void * jarg1) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_KeyUp(void * jarg1, int jarg2) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyUp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_KeyChar(void * jarg1, int jarg2) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->KeyChar(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_UpdateLayout(void * jarg1) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeView_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT int SWIGSTDCALL CSharp_TreeView_DrawNode__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)(arg1)->DrawNode(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TreeView_DrawNode__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->DrawNode(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TreeView_DrawNode__SWIG_2(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > arg2 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::TreeViewNode > *)jarg2; 
  result = (int)(arg1)->DrawNode(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TreeView(void * jarg1) {
  UltraEngine::TreeView *arg1 = (UltraEngine::TreeView *) 0 ;
  std::shared_ptr< UltraEngine::TreeView > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeView > *)jarg1;
  arg1 = (UltraEngine::TreeView *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TreeViewNode() {
  void * jresult ;
  UltraEngine::TreeViewNode *result = 0 ;
  
  result = (UltraEngine::TreeViewNode *)new UltraEngine::TreeViewNode();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::TreeViewNode >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_userdata_set(void * jarg1, void * jarg2) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::Object > *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > tempnull2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? (std::shared_ptr< UltraEngine::Object > *)jarg2 : &tempnull2; 
  if (arg1) (arg1)->userdata = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeViewNode_userdata_get(void * jarg1) {
  void * jresult ;
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Object > *) & ((arg1)->userdata);
  jresult = *result ? new std::shared_ptr< UltraEngine::Object >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_SetParent__SWIG_0(void * jarg1, void * jarg2) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  (arg1)->SetParent(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_Reset(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Reset();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_SetText(void * jarg1, void * jarg2) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_Expand(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Expand();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_Collapse(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Collapse();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_Toggle(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Toggle();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TreeViewNode_ClearNodes(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ClearNodes();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeViewNode_AddNode__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Icon > arg3 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Icon > *)jarg3; 
  result = (arg1)->AddNode((UltraEngine::WString const &)*arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TreeViewNode_AddNode__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->AddNode((UltraEngine::WString const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TreeViewNode_SetParent__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->SetParent(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TreeViewNode_TestSetParent(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  result = (bool)(arg1)->TestSetParent(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TreeViewNode(void * jarg1) {
  UltraEngine::TreeViewNode *arg1 = (UltraEngine::TreeViewNode *) 0 ;
  std::shared_ptr< UltraEngine::TreeViewNode > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TreeViewNode > *)jarg1;
  arg1 = (UltraEngine::TreeViewNode *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTreeView__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::TreeViewStyle arg6 ;
  std::shared_ptr< UltraEngine::TreeView > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::TreeViewStyle)jarg6; 
  result = UltraEngine::CreateTreeView(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::TreeView >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTreeView__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::TreeView > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateTreeView(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::TreeView >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TextArea() {
  void * jresult ;
  UltraEngine::TextArea *result = 0 ;
  
  result = (UltraEngine::TextArea *)new UltraEngine::TextArea();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::TextArea >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_AddText(void * jarg1, void * jarg2) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->AddText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_UpdateLayout(void * jarg1) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_SetShape(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_SetText(void * jarg1, void * jarg2) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_TextArea_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TextArea(void * jarg1) {
  UltraEngine::TextArea *arg1 = (UltraEngine::TextArea *) 0 ;
  std::shared_ptr< UltraEngine::TextArea > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::TextArea > *)jarg1;
  arg1 = (UltraEngine::TextArea *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTextArea__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::TextAreaStyle arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::TextAreaStyle)jarg6; 
  result = UltraEngine::CreateTextArea(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTextArea__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateTextArea(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tabber() {
  void * jresult ;
  UltraEngine::Tabber *result = 0 ;
  
  result = (UltraEngine::Tabber *)new UltraEngine::Tabber();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Tabber >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Tabber_AddItem__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Tabber_AddItem__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tabber_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tabber_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tabber_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tabber_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Tabber(void * jarg1) {
  UltraEngine::Tabber *arg1 = (UltraEngine::Tabber *) 0 ;
  std::shared_ptr< UltraEngine::Tabber > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Tabber > *)jarg1;
  arg1 = (UltraEngine::Tabber *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTabber__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::TabberStyle arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::TabberStyle)jarg6; 
  result = UltraEngine::CreateTabber(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTabber__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateTabber(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ListBox() {
  void * jresult ;
  UltraEngine::ListBox *result = 0 ;
  
  result = (UltraEngine::ListBox *)new UltraEngine::ListBox();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::ListBox >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_FilterItems(void * jarg1, void * jarg2) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->FilterItems((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_ModifyItem(void * jarg1, int jarg2, void * jarg3) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  UltraEngine::WString *arg3 = 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  
  arg3 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg3) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->ModifyItem(arg2,(UltraEngine::WString const &)*arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_ClearItems(void * jarg1) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ClearItems();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListBox_ProcessEvent(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::Event *arg2 = 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::Event *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->ProcessEvent((UltraEngine::Event const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_UpdateLayout(void * jarg1) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->UpdateLayout();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_SelectItem(void * jarg1, int jarg2) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->SelectItem(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ListBox_AddItem__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ListBox_AddItem__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_GainFocus(void * jarg1) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_LoseFocus(void * jarg1) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ListBox_SetShape(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ListBox_OK(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->OK();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ListBox(void * jarg1) {
  UltraEngine::ListBox *arg1 = (UltraEngine::ListBox *) 0 ;
  std::shared_ptr< UltraEngine::ListBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ListBox > *)jarg1;
  arg1 = (UltraEngine::ListBox *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateListBox__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::ListBoxStyle arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::ListBoxStyle)jarg6; 
  result = UltraEngine::CreateListBox(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateListBox__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateListBox(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ProgressBar() {
  void * jresult ;
  UltraEngine::ProgressBar *result = 0 ;
  
  result = (UltraEngine::ProgressBar *)new UltraEngine::ProgressBar();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::ProgressBar >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ProgressBar_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::ProgressBar *arg1 = (UltraEngine::ProgressBar *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::ProgressBar > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ProgressBar > *)jarg1;
  arg1 = (UltraEngine::ProgressBar *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ProgressBar(void * jarg1) {
  UltraEngine::ProgressBar *arg1 = (UltraEngine::ProgressBar *) 0 ;
  std::shared_ptr< UltraEngine::ProgressBar > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ProgressBar > *)jarg1;
  arg1 = (UltraEngine::ProgressBar *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateProgressBar__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5, int jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  UltraEngine::ProgressBarStyle arg6 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  arg6 = (UltraEngine::ProgressBarStyle)jarg6; 
  result = UltraEngine::CreateProgressBar(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateProgressBar__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateProgressBar(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ComboBox() {
  void * jresult ;
  UltraEngine::ComboBox *result = 0 ;
  
  result = (UltraEngine::ComboBox *)new UltraEngine::ComboBox();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::ComboBox >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_FilterItems(void * jarg1, void * jarg2) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->FilterItems((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_ClearItems(void * jarg1) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ClearItems();
}


SWIGEXPORT int SWIGSTDCALL CSharp_ComboBox_AddItem__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  int jresult ;
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ComboBox_AddItem__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->AddItem((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_MouseWheel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseWheel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_GainFocus(void * jarg1) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_LoseFocus(void * jarg1) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ComboBox_WindowDragBegin(void * jarg1) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->WindowDragBegin();
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ComboBox(void * jarg1) {
  UltraEngine::ComboBox *arg1 = (UltraEngine::ComboBox *) 0 ;
  std::shared_ptr< UltraEngine::ComboBox > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::ComboBox > *)jarg1;
  arg1 = (UltraEngine::ComboBox *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateComboBox(int jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Widget > arg5 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  if (jarg5) arg5 = *(std::shared_ptr< UltraEngine::Widget > *)jarg5; 
  result = UltraEngine::CreateComboBox(arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MenuPanel() {
  void * jresult ;
  UltraEngine::MenuPanel *result = 0 ;
  
  result = (UltraEngine::MenuPanel *)new UltraEngine::MenuPanel();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::MenuPanel >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MenuPanel_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_MenuPanel_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_MenuPanel_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_MenuPanel_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_MenuPanel_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MenuPanel(void * jarg1) {
  UltraEngine::MenuPanel *arg1 = (UltraEngine::MenuPanel *) 0 ;
  std::shared_ptr< UltraEngine::MenuPanel > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::MenuPanel > *)jarg1;
  arg1 = (UltraEngine::MenuPanel *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Menu() {
  void * jresult ;
  UltraEngine::Menu *result = 0 ;
  
  result = (UltraEngine::Menu *)new UltraEngine::Menu();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Menu >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_MouseDown(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseDown(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_DoubleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->DoubleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_TripleClick(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->TripleClick(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_MouseUp(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  UltraEngine::MouseButton arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->MouseUp(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_MouseMove(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseMove(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_GainFocus(void * jarg1) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->GainFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_LoseFocus(void * jarg1) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->LoseFocus();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_MouseEnter(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseEnter(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_MouseLeave(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->MouseLeave(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_KeyDown(void * jarg1, int jarg2) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  (arg1)->KeyDown(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_KeyChar(void * jarg1, int jarg2) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->KeyChar(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_WindowDragBegin(void * jarg1) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->WindowDragBegin();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Menu_Draw(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Draw(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Menu(void * jarg1) {
  UltraEngine::Menu *arg1 = (UltraEngine::Menu *) 0 ;
  std::shared_ptr< UltraEngine::Menu > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Menu > *)jarg1;
  arg1 = (UltraEngine::Menu *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateMenu__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  UltraEngine::MenuStyle arg3 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  arg3 = (UltraEngine::MenuStyle)jarg3; 
  result = UltraEngine::CreateMenu((UltraEngine::WString const &)*arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateMenu__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Widget > arg2 ;
  std::shared_ptr< UltraEngine::Widget > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Widget > *)jarg2; 
  result = UltraEngine::CreateMenu((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Widget >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_WINVER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x500);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CORE_FONT_DEFAULT_get() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CORE_FONT_MENU_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CORE_FONT_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CORE_FONT_MESSAGE_get() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_text_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->text);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_display_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Display > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Display > *) &(std::shared_ptr< UltraEngine::Display > const &) ((arg1)->display);
  jresult = *result ? new std::shared_ptr< UltraEngine::Display >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_kids_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< UltraEngine::Window > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< UltraEngine::Window > > *) &(std::vector< std::shared_ptr< UltraEngine::Window > > const &) ((arg1)->kids);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Window() {
  void * jresult ;
  UltraEngine::Window *result = 0 ;
  
  result = (UltraEngine::Window *)new UltraEngine::Window();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Window >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Window(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Enable(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Enable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Disable(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Disable();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetText(void * jarg1, void * jarg2) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  (arg1)->SetText((UltraEngine::WString const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetText(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetText();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetParent(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetParent();
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetParent(void * jarg1, void * jarg2) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Window > *)jarg2; 
  (arg1)->SetParent(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetMouseAxis__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::Vec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (arg1)->GetMouseAxis(arg2);
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetMouseAxis__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::Vec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetMouseAxis();
  jresult = new UltraEngine::Vec2((const UltraEngine::Vec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetPointer(void * jarg1, int jarg2) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::MousePointer arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MousePointer)jarg2; 
  (arg1)->SetPointer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Paint(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Paint(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetBorder(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec4 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetBorder();
  jresult = new UltraEngine::iVec4((const UltraEngine::iVec4 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_ClientSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->ClientSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetPosition(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPosition();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetMinSize(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SetMinSize(arg2,arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetMinSize(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec2 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetMinSize();
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_HideMouse(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->HideMouse();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_ShowMouse(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->ShowMouse();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_FlushKeys(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->FlushKeys();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_FlushMouse(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->FlushMouse();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_KeyHit(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  result = (bool)(arg1)->KeyHit(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_KeyDown(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::KeyCode arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::KeyCode)jarg2; 
  result = (bool)(arg1)->KeyDown(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_MouseHit(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::MouseButton arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  result = (bool)(arg1)->MouseHit(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_MouseDown(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::MouseButton arg2 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::MouseButton)jarg2; 
  result = (bool)(arg1)->MouseDown(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Activate(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Activate();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetSize(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SetSize(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetShape__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->SetShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetShape__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  UltraEngine::iVec2 *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  arg3 = (UltraEngine::iVec2 *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->SetShape((UltraEngine::iVec2 const &)*arg2,(UltraEngine::iVec2 const &)*arg3);
}


SWIGEXPORT  HWND  SWIGSTDCALL CSharp_Window_GetHandle(void * jarg1) {
  HWND  jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  HWND result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetHandle();
  jresult = *(HWND*)&result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Maximize(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Maximize();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Minimize(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Minimize();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Restore(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Restore();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_Minimized(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Minimized();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_Maximized(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Maximized();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Close(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Close();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_Closed(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Closed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_Hidden(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Hidden();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Show(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Show();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_Hide(void * jarg1) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Hide();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Window_GetMousePosition(void * jarg1) {
  void * jresult ;
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  UltraEngine::iVec3 result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetMousePosition();
  jresult = new UltraEngine::iVec3((const UltraEngine::iVec3 &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetMousePosition__SWIG_0(void * jarg1, int jarg2, int jarg3) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->SetMousePosition(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_SetMousePosition__SWIG_1(void * jarg1, void * jarg2) {
  UltraEngine::Window *arg1 = (UltraEngine::Window *) 0 ;
  UltraEngine::iVec2 *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Window > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Window > *)jarg1;
  arg1 = (UltraEngine::Window *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::iVec2 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return ;
  } 
  (arg1)->SetMousePosition((UltraEngine::iVec2 const &)*arg2);
}


SWIGEXPORT  LRESULT  SWIGSTDCALL CSharp_Window_WndProc( HWND  jarg1, unsigned int jarg2,  WPARAM  jarg3,  LPARAM  jarg4) {
  LRESULT  jresult ;
  HWND arg1 ;
  UINT arg2 ;
  WPARAM arg3 ;
  LPARAM arg4 ;
  LRESULT result;
  
  arg1 = *(HWND*)&jarg1; 
  arg2 = (UINT)jarg2; 
  arg3 = *(WPARAM*)&jarg3; 
  arg4 = *(LPARAM*)&jarg4; 
  result = UltraEngine::Window::WndProc(arg1,arg2,arg3,arg4);
  jresult = *(LRESULT*)&result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Window_TimerCallback(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Event *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  bool result;
  
  arg1 = (UltraEngine::Event *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::Event const & type is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  result = (bool)UltraEngine::Window::TimerCallback((UltraEngine::Event const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TransformCoord__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  UltraEngine::iVec2 *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Window > arg2 ;
  std::shared_ptr< UltraEngine::Window > arg3 ;
  UltraEngine::iVec2 result;
  
  arg1 = (UltraEngine::iVec2 *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::iVec2 const & type is null", 0);
    return 0;
  } 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Window > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Window > *)jarg3; 
  result = UltraEngine::TransformCoord((UltraEngine::iVec2 const &)*arg1,arg2,arg3);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TransformCoord__SWIG_1(int jarg1, int jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Window > arg3 ;
  std::shared_ptr< UltraEngine::Window > arg4 ;
  UltraEngine::iVec2 result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Window > *)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Window > *)jarg4; 
  result = UltraEngine::TransformCoord(arg1,arg2,arg3,arg4);
  jresult = new UltraEngine::iVec2((const UltraEngine::iVec2 &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ActiveWindow() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Window > result;
  
  result = UltraEngine::ActiveWindow();
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateWindow__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Display > arg6 ;
  UltraEngine::WindowStyles arg7 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Display > *)jarg6; 
  arg7 = (UltraEngine::WindowStyles)jarg7; 
  result = UltraEngine::CreateWindow((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateWindow__SWIG_1(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Display > arg6 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Display > *)jarg6; 
  result = UltraEngine::CreateWindow((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateWindow__SWIG_2(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = UltraEngine::CreateWindow((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateWindow__SWIG_3(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Window > arg6 ;
  UltraEngine::WindowStyles arg7 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Window > *)jarg6; 
  arg7 = (UltraEngine::WindowStyles)jarg7; 
  result = UltraEngine::CreateWindow((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateWindow__SWIG_4(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Window > arg6 ;
  std::shared_ptr< UltraEngine::Window > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Window > *)jarg6; 
  result = UltraEngine::CreateWindow((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Window >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Timer_frequency_get(void * jarg1) {
  int jresult ;
  UltraEngine::Timer *arg1 = (UltraEngine::Timer *) 0 ;
  std::shared_ptr< UltraEngine::Timer > *smartarg1 = 0 ;
  int *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Timer > *)jarg1;
  arg1 = (UltraEngine::Timer *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int *) &(int const &) ((arg1)->frequency);
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Timer() {
  void * jresult ;
  UltraEngine::Timer *result = 0 ;
  
  result = (UltraEngine::Timer *)new UltraEngine::Timer();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Timer >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Timer(void * jarg1) {
  UltraEngine::Timer *arg1 = (UltraEngine::Timer *) 0 ;
  std::shared_ptr< UltraEngine::Timer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Timer > *)jarg1;
  arg1 = (UltraEngine::Timer *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTimer(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::shared_ptr< UltraEngine::Timer > result;
  
  arg1 = (int)jarg1; 
  result = UltraEngine::CreateTimer(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Timer >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PipeStream() {
  void * jresult ;
  UltraEngine::PipeStream *result = 0 ;
  
  result = (UltraEngine::PipeStream *)new UltraEngine::PipeStream();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::PipeStream >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_PipeStream(void * jarg1) {
  UltraEngine::PipeStream *arg1 = (UltraEngine::PipeStream *) 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::PipeStream > *)jarg1;
  arg1 = (UltraEngine::PipeStream *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_PipeStream_GetSize(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::PipeStream *arg1 = (UltraEngine::PipeStream *) 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::PipeStream > *)jarg1;
  arg1 = (UltraEngine::PipeStream *)(smartarg1 ? smartarg1->get() : 0); 
  result = (uint64_t)(arg1)->GetSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PipeStream_Close(void * jarg1) {
  UltraEngine::PipeStream *arg1 = (UltraEngine::PipeStream *) 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::PipeStream > *)jarg1;
  arg1 = (UltraEngine::PipeStream *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Close();
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_PipeStream_Write(void * jarg1, void * jarg2, unsigned long long jarg3) {
  unsigned long long jresult ;
  UltraEngine::PipeStream *arg1 = (UltraEngine::PipeStream *) 0 ;
  void *arg2 = (void *) 0 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::PipeStream > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::PipeStream > *)jarg1;
  arg1 = (UltraEngine::PipeStream *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = (uint64_t)(arg1)->Write((void const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Process_path_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->path);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Process_readstream_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::PipeStream > *) &(std::shared_ptr< UltraEngine::PipeStream > const &) ((arg1)->readstream);
  jresult = *result ? new std::shared_ptr< UltraEngine::PipeStream >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Process_writestream_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::PipeStream > *) &(std::shared_ptr< UltraEngine::PipeStream > const &) ((arg1)->writestream);
  jresult = *result ? new std::shared_ptr< UltraEngine::PipeStream >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Process_errorstream_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::PipeStream > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::PipeStream > *) &(std::shared_ptr< UltraEngine::PipeStream > const &) ((arg1)->errorstream);
  jresult = *result ? new std::shared_ptr< UltraEngine::PipeStream >(*result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Process() {
  void * jresult ;
  UltraEngine::Process *result = 0 ;
  
  result = (UltraEngine::Process *)new UltraEngine::Process();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Process >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Process(void * jarg1) {
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Process_GetHandle(void * jarg1) {
  void * jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  HANDLE result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (HANDLE)(arg1)->GetHandle();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Process_GetStatus(void * jarg1) {
  int jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  UltraEngine::ProcessStatus result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::ProcessStatus)(arg1)->GetStatus();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Process_Wait(void * jarg1) {
  int jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->Wait();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Process_Close(void * jarg1) {
  int jresult ;
  UltraEngine::Process *arg1 = (UltraEngine::Process *) 0 ;
  std::shared_ptr< UltraEngine::Process > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Process > *)jarg1;
  arg1 = (UltraEngine::Process *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->Close();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateProcess__SWIG_0(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Process > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::CreateProcess((UltraEngine::WString const &)*arg1,(UltraEngine::WString const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Process >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateProcess__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Process > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::CreateProcess((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Process >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_StreamBuffer_Save(void * jarg1, wchar_t * jarg2) {
  unsigned int jresult ;
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  std::wstring arg2 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = (bool)(arg1)->Save(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_StreamBuffer_Resize__SWIG_0(void * jarg1, unsigned long long jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  uint64_t arg2 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (bool)(arg1)->Resize(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_StreamBuffer_Resize__SWIG_1(void * jarg1, unsigned long long jarg2) {
  unsigned int jresult ;
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  result = (bool)(arg1)->Resize(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StreamBuffer_Poke(void * jarg1, unsigned long long jarg2, char * jarg3, unsigned long long jarg4) {
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  uint64_t arg2 ;
  char *arg3 = (char *) 0 ;
  uint64_t arg4 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (uint64_t)jarg4; 
  (arg1)->Poke(arg2,(char const *)arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_StreamBuffer_Peek(void * jarg1, unsigned long long jarg2, char * jarg3, unsigned long long jarg4) {
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  uint64_t arg2 ;
  char *arg3 = (char *) 0 ;
  uint64_t arg4 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (uint64_t)jarg4; 
  (arg1)->Peek(arg2,(char const *)arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_StreamBuffer_Copy(void * jarg1, unsigned long long jarg2, void * jarg3, unsigned long long jarg4, unsigned long long jarg5) {
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  uint64_t arg2 ;
  std::shared_ptr< UltraEngine::Buffer > arg3 ;
  uint64_t arg4 ;
  uint64_t arg5 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (uint64_t)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg3; 
  arg4 = (uint64_t)jarg4; 
  arg5 = (uint64_t)jarg5; 
  (arg1)->Copy(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_StreamBuffer_Clear(void * jarg1) {
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Clear();
}


SWIGEXPORT char * SWIGSTDCALL CSharp_StreamBuffer_data(void * jarg1) {
  char * jresult ;
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  char *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  result = (char *)(arg1)->data();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_StreamBuffer() {
  void * jresult ;
  UltraEngine::StreamBuffer *result = 0 ;
  
  result = (UltraEngine::StreamBuffer *)new UltraEngine::StreamBuffer();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::StreamBuffer >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_StreamBuffer(void * jarg1) {
  UltraEngine::StreamBuffer *arg1 = (UltraEngine::StreamBuffer *) 0 ;
  std::shared_ptr< UltraEngine::StreamBuffer > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::StreamBuffer > *)jarg1;
  arg1 = (UltraEngine::StreamBuffer *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateStreamBuffer(void * jarg1, unsigned long long jarg2, unsigned long long jarg3) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  uint64_t arg2 ;
  uint64_t arg3 ;
  std::shared_ptr< UltraEngine::StreamBuffer > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (uint64_t)jarg2; 
  arg3 = (uint64_t)jarg3; 
  result = UltraEngine::CreateStreamBuffer(arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::StreamBuffer >(result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_MaxThreads() {
  int jresult ;
  int result;
  
  result = (int)UltraEngine::MaxThreads();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Thread() {
  void * jresult ;
  UltraEngine::Thread *result = 0 ;
  
  result = (UltraEngine::Thread *)new UltraEngine::Thread();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Thread >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Thread(void * jarg1) {
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Thread_GetResult(void * jarg1) {
  void * jresult ;
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Object > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetResult();
  jresult = result ? new std::shared_ptr< UltraEngine::Object >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Thread_Wait(void * jarg1) {
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Wait();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Thread_Resume(void * jarg1) {
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Resume();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Thread_Pause(void * jarg1) {
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Pause();
}


SWIGEXPORT int SWIGSTDCALL CSharp_Thread_GetState(void * jarg1) {
  int jresult ;
  UltraEngine::Thread *arg1 = (UltraEngine::Thread *) 0 ;
  std::shared_ptr< UltraEngine::Thread > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Thread > *)jarg1;
  arg1 = (UltraEngine::Thread *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int)(arg1)->GetState();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateThread__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > (*arg1)(std::shared_ptr< UltraEngine::Object >) = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >)) 0 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  arg1 = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >))jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = UltraEngine::CreateThread(arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateThread__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > (*arg1)(std::shared_ptr< UltraEngine::Object >) = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >)) 0 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  arg1 = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >))jarg1; 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  result = UltraEngine::CreateThread(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateThread__SWIG_2(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Object > (*arg1)(std::shared_ptr< UltraEngine::Object >) = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >)) 0 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  arg1 = (std::shared_ptr< UltraEngine::Object > (*)(std::shared_ptr< UltraEngine::Object >))jarg1; 
  result = UltraEngine::CreateThread(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateThread__SWIG_3(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  std::function< void () > arg1 ;
  bool arg2 ;
  std::function< void () > *argp1 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  argp1 = (std::function< void () > *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::function< void () >", 0);
    return 0;
  }
  arg1 = *argp1; 
  arg2 = jarg2 ? true : false; 
  result = UltraEngine::CreateThread(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateThread__SWIG_4(void * jarg1) {
  void * jresult ;
  std::function< void () > arg1 ;
  std::function< void () > *argp1 ;
  std::shared_ptr< UltraEngine::Thread > result;
  
  argp1 = (std::function< void () > *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::function< void () >", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = UltraEngine::CreateThread(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Thread >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Mutex() {
  void * jresult ;
  UltraEngine::Mutex *result = 0 ;
  
  result = (UltraEngine::Mutex *)new UltraEngine::Mutex();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Mutex >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Mutex(void * jarg1) {
  UltraEngine::Mutex *arg1 = (UltraEngine::Mutex *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Mutex > *)jarg1;
  arg1 = (UltraEngine::Mutex *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mutex_Wait(void * jarg1) {
  UltraEngine::Mutex *arg1 = (UltraEngine::Mutex *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Mutex > *)jarg1;
  arg1 = (UltraEngine::Mutex *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Wait();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mutex_Lock(void * jarg1) {
  UltraEngine::Mutex *arg1 = (UltraEngine::Mutex *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Mutex > *)jarg1;
  arg1 = (UltraEngine::Mutex *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Lock();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mutex_Unlock(void * jarg1) {
  UltraEngine::Mutex *arg1 = (UltraEngine::Mutex *) 0 ;
  std::shared_ptr< UltraEngine::Mutex > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Mutex > *)jarg1;
  arg1 = (UltraEngine::Mutex *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Unlock();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateMutex() {
  void * jresult ;
  std::shared_ptr< UltraEngine::Mutex > result;
  
  result = UltraEngine::CreateMutex();
  jresult = result ? new std::shared_ptr< UltraEngine::Mutex >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Loader_dpi_set(void * jarg1, float jarg2) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dpi = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Loader_dpi_get(void * jarg1) {
  float jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (float) ((arg1)->dpi);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Loader_extensions_set(void * jarg1, void * jarg2) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::vector< std::wstring > *arg2 = (std::vector< std::wstring > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::wstring > *)jarg2; 
  if (arg1) (arg1)->extensions = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Loader_extensions_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  std::vector< std::wstring > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::wstring > *)& ((arg1)->extensions);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Loader_mimetype_set(void * jarg1, wchar_t * jarg2) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::wstring *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return ;
  }
  std::wstring arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->mimetype = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Loader_mimetype_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  std::wstring *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::wstring *) & ((arg1)->mimetype);
  jresult = SWIG_csharp_wstring_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Loader_plugin_set(void * jarg1, void * jarg2) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::weak_ptr< UltraEngine::Plugin > *arg2 = (std::weak_ptr< UltraEngine::Plugin > *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::weak_ptr< UltraEngine::Plugin > *)jarg2; 
  if (arg1) (arg1)->plugin = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Loader_plugin_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  std::weak_ptr< UltraEngine::Plugin > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::weak_ptr< UltraEngine::Plugin > *)& ((arg1)->plugin);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Loader() {
  void * jresult ;
  UltraEngine::Loader *result = 0 ;
  
  result = (UltraEngine::Loader *)new UltraEngine::Loader();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Loader >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Loader_Reload__SWIG_0(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  UltraEngine::LoadFlags arg4 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (UltraEngine::LoadFlags)jarg4; 
  result = (bool)(arg1)->Reload(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Loader_Reload__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  result = (bool)(arg1)->Reload(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Loader_Continue(void * jarg1, void * jarg2) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Object > arg2 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Object > *)jarg2; 
  (arg1)->Continue(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Loader(void * jarg1) {
  UltraEngine::Loader *arg1 = (UltraEngine::Loader *) 0 ;
  std::shared_ptr< UltraEngine::Loader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Loader > *)jarg1;
  arg1 = (UltraEngine::Loader *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwSize_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwSize = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwSize_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwSize);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwFlags_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwFlags = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwFlags_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwFlags);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwFourCC_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwFourCC = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwFourCC_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwFourCC);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwRGBBitCount_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwRGBBitCount = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwRGBBitCount_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwRGBBitCount);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwRBitMask_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwRBitMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwRBitMask_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwRBitMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwGBitMask_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwGBitMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwGBitMask_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwGBitMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwBBitMask_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwBBitMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwBBitMask_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwBBitMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwABitMask_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwABitMask = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_PIXELFORMAT_dwABitMask_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  result = (DWORD) ((arg1)->dwABitMask);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_DDS_PIXELFORMAT() {
  void * jresult ;
  UltraEngine::DDS_PIXELFORMAT *result = 0 ;
  
  result = (UltraEngine::DDS_PIXELFORMAT *)new UltraEngine::DDS_PIXELFORMAT();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_DDS_PIXELFORMAT(void * jarg1) {
  UltraEngine::DDS_PIXELFORMAT *arg1 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_DXT10_dxgiFormat_set(void * jarg1, int jarg2) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UltraEngine::DXGI_FORMAT arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  arg2 = (UltraEngine::DXGI_FORMAT)jarg2; 
  if (arg1) (arg1)->dxgiFormat = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DDS_HEADER_DXT10_dxgiFormat_get(void * jarg1) {
  int jresult ;
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UltraEngine::DXGI_FORMAT result;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  result = (UltraEngine::DXGI_FORMAT) ((arg1)->dxgiFormat);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_DXT10_resourceDimension_set(void * jarg1, int jarg2) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UltraEngine::D3D10_RESOURCE_DIMENSION arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  arg2 = (UltraEngine::D3D10_RESOURCE_DIMENSION)jarg2; 
  if (arg1) (arg1)->resourceDimension = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DDS_HEADER_DXT10_resourceDimension_get(void * jarg1) {
  int jresult ;
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UltraEngine::D3D10_RESOURCE_DIMENSION result;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  result = (UltraEngine::D3D10_RESOURCE_DIMENSION) ((arg1)->resourceDimension);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_DXT10_miscFlag_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->miscFlag = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DDS_HEADER_DXT10_miscFlag_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT result;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  result = (UINT) ((arg1)->miscFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_DXT10_arraySize_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->arraySize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DDS_HEADER_DXT10_arraySize_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT result;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  result = (UINT) ((arg1)->arraySize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_DXT10_miscFlags2_set(void * jarg1, unsigned int jarg2) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->miscFlags2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DDS_HEADER_DXT10_miscFlags2_get(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  UINT result;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  result = (UINT) ((arg1)->miscFlags2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_DDS_HEADER_DXT10() {
  void * jresult ;
  UltraEngine::DDS_HEADER_DXT10 *result = 0 ;
  
  result = (UltraEngine::DDS_HEADER_DXT10 *)new UltraEngine::DDS_HEADER_DXT10();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_DDS_HEADER_DXT10(void * jarg1) {
  UltraEngine::DDS_HEADER_DXT10 *arg1 = (UltraEngine::DDS_HEADER_DXT10 *) 0 ;
  
  arg1 = (UltraEngine::DDS_HEADER_DXT10 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwSize_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwSize = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwSize_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwSize);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwFlags_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwFlags = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwFlags_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwFlags);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwHeight_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwHeight = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwHeight_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwHeight);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwWidth_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwWidth = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwWidth_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwWidth);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwPitchOrLinearSize_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwPitchOrLinearSize = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwPitchOrLinearSize_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwPitchOrLinearSize);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwDepth_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwDepth = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwDepth_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwDepth);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwMipMapCount_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwMipMapCount = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwMipMapCount_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwMipMapCount);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwReserved1_set(void * jarg1, void * jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD *arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD *)jarg2; 
  {
    size_t ii;
    DWORD *b = (DWORD *) arg1->dwReserved1;
    for (ii = 0; ii < (size_t)11; ii++) b[ii] = *((DWORD *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DDS_HEADER_dwReserved1_get(void * jarg1) {
  void * jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD *result = 0 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD *)(DWORD *) ((arg1)->dwReserved1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_ddspf_set(void * jarg1, void * jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  UltraEngine::DDS_PIXELFORMAT *arg2 = (UltraEngine::DDS_PIXELFORMAT *) 0 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (UltraEngine::DDS_PIXELFORMAT *)jarg2; 
  if (arg1) (arg1)->ddspf = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_DDS_HEADER_ddspf_get(void * jarg1) {
  void * jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  UltraEngine::DDS_PIXELFORMAT *result = 0 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (UltraEngine::DDS_PIXELFORMAT *)& ((arg1)->ddspf);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwCaps_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwCaps = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwCaps_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwCaps);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwCaps2_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwCaps2 = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwCaps2_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwCaps2);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwCaps3_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwCaps3 = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwCaps3_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwCaps3);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwCaps4_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwCaps4 = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwCaps4_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwCaps4);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDS_HEADER_dwReserved2_set(void * jarg1, unsigned long jarg2) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD arg2 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->dwReserved2 = arg2;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_DDS_HEADER_dwReserved2_get(void * jarg1) {
  unsigned long jresult ;
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  DWORD result;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  result = (DWORD) ((arg1)->dwReserved2);
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_DDS_HEADER() {
  void * jresult ;
  UltraEngine::DDS_HEADER *result = 0 ;
  
  result = (UltraEngine::DDS_HEADER *)new UltraEngine::DDS_HEADER();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_DDS_HEADER(void * jarg1) {
  UltraEngine::DDS_HEADER *arg1 = (UltraEngine::DDS_HEADER *) 0 ;
  
  arg1 = (UltraEngine::DDS_HEADER *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDSTextureLoader_loadpixmapmiplevel_set(void * jarg1, int jarg2) {
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->loadpixmapmiplevel = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DDSTextureLoader_loadpixmapmiplevel_get(void * jarg1) {
  int jresult ;
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->loadpixmapmiplevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_DDSTextureLoader_loadpixmapface_set(void * jarg1, int jarg2) {
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->loadpixmapface = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DDSTextureLoader_loadpixmapface_get(void * jarg1) {
  int jresult ;
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->loadpixmapface);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_DDSTextureLoader() {
  void * jresult ;
  UltraEngine::DDSTextureLoader *result = 0 ;
  
  result = (UltraEngine::DDSTextureLoader *)new UltraEngine::DDSTextureLoader();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::DDSTextureLoader >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DDSTextureLoader_Reload__SWIG_0(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  UltraEngine::LoadFlags arg4 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  arg4 = (UltraEngine::LoadFlags)jarg4; 
  result = (bool)(arg1)->Reload(arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_DDSTextureLoader_Reload__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Object > arg3 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Object > *)jarg3; 
  result = (bool)(arg1)->Reload(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_DDSTextureLoader_GetDXGIFormat(void * jarg1) {
  int jresult ;
  UltraEngine::DDS_PIXELFORMAT *arg1 = 0 ;
  UltraEngine::DXGI_FORMAT result;
  
  arg1 = (UltraEngine::DDS_PIXELFORMAT *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::DDS_PIXELFORMAT const & type is null", 0);
    return 0;
  } 
  result = (UltraEngine::DXGI_FORMAT)UltraEngine::DDSTextureLoader::GetDXGIFormat((UltraEngine::DDS_PIXELFORMAT const &)*arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_DDSTextureLoader(void * jarg1) {
  UltraEngine::DDSTextureLoader *arg1 = (UltraEngine::DDSTextureLoader *) 0 ;
  std::shared_ptr< UltraEngine::DDSTextureLoader > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::DDSTextureLoader > *)jarg1;
  arg1 = (UltraEngine::DDSTextureLoader *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Asset_Reset(void * jarg1) {
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  SwigDirector_Asset *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Asset *>(arg1);
  (darg)->Reset();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Asset_Destroy(void * jarg1) {
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  SwigDirector_Asset *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Asset *>(arg1);
  (darg)->Destroy();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Asset_DestroySwigExplicitAsset(void * jarg1) {
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  SwigDirector_Asset *darg = 0;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  darg = dynamic_cast<SwigDirector_Asset *>(arg1);
  (darg)->DestroySwigPublic();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Reload__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  UltraEngine::LoadFlags arg3 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  SwigDirector_Asset *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  arg3 = (UltraEngine::LoadFlags)jarg3; 
  darg = dynamic_cast<SwigDirector_Asset *>(arg1);
  result = (bool)(darg)->Reload(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Reload__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  SwigDirector_Asset *darg = 0;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  darg = dynamic_cast<SwigDirector_Asset *>(arg1);
  result = (bool)(darg)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Asset_path_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->path);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Asset() {
  void * jresult ;
  UltraEngine::Asset *result = 0 ;
  
  result = (UltraEngine::Asset *)new SwigDirector_Asset();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Asset >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Asset(void * jarg1) {
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Asset_GetPath(void * jarg1) {
  void * jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->GetPath();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Asset_GetPathSwigExplicitAsset(void * jarg1) {
  void * jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  UltraEngine::WString result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->UltraEngine::Asset::GetPath();
  jresult = new std::shared_ptr<  UltraEngine::WString >(new UltraEngine::WString((UltraEngine::WString &)result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Reload__SWIG_2(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Reload__SWIG_3(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Reload();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Asset_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Save__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_SaveSwigExplicitAsset__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->UltraEngine::Asset::Save((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_Save__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Asset_SaveSwigExplicitAsset__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Asset *arg1 = (UltraEngine::Asset *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Asset > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Asset > *)jarg1;
  arg1 = (UltraEngine::Asset *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->UltraEngine::Asset::Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Asset_director_connect(void *objarg, SwigDirector_Asset::SWIG_Callback0_t callback0, SwigDirector_Asset::SWIG_Callback1_t callback1, SwigDirector_Asset::SWIG_Callback2_t callback2, SwigDirector_Asset::SWIG_Callback3_t callback3, SwigDirector_Asset::SWIG_Callback4_t callback4, SwigDirector_Asset::SWIG_Callback5_t callback5, SwigDirector_Asset::SWIG_Callback6_t callback6, SwigDirector_Asset::SWIG_Callback7_t callback7, SwigDirector_Asset::SWIG_Callback8_t callback8, SwigDirector_Asset::SWIG_Callback9_t callback9) {
  std::shared_ptr< UltraEngine::Asset > *obj = (std::shared_ptr< UltraEngine::Asset > *)objarg;
  // Keep a local instance of the smart pointer around while we are using the raw pointer
  // Avoids using smart pointer specific API.
  SwigDirector_Asset *director = static_cast<SwigDirector_Asset *>(obj->operator->());
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FindCachedAsset(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::FindCachedAsset((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_title_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  UltraEngine::WString *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::WString *) &(UltraEngine::WString const &) ((arg1)->title);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Plugin_description_set(void * jarg1, char * jarg2) {
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Plugin_description_get(void * jarg1) {
  char * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) &(std::string &) ((arg1)->description);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Plugin_properties_set(void * jarg1, void * jarg2) {
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  nlohmann::json arg2 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  nlohmann::json *argp2 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  argp2 = (nlohmann::json *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null nlohmann::json", 0);
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->properties = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_properties_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  nlohmann::json result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result =  ((arg1)->properties);
  jresult = new nlohmann::json((const nlohmann::json &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Plugin() {
  void * jresult ;
  UltraEngine::Plugin *result = 0 ;
  
  result = (UltraEngine::Plugin *)new UltraEngine::Plugin();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Plugin >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Plugin(void * jarg1) {
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_CreateContext(void * jarg1) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  void *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result = (void *)(arg1)->CreateContext();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Plugin_FreeContext(void * jarg1, void * jarg2) {
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  void *arg2 = (void *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2; 
  (arg1)->FreeContext(arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_SaveTexture(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7, int jarg8, int jarg9) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::TextureType arg3 ;
  int arg4 ;
  int arg5 ;
  UltraEngine::TextureFormat arg6 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > *arg7 = 0 ;
  int arg8 ;
  UltraEngine::SaveFlags arg9 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::TextureType)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (UltraEngine::TextureFormat)jarg6; 
  arg7 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< UltraEngine::Pixmap > > const & type is null", 0);
    return 0;
  } 
  arg8 = (int)jarg8; 
  arg9 = (UltraEngine::SaveFlags)jarg9; 
  result = (bool)(arg1)->SaveTexture((UltraEngine::WString const &)*arg2,arg3,arg4,arg5,arg6,(std::vector< std::shared_ptr< UltraEngine::Pixmap > > const &)*arg7,arg8,arg9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_ConvertPixmap__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  result = (bool)(arg1)->ConvertPixmap(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_LoadPixmap(void * jarg1, void * jarg2, wchar_t * jarg3, int jarg4, int jarg5, float jarg6) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Buffer > arg2 ;
  std::wstring *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  float arg6 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null wstring", 0);
    return 0;
  }
  std::wstring arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (float)jarg6; 
  result = (arg1)->LoadPixmap(arg2,(std::wstring const &)*arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_ConvertPixmap__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->ConvertPixmap(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_Reload__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  UltraEngine::LoadFlags arg3 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  arg3 = (UltraEngine::LoadFlags)jarg3; 
  result = (bool)(arg1)->Reload(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_Reload__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Plugin_GetFunction(void * jarg1, char * jarg2) {
  void * jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  void *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (void *)(arg1)->GetFunction((std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Plugin_Reset(void * jarg1) {
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Reset();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_Reload__SWIG_2(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Plugin_Reload__SWIG_3(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Plugin *arg1 = (UltraEngine::Plugin *) 0 ;
  std::shared_ptr< UltraEngine::Plugin > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Plugin > *)jarg1;
  arg1 = (UltraEngine::Plugin *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Reload();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPlugin__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Plugin > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadPlugin((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Plugin >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPlugin__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Plugin > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadPlugin((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Plugin >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_texcoords_set(void * jarg1, void * jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  UltraEngine::Vec4 *arg2 = (UltraEngine::Vec4 *) 0 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (UltraEngine::Vec4 *)jarg2; 
  if (arg1) (arg1)->texcoords = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Character_texcoords_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  UltraEngine::Vec4 *result = 0 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (UltraEngine::Vec4 *)& ((arg1)->texcoords);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_id_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_id_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->id);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_spacing_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spacing = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_spacing_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->spacing);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_x_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_x_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_y_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_y_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_width_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_width_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->width);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Character_height_set(void * jarg1, int jarg2) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Character_height_get(void * jarg1) {
  int jresult ;
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  int result;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  result = (int) ((arg1)->height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Character() {
  void * jresult ;
  UltraEngine::Character *result = 0 ;
  
  result = (UltraEngine::Character *)new UltraEngine::Character();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Character(void * jarg1) {
  UltraEngine::Character *arg1 = (UltraEngine::Character *) 0 ;
  
  arg1 = (UltraEngine::Character *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Font() {
  void * jresult ;
  UltraEngine::Font *result = 0 ;
  
  result = (UltraEngine::Font *)new UltraEngine::Font();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Font >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Font(void * jarg1) {
  UltraEngine::Font *arg1 = (UltraEngine::Font *) 0 ;
  std::shared_ptr< UltraEngine::Font > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Font > *)jarg1;
  arg1 = (UltraEngine::Font *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Font_GetTextWidth__SWIG_0(void * jarg1, char * jarg2, int jarg3) {
  int jresult ;
  UltraEngine::Font *arg1 = (UltraEngine::Font *) 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Font > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Font > *)jarg1;
  arg1 = (UltraEngine::Font *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->GetTextWidth((std::string const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_Font_GetHeight(void * jarg1, int jarg2) {
  float jresult ;
  UltraEngine::Font *arg1 = (UltraEngine::Font *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Font > *smartarg1 = 0 ;
  float result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Font > *)jarg1;
  arg1 = (UltraEngine::Font *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  result = (float)(arg1)->GetHeight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Font_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Font *arg1 = (UltraEngine::Font *) 0 ;
  std::shared_ptr< UltraEngine::Font > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Font > *)jarg1;
  arg1 = (UltraEngine::Font *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadFont__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Font > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadFont(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Font >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadFont__SWIG_1(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  std::shared_ptr< UltraEngine::Font > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  result = UltraEngine::LoadFont(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Font >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadFont__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Font > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadFont((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Font >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadFont__SWIG_3(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Font > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadFont((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Font >(result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageFile_path_set(void * jarg1, void * jarg2) {
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return ;
  } 
  if (arg1) (arg1)->path = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_PackageFile_path_get(void * jarg1) {
  void * jresult ;
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  UltraEngine::WString *result = 0 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  result = (UltraEngine::WString *) & ((arg1)->path);
  jresult = new std::shared_ptr< const UltraEngine::WString >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageFile_type_set(void * jarg1, int jarg2) {
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_PackageFile_type_get(void * jarg1) {
  int jresult ;
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  int result;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageFile_index_set(void * jarg1, int jarg2) {
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  int arg2 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->index = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_PackageFile_index_get(void * jarg1) {
  int jresult ;
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  int result;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  result = (int) ((arg1)->index);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_PackageFile_size_set(void * jarg1, unsigned long long jarg2) {
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  uint64_t arg2 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  arg2 = (uint64_t)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_PackageFile_size_get(void * jarg1) {
  unsigned long long jresult ;
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  uint64_t result;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  result = (uint64_t) ((arg1)->size);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_PackageFile() {
  void * jresult ;
  UltraEngine::PackageFile *result = 0 ;
  
  result = (UltraEngine::PackageFile *)new UltraEngine::PackageFile();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_PackageFile(void * jarg1) {
  UltraEngine::PackageFile *arg1 = (UltraEngine::PackageFile *) 0 ;
  
  arg1 = (UltraEngine::PackageFile *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Package() {
  void * jresult ;
  UltraEngine::Package *result = 0 ;
  
  result = (UltraEngine::Package *)new UltraEngine::Package();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Package >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Package(void * jarg1) {
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Package_Reset(void * jarg1) {
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Reset();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Package_Reload__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  UltraEngine::LoadFlags arg3 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  arg3 = (UltraEngine::LoadFlags)jarg3; 
  result = (bool)(arg1)->Reload(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Package_Reload__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Stream > arg2 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  if (jarg2) arg2 = *(std::shared_ptr< UltraEngine::Stream > *)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Package_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Package_Reload__SWIG_2(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Package_Reload__SWIG_3(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Reload();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Package_FileType(void * jarg1, void * jarg2) {
  int jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (int)(arg1)->FileType((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Package_FileSize(void * jarg1, void * jarg2) {
  unsigned long long jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  uint64_t result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (uint64_t)(arg1)->FileSize((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Package_LoadDir(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  std::vector< UltraEngine::WString > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->LoadDir((UltraEngine::WString const &)*arg2);
  jresult = new std::vector< UltraEngine::WString >((const std::vector< UltraEngine::WString > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Package_ReadFile(void * jarg1, void * jarg2) {
  void * jresult ;
  UltraEngine::Package *arg1 = (UltraEngine::Package *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Package > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Stream > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Package > *)jarg1;
  arg1 = (UltraEngine::Package *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (arg1)->ReadFile((UltraEngine::WString const &)*arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Stream >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPackage__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Package > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadPackage((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Package >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPackage__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Package > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadPackage((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Package >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Pixmap() {
  void * jresult ;
  UltraEngine::Pixmap *result = 0 ;
  
  result = (UltraEngine::Pixmap *)new UltraEngine::Pixmap();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Pixmap >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Pixmap_format_get(void * jarg1) {
  int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  UltraEngine::TextureFormat *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::TextureFormat *) &(UltraEngine::TextureFormat const &) ((arg1)->format);
  jresult = (int)*result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *) &(UltraEngine::iVec2 const &) ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_blocks_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *) &(UltraEngine::iVec2 const &) ((arg1)->blocks);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_pixels_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Buffer > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< UltraEngine::Buffer > *) &(std::shared_ptr< UltraEngine::Buffer > const &) ((arg1)->pixels);
  jresult = *result ? new std::shared_ptr< UltraEngine::Buffer >(*result) : 0; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Pixmap_blocksize_get(void * jarg1) {
  int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  int *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int *) &(int const &) ((arg1)->blocksize);
  jresult = *result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_Reload__SWIG_0(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_Reload__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Reload();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Pixmap_Reset(void * jarg1) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Reset();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_ApplyFilter__SWIG_0(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  nlohmann::json *arg3 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (nlohmann::json *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "nlohmann::json const & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->ApplyFilter((UltraEngine::WString const &)*arg2,(nlohmann::json const &)*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_ApplyFilter__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->ApplyFilter((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Pixmap_Swizzle(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->Swizzle(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_0(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5, int jarg6, int jarg7, int jarg8, void * jarg9, void * jarg10) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Mutex > arg9 ;
  std::shared_ptr< UltraEngine::Mutex > arg10 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  if (jarg9) arg9 = *(std::shared_ptr< UltraEngine::Mutex > *)jarg9; 
  if (jarg10) arg10 = *(std::shared_ptr< UltraEngine::Mutex > *)jarg10; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_1(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5, int jarg6, int jarg7, int jarg8, void * jarg9) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Mutex > arg9 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  if (jarg9) arg9 = *(std::shared_ptr< UltraEngine::Mutex > *)jarg9; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_2(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5, int jarg6, int jarg7, int jarg8) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_3(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5, int jarg6, int jarg7) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_4(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5, int jarg6) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  int arg6 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5,arg6);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_5(void * jarg1, float jarg2, int jarg3, void * jarg4, int jarg5) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  arg5 = (int)jarg5; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4,arg5);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_6(void * jarg1, float jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > arg4 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg4; 
  result = (arg1)->MakeNormalMap(arg2,arg3,arg4);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_7(void * jarg1, float jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  result = (arg1)->MakeNormalMap(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_8(void * jarg1, float jarg2) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  result = (arg1)->MakeNormalMap(arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_MakeNormalMap__SWIG_9(void * jarg1) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->MakeNormalMap();
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_Resize(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->Resize(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Pixmap_Convert(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::TextureFormat arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::TextureFormat)jarg2; 
  result = (arg1)->Convert(arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_Save__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Pixmap_Save__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Pixmap_CopyRect(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, int jarg7, int jarg8) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  std::shared_ptr< UltraEngine::Pixmap > arg6 ;
  int arg7 ;
  int arg8 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  if (jarg6) arg6 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  (arg1)->CopyRect(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Pixmap_ReadPixel(void * jarg1, int jarg2, int jarg3) {
  int jresult ;
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReadPixel(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Pixmap_WritePixel(void * jarg1, int jarg2, int jarg3, int jarg4) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->WritePixel(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Pixmap_Fill(void * jarg1, int jarg2) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  (arg1)->Fill(arg2);
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Pixmap_GetDataSize(unsigned long long jarg1, unsigned long long jarg2, unsigned long long jarg3, unsigned long long jarg4) {
  unsigned long long jresult ;
  uint64_t arg1 ;
  uint64_t arg2 ;
  uint64_t arg3 ;
  uint64_t arg4 ;
  uint64_t result;
  
  arg1 = (uint64_t)jarg1; 
  arg2 = (uint64_t)jarg2; 
  arg3 = (uint64_t)jarg3; 
  arg4 = (uint64_t)jarg4; 
  result = (uint64_t)UltraEngine::Pixmap::GetDataSize(arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Pixmap(void * jarg1) {
  UltraEngine::Pixmap *arg1 = (UltraEngine::Pixmap *) 0 ;
  std::shared_ptr< UltraEngine::Pixmap > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Pixmap > *)jarg1;
  arg1 = (UltraEngine::Pixmap *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_0(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > arg3 ;
  int arg4 ;
  UltraEngine::SaveFlags arg5 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > const *argp3 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  argp3 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::shared_ptr< UltraEngine::Pixmap > > const", 0);
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (int)jarg4; 
  arg5 = (UltraEngine::SaveFlags)jarg5; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_1(void * jarg1, int jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > arg3 ;
  int arg4 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > const *argp3 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  argp3 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::shared_ptr< UltraEngine::Pixmap > > const", 0);
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (int)jarg4; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_2(void * jarg1, int jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > arg3 ;
  std::vector< std::shared_ptr< UltraEngine::Pixmap > > const *argp3 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  argp3 = (std::vector< std::shared_ptr< UltraEngine::Pixmap > > *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::shared_ptr< UltraEngine::Pixmap > > const", 0);
    return 0;
  }
  arg3 = *argp3; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_3(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_4(void * jarg1, int jarg2, void * jarg3, int jarg4, int jarg5) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  int arg4 ;
  UltraEngine::SaveFlags arg5 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (UltraEngine::SaveFlags)jarg5; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3,arg4,arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_5(void * jarg1, int jarg2, void * jarg3, int jarg4) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  int arg4 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  arg4 = (int)jarg4; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_SaveTexture__SWIG_6(void * jarg1, int jarg2, void * jarg3) {
  unsigned int jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::TextureType arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > arg3 ;
  bool result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::TextureType)jarg2; 
  if (jarg3) arg3 = *(std::shared_ptr< UltraEngine::Pixmap > *)jarg3; 
  result = (bool)UltraEngine::SaveTexture((UltraEngine::WString const &)*arg1,arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreatePixmap__SWIG_0(int jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Buffer > arg4 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  if (jarg4) arg4 = *(std::shared_ptr< UltraEngine::Buffer > *)jarg4; 
  result = UltraEngine::CreatePixmap(arg1,arg2,arg3,arg4);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreatePixmap__SWIG_1(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  UltraEngine::TextureFormat arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (UltraEngine::TextureFormat)jarg3; 
  result = UltraEngine::CreatePixmap(arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreatePixmap__SWIG_2(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = UltraEngine::CreatePixmap(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  UltraEngine::LoadFlags arg4 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (UltraEngine::LoadFlags)jarg4; 
  result = UltraEngine::LoadPixmap((UltraEngine::WString const &)*arg1,arg2,arg3,arg4);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = UltraEngine::LoadPixmap((UltraEngine::WString const &)*arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  result = UltraEngine::LoadPixmap((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_3(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadPixmap((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_4(void * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  int arg2 ;
  int arg3 ;
  UltraEngine::LoadFlags arg4 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (UltraEngine::LoadFlags)jarg4; 
  result = UltraEngine::LoadPixmap(arg1,arg2,arg3,arg4);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_5(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  int arg2 ;
  int arg3 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = UltraEngine::LoadPixmap(arg1,arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_6(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  int arg2 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (int)jarg2; 
  result = UltraEngine::LoadPixmap(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadPixmap__SWIG_7(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  result = UltraEngine::LoadPixmap(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Icon() {
  void * jresult ;
  UltraEngine::Icon *result = 0 ;
  
  result = (UltraEngine::Icon *)new UltraEngine::Icon();
  
  jresult = result ? new std::shared_ptr<  UltraEngine::Icon >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Icon(void * jarg1) {
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Icon_size_get(void * jarg1) {
  void * jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  UltraEngine::iVec2 *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  result = (UltraEngine::iVec2 *) &(UltraEngine::iVec2 const &) ((arg1)->size);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Icon_Save__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  UltraEngine::SaveFlags arg3 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg3 = (UltraEngine::SaveFlags)jarg3; 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Icon_Save__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  UltraEngine::WString *arg2 = 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg2) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->Save((UltraEngine::WString const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Icon_Rasterize__SWIG_0(void * jarg1, float jarg2, unsigned int jarg3) {
  void * jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  float arg2 ;
  bool arg3 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (arg1)->Rasterize(arg2,arg3);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Icon_Rasterize__SWIG_1(void * jarg1, float jarg2) {
  void * jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  float arg2 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Pixmap > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (float)jarg2; 
  result = (arg1)->Rasterize(arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Pixmap >(result) : 0; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Icon_Reload__SWIG_0(void * jarg1, int jarg2) {
  unsigned int jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = (bool)(arg1)->Reload(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Icon_Reload__SWIG_1(void * jarg1) {
  unsigned int jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool)(arg1)->Reload();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Icon_Reset(void * jarg1) {
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  (arg1)->Reset();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Icon_Copy(void * jarg1) {
  void * jresult ;
  UltraEngine::Icon *arg1 = (UltraEngine::Icon *) 0 ;
  std::shared_ptr< UltraEngine::Icon > *smartarg1 = 0 ;
  std::shared_ptr< UltraEngine::Asset > result;
  
  
  smartarg1 = (std::shared_ptr<  UltraEngine::Icon > *)jarg1;
  arg1 = (UltraEngine::Icon *)(smartarg1 ? smartarg1->get() : 0); 
  result = (arg1)->Copy();
  jresult = result ? new std::shared_ptr< UltraEngine::Asset >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadIcon__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Icon > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadIcon((UltraEngine::WString const &)*arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Icon >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadIcon__SWIG_1(void * jarg1) {
  void * jresult ;
  UltraEngine::WString *arg1 = 0 ;
  std::shared_ptr< UltraEngine::Icon > result;
  
  
  arg1 = (UltraEngine::WString *)(((std::shared_ptr< const UltraEngine::WString > *)jarg1) ? ((std::shared_ptr< const UltraEngine::WString > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "UltraEngine::WString const & reference is null", 0);
    return 0;
  } 
  result = UltraEngine::LoadIcon((UltraEngine::WString const &)*arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Icon >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadIcon__SWIG_2(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  UltraEngine::LoadFlags arg2 ;
  std::shared_ptr< UltraEngine::Icon > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  arg2 = (UltraEngine::LoadFlags)jarg2; 
  result = UltraEngine::LoadIcon(arg1,arg2);
  jresult = result ? new std::shared_ptr< UltraEngine::Icon >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_LoadIcon__SWIG_3(void * jarg1) {
  void * jresult ;
  std::shared_ptr< UltraEngine::Stream > arg1 ;
  std::shared_ptr< UltraEngine::Icon > result;
  
  if (jarg1) arg1 = *(std::shared_ptr< UltraEngine::Stream > *)jarg1; 
  result = UltraEngine::LoadIcon(arg1);
  jresult = result ? new std::shared_ptr< UltraEngine::Icon >(result) : 0; 
  return jresult;
}


SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_String_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::String > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_WString_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::WString > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Display_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Display > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_IDSystem_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::IDSystem > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Language_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Language > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Stream_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Stream > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Stream > * SWIGSTDCALL CSharp_BufferStream_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::BufferStream > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Stream >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_FileSystemWatcher_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::FileSystemWatcher > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_GameEngine_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::GameEngine > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Clock_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Clock > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Buffer_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Buffer > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Interface_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Interface > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_WidgetItem_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::WidgetItem > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Widget_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Widget > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Panel_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Panel > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Slider_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Slider > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Label_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Label > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Button_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Button > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_TextField_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::TextField > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_TreeView_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::TreeView > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_TreeViewNode_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::TreeViewNode > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_TextArea_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::TextArea > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Tabber_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Tabber > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_ListBox_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::ListBox > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_ProgressBar_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::ProgressBar > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_ComboBox_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::ComboBox > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_MenuPanel_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::MenuPanel > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Widget > * SWIGSTDCALL CSharp_Menu_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Menu > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Widget >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Window_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Window > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Timer_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Timer > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::BufferStream > * SWIGSTDCALL CSharp_PipeStream_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::PipeStream > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::BufferStream >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Process_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Process > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Buffer > * SWIGSTDCALL CSharp_StreamBuffer_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::StreamBuffer > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Buffer >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Thread_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Thread > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Mutex_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Mutex > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Loader_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Loader > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Loader > * SWIGSTDCALL CSharp_DDSTextureLoader_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::DDSTextureLoader > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Loader >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Object > * SWIGSTDCALL CSharp_Asset_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Asset > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Object >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Asset > * SWIGSTDCALL CSharp_Plugin_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Plugin > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Asset >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Asset > * SWIGSTDCALL CSharp_Font_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Font > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Asset >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Asset > * SWIGSTDCALL CSharp_Package_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Package > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Asset >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Asset > * SWIGSTDCALL CSharp_Pixmap_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Pixmap > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Asset >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< UltraEngine::Asset > * SWIGSTDCALL CSharp_Icon_SWIGSmartPtrUpcast(std::shared_ptr< UltraEngine::Icon > *jarg1) {
    return jarg1 ? new std::shared_ptr< UltraEngine::Asset >(*jarg1) : 0;
}

#ifdef __cplusplus
}
#endif

