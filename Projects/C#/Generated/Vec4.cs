//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Vec4 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Vec4(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Vec4 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Vec4() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UltraAppKitPINVOKE.delete_Vec4(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public float x {
    set {
      UltraAppKitPINVOKE.Vec4_x_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_x_get(swigCPtr);
      return ret;
    } 
  }

  public float r {
    set {
      UltraAppKitPINVOKE.Vec4_r_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_r_get(swigCPtr);
      return ret;
    } 
  }

  public float y {
    set {
      UltraAppKitPINVOKE.Vec4_y_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_y_get(swigCPtr);
      return ret;
    } 
  }

  public float g {
    set {
      UltraAppKitPINVOKE.Vec4_g_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_g_get(swigCPtr);
      return ret;
    } 
  }

  public float z {
    set {
      UltraAppKitPINVOKE.Vec4_z_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_z_get(swigCPtr);
      return ret;
    } 
  }

  public float b {
    set {
      UltraAppKitPINVOKE.Vec4_b_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_b_get(swigCPtr);
      return ret;
    } 
  }

  public float width {
    set {
      UltraAppKitPINVOKE.Vec4_width_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_width_get(swigCPtr);
      return ret;
    } 
  }

  public float w {
    set {
      UltraAppKitPINVOKE.Vec4_w_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_w_get(swigCPtr);
      return ret;
    } 
  }

  public float a {
    set {
      UltraAppKitPINVOKE.Vec4_a_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_a_get(swigCPtr);
      return ret;
    } 
  }

  public float height {
    set {
      UltraAppKitPINVOKE.Vec4_height_set(swigCPtr, value);
    } 
    get {
      float ret = UltraAppKitPINVOKE.Vec4_height_get(swigCPtr);
      return ret;
    } 
  }

  public Vec4() : this(UltraAppKitPINVOKE.new_Vec4__SWIG_0(), true) {
  }

  public Vec4(float x) : this(UltraAppKitPINVOKE.new_Vec4__SWIG_1(x), true) {
  }

  public Vec4(float x, float y) : this(UltraAppKitPINVOKE.new_Vec4__SWIG_2(x, y), true) {
  }

  public Vec4(float x, float y, float z) : this(UltraAppKitPINVOKE.new_Vec4__SWIG_3(x, y, z), true) {
  }

  public Vec4(float x, float y, float z, float w) : this(UltraAppKitPINVOKE.new_Vec4__SWIG_4(x, y, z, w), true) {
  }

  public float DistanceToPoint(Vec4 v) {
    float ret = UltraAppKitPINVOKE.Vec4_DistanceToPoint(swigCPtr, Vec4.getCPtr(v));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vec4 Minus() {
    Vec4 ret = new Vec4(UltraAppKitPINVOKE.Vec4_Minus__SWIG_0(swigCPtr), true);
    return ret;
  }

  public Vec4 Plus(Vec4 v) {
    Vec4 ret = new Vec4(UltraAppKitPINVOKE.Vec4_Plus(swigCPtr, Vec4.getCPtr(v)), true);
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vec4 Minus(Vec4 v) {
    Vec4 ret = new Vec4(UltraAppKitPINVOKE.Vec4_Minus__SWIG_1(swigCPtr, Vec4.getCPtr(v)), true);
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vec4 Multiply(Vec4 v) {
    Vec4 ret = new Vec4(UltraAppKitPINVOKE.Vec4_Multiply(swigCPtr, Vec4.getCPtr(v)), true);
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vec4 Divide(Vec4 v) {
    Vec4 ret = new Vec4(UltraAppKitPINVOKE.Vec4_Divide(swigCPtr, Vec4.getCPtr(v)), true);
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool NotEqual(Vec4 v) {
    bool ret = UltraAppKitPINVOKE.Vec4_NotEqual(swigCPtr, Vec4.getCPtr(v));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EqualEqual(Vec4 v) {
    bool ret = UltraAppKitPINVOKE.Vec4_EqualEqual(swigCPtr, Vec4.getCPtr(v));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_float IndexInto(uint n) {
    SWIGTYPE_p_float ret = new SWIGTYPE_p_float(UltraAppKitPINVOKE.Vec4_IndexInto(swigCPtr, n), false);
    return ret;
  }

  public bool LessThan(Vec4 v) {
    bool ret = UltraAppKitPINVOKE.Vec4_LessThan(swigCPtr, Vec4.getCPtr(v));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void PlusEqual(Vec4 f) {
    UltraAppKitPINVOKE.Vec4_PlusEqual(swigCPtr, Vec4.getCPtr(f));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
  }

  public void MinusEqual(Vec4 f) {
    UltraAppKitPINVOKE.Vec4_MinusEqual(swigCPtr, Vec4.getCPtr(f));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
  }

  public void MultiplyEqual(Vec4 f) {
    UltraAppKitPINVOKE.Vec4_MultiplyEqual(swigCPtr, Vec4.getCPtr(f));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
  }

  public void DivideEqual(Vec4 f) {
    UltraAppKitPINVOKE.Vec4_DivideEqual(swigCPtr, Vec4.getCPtr(f));
    if (UltraAppKitPINVOKE.SWIGPendingException.Pending) throw UltraAppKitPINVOKE.SWIGPendingException.Retrieve();
  }

}
